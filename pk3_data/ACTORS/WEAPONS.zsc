// Нужно обработать:

// WORKER
// NEED TO ADD
// WTF

// NEXT : 26450

// Predefines

class DUMP3Counter : Inventory { 
	Default {
		
		Inventory.MaxAmount 0x7FFFFFFF;
		+UNDROPPABLE;
		-INVBAR;
	}
}
class DUMP3Boolean: Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
		+UNDROPPABLE;
		-INVBAR;
	}
}

class DUMP3Cooldown : Powerup { 
	Default {
		
		Powerup.Duration -5;
		+UNDROPPABLE;
	}
}

class DUMP3ChainsawSlotFilled : DUMP3Boolean { -Inventory.UNDROPPABLE /*+Inventory.UNTOSSABLE*/ } { 
	Default {
	actor "DPT.HQ-Weapon" : Doomweapon
		
		Weapon.BobStyle InverseSmooth;
		Weapon.BobSpeed 1.6;
		Weapon.BobRangeY 0.6;
		Weapon.BobRangeX 1.0;
		//Weapon.UpSound "misc/w_pkup"
		//Decal "BulletChip"
		//+WEAPON.CHEATNOTweapon
	}
	States
	{
	Ready:
		TNT1 A 1 A_WeaponReady();
		Loop;
	Select:
		TNT1 A 0 A_Raise();
		TNT1 A 1 A_Raise();
		Loop;
	DeSelect:
		TNT1 A 0 A_Lower();
		TNT1 A 1 A_Lower();
		Loop;
	Fire:
		TNT1 A 1;
		Goto Ready;
}
}
class DUMP3weapon : "DPT.HQ-Weapon" { 
	Default {
	
	+CLIENTSIDEONLY;
	Weapon.BobStyle Alpha;
	Weapon.BobSpeed 2.5;
	Weapon.BobRangeX 0.2;
	Weapon.BobRangeY 0.5;
	+WEAPON.Ammo_OPTIONAL;
	+WEAPON.ALT_ammo_OPTIONAL;
	+WEAPON.NOALERT;
	}
	States
	{
	Zoom:
		"####" "#" 1 A_WeaponReady (WRF_NOFIRE);
		"####" "#" 0 A_JumpIfInventory("DUMP3weaponDropCooldown",1,"Ready");
		"####" "#" 0 A_GiveInventory("DUMP3weaponDropCounter",1);
		"####" "#" 0 A_JumpIfInventory("DUMP3weaponDropCounter",0,"DropGun");
		"####" "#" 1 A_WeaponReady (WRF_NOFIRE | WRF_ALLOWZOOM);
		"####" "#" 0 A_TakeInventory("DUMP3weaponDropCounter",999);
		"####" "#" 0 A_Jump(256, "Ready");
		Goto Ready;
	DropGun:
		"####" "#" 0 A_TakeInventory("DUMP3weaponDropCounter",999);
		"####" "#" 0 A_GiveInventory("DUMP3weaponDropCooldown",1);
		"####" "#" 0 A_Jump(256, "DropGunPickup");
		Goto DropGunPickup;
	DropGunPickup:
		"####" "#" 0 A_TakeInventory("DUMP3ChainsawSlotFilled",1);
		"####" "#" 0 A_TakeInventory("DUMP3weapon",1);
		"####" "#" 0();//A_JumpIf(CallACS("dump3_rerollgun") == 1, "RerollGun")
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
	RerollGun:
		"####" "#" 0;
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
}
}
// weapon dropping code mercilessly stolen from LegenDoom because I am the lazy
// also because it's pretty much what I would've done anyway and I ALReady DID IT ONCE
// Countdown timer for dropping weapons, hold altfire down to drop your current Weapon.
class DUMP3weaponDropCounter : DUMP3Counter { 
	Default {
	
	Inventory.MaxAmount 15;// Length in tics, alter this value to change how long you have to hold down altfire.
	}
}
class DUMP3weaponDropCooldown : DUMP3Cooldown { 
	Default {
	
	Powerup.Duration -2;
	}
}

// weapons

// ALL classES UNARMED
class Unarmed : "DPT.HQ-Weapon" { 
	Default {
	
	AttackSound "fist/hit";
	//$Category weapons
	}
	States
	{
	Ready:
		HAND A 0 A_PlaySound("KNUCKLED");
		HAND ABCD 4;
		PNRS ABCD 3;
	RealReady:
		PNRD A 9 A_WeaponReady();
		Loop;
	DeSelect:
		NULL A 1 A_Lower();
		Loop;
	Select:
		NULL A 0 A_Raise();
		Wait;
	Fire:
		PNRD A 0 A_JumpIfInventory("StrongItem",1,"StrongFire");
	NormalFire:
		PNRD A 0 A_JumpIfInventory("FistSeq",1,"Right");
	Left:
		PUNL B 2;
		PUNL C 2 A_PlaySound("fist/dodge");
		PUNL D 2 A_CustomPunch(4,0,0,"FistPuff");
		PUNL E 1;
		PUNL F 1;
		PUNL G 1;
		PUNL A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
	Right:
		PUNR B 2;
		PUNR C 2 A_PlaySound("fist/dodge");
		PUNR D 2 A_CustomPunch(4,0,0,"FistPuff");
		PUNR E 1;
		PUNR F 1;
		PUNR G 1;
		PUNR A 2 A_TakeInventory("FistSeq",1);
		Goto RealReady;
	StrongFire:
		PUNG A 0 A_JumpIfInventory("FistSeq",1,"StrongRight");
	StrongLeft:
		PUNL B 2;
		PUNL C 2 A_PlaySound("fist/brutalmodeswing");
		PUNL D 2 A_CustomPunch(28,0,0,"FistPuff");
		PUNL E 1;
		PUNL F 1;
		PUNL G 1;
		PUNL A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
	StrongRight:
		PUNR B 2;
		PUNR C 2 A_PlaySound("fist/brutalmodeswing");
		PUNR D 2 A_CustomPunch(28,0,0,"FistPuff");
		PUNR E 1;
		PUNR F 1;
		PUNR G 1;
		PUNR A 2 A_TakeInventory("FistSeq",1);
		Goto RealReady;
	AltFire:
		BOOT B 2;
		BOOT C 2 A_PlaySound("fist/brutalmodeswing");
		BOOT D 2 A_CustomPunch(8,0,0,"FistPuff");
		BOOT E 1;
		BOOT F 1;
		BOOT G 1;
		BOOT H 1;
		BOOT I 1;
		BOOT A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
}
}
class PocikUnarmed : "DPT.HQ-Weapon" { 
	Default {
	
	AttackSound "fist/hit";
	//$Category weapons
	}
	States
	{
	Ready:
		PCW1 ABCD 4;
		PCW1 A 0 A_PlaySound("KNUCKLED");
		PCW1 EFG 3;
	RealReady:
		PCW2 A 9 A_WeaponReady();
		Loop;
	DeSelect:
		NULL A 1 A_Lower();
		Loop;
	Select:
		NULL A 0 A_Raise();
		Wait;
	Fire:
		PCW2 A 0 A_JumpIfInventory("StrongItem",1,"StrongFire");
	NormalFire:
		PCW2 A 0 A_JumpIfInventory("FistSeq",1,"Right");
	Left:
		PCW2 B 2;
		PCW2 C 2 A_PlaySound("fist/dodge");
		PCW2 D 2 A_CustomPunch(8,0,0,"FistPuff");
		PCW2 E 1;
		PCW2 F 1;
		PCW2 G 1;
		PCW2 A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
	Right:
		PCW2 I 2;
		PCW2 J 2 A_PlaySound("fist/dodge");
		PCW2 K 2 A_CustomPunch(8,0,0,"FistPuff");
		PCW2 L 1;
		PCW2 M 1;
		PCW2 N 1;
		PCW2 O 2 A_TakeInventory("FistSeq",1);
		Goto RealReady;
	StrongFire:
		PCW2 A 0 A_JumpIfInventory("FistSeq",1,"StrongRight");
	StrongLeft:
		PCW2 B 2;
		PCW2 C 2 A_PlaySound("fist/brutalmodeswing");
		PCW2 D 2 A_CustomPunch(32,0,0,"FistPuff");
		PCW2 E 1;
		PCW2 F 1;
		PCW2 G 1;
		PCW2 A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
	StrongRight:
		PCW2 I 2;
		PCW2 J 2 A_PlaySound("fist/brutalmodeswing");
		PCW2 K 2 A_CustomPunch(32,0,0,"FistPuff");
		PCW2 L 1;
		PCW2 M 1;
		PCW2 N 1;
		PCW2 O 2 A_TakeInventory("FistSeq",1);
		Goto RealReady;
	AltFire:
		PCW3 B 2;
		PCW3 C 2 A_PlaySound("fist/brutalmodeswing");
		PCW3 D 2 A_CustomPunch(12,0,0,"FistPuff");
		PCW3 A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
}
}
class VodkaUnarmed : "DPT.HQ-Weapon" { 
	Default {
	
	AttackSound "fist/hit";
	//$Category weapons
	}
	States
	{
	Ready:
		PCW1 ABCD 4;
		PCW1 A 0 A_PlaySound("KNUCKLED");
		PCW1 EFG 3;
	RealReady:
		PCW2 A 9 A_WeaponReady();
		Loop;
	DeSelect:
		NULL A 1 A_Lower();
		Loop;
	Select:
		NULL A 0 A_Raise();
		Wait;
	Fire:
		PCW2 A 0 A_JumpIfInventory("StrongItem",1,"StrongFire");
	NormalFire:
		PCW2 A 0 A_JumpIfInventory("FistSeq",1,"Right");
	Left:
		PCW2 B 2;
		PCW2 C 2 A_PlaySound("fist/dodge");
		PCW2 D 2 A_CustomPunch(8,0,0,"FistPuff");
		PCW2 E 1;
		PCW2 F 1;
		PCW2 G 1;
		PCW2 A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
	Right:
		PCW2 I 2;
		PCW2 J 2 A_PlaySound("fist/dodge");
		PCW2 K 2 A_CustomPunch(8,0,0,"FistPuff");
		PCW2 L 1;
		PCW2 M 1;
		PCW2 N 1;
		PCW2 O 2 A_TakeInventory("FistSeq",1);
		Goto RealReady;
	StrongFire:
		PCW2 A 0 A_JumpIfInventory("FistSeq",1,"StrongRight");
	StrongLeft:
		PCW2 B 2;
		PCW2 C 2 A_PlaySound("fist/brutalmodeswing");
		PCW2 D 2 A_CustomPunch(32,0,0,"FistPuff");
		PCW2 E 1;
		PCW2 F 1;
		PCW2 G 1;
		PCW2 A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
	StrongRight:
		PCW2 I 2;
		PCW2 J 2 A_PlaySound("fist/brutalmodeswing");
		PCW2 K 2 A_CustomPunch(32,0,0,"FistPuff");
		PCW2 L 1;
		PCW2 M 1;
		PCW2 N 1;
		PCW2 O 2 A_TakeInventory("FistSeq",1);
		Goto RealReady;
	AltFire:
		PCW3 B 2;
		PCW3 C 2 A_PlaySound("fist/brutalmodeswing");
		PCW3 D 2 A_CustomPunch(12,0,0,"FistPuff");
		PCW3 A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
}
}
class ArmymanUnarmed : "DPT.HQ-Weapon" { // WORKER
	Default {
	
	//$Category weapons
	AttackSound "fist/hit";
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Ready:
		PCW1 ABCD 4;
		PCW1 A 0 A_PlaySound("KNUCKLED");
		PCW1 EFG 3;
	RealReady:
		PCW2 A 9 A_WeaponReady();
		Loop;
	DeSelect:
		NULL A 1 A_Lower();
		Loop;
	Select:
		NULL A 0 A_Raise();
		Wait;
	Fire:
		PCW2 A 0 A_JumpIfInventory("StrongItem",1,"StrongFire");
	NormalFire:
		PCW2 A 0 A_JumpIfInventory("FistSeq",1,"Right");
	Left:
		PCW2 B 2;
		PCW2 C 2 A_PlaySound("fist/dodge");
		PCW2 D 2 A_CustomPunch(8,0,0,"FistPuff");
		PCW2 E 1;
		PCW2 F 1;
		PCW2 G 1;
		PCW2 A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
	Right:
		PCW2 I 2;
		PCW2 J 2 A_PlaySound("fist/dodge");
		PCW2 K 2 A_CustomPunch(8,0,0,"FistPuff");
		PCW2 L 1;
		PCW2 M 1;
		PCW2 N 1;
		PCW2 O 2 A_TakeInventory("FistSeq",1);
		Goto RealReady;
	StrongFire:
		PCW2 A 0 A_JumpIfInventory("FistSeq",1,"StrongRight");
	StrongLeft:
		PCW2 B 2;
		PCW2 C 2 A_PlaySound("fist/brutalmodeswing");
		PCW2 D 2 A_CustomPunch(32,0,0,"FistPuff");
		PCW2 E 1;
		PCW2 F 1;
		PCW2 G 1;
		PCW2 A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
	StrongRight:
		PCW2 I 2;
		PCW2 J 2 A_PlaySound("fist/brutalmodeswing");
		PCW2 K 2 A_CustomPunch(32,0,0,"FistPuff");
		PCW2 L 1;
		PCW2 M 1;
		PCW2 N 1;
		PCW2 O 2 A_TakeInventory("FistSeq",1);
		Goto RealReady;
	AltFire:
		PCW3 B 2;
		PCW3 C 2 A_PlaySound("fist/brutalmodeswing");
		PCW3 D 2 A_CustomPunch(12,0,0,"FistPuff");
		PCW3 A 2 A_GiveInventory("FistSeq",1);
		Goto RealReady;
}
}
class LXandroUnarmed : "DPT.HQ-Weapon" { 
	Default {
	
	//$Category weapons
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	Obituary "%k has kicked %o's ass.";
	AttackSound "fist/hit";
	}
	States
	{
	Ready:
		DNKN ABC 2;
		DNKN CBA 2;
		DNKN A 0 A_PlaySound("KNUCKLED");
	RealReady:
		TNT1 A 9 A_WeaponReady();
		Loop;
	DeSelect:
		TNT1 A 1 A_Lower();
		Loop;
	Select:
		TNT1 A 0 A_Raise();
		Wait;
	Fire:
		DNBT A 1 A_Jump(255,"Fire1","Fire2");
		Goto RealReady;
	Fire1:
		TNT1 A 1 A_SetSpeed(0.0);
		TNT1 A 0 A_PlaySound("fist/brutalmodeswing", 4);
		TNT1 A 0 A_SetPitch(Pitch-1);
		DNBT A 1 offset(0,78) A_ZoomFactor(0.98);
		TNT1 A 0 A_SetPitch(Pitch-1);
		DNBT A 1 offset(0,45) A_ZoomFactor(0.96);
		TNT1 A 0 A_SetPitch(Pitch-1);
		DNBT A 1 A_ZoomFactor(0.95);
		DNBT B 4 A_CustomPunch(12,0,0,"FistPuff");
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT A 1 A_ZoomFactor(0.96);
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT A 1 offset(0,32) A_ZoomFactor(0.97);
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT A 1 offset(0,45) A_ZoomFactor(0.98);
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT A 1 offset(0,64) A_ZoomFactor(0.99);
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT A 1 offset(0,96) A_ZoomFactor(1.00);
		TNT1 A 4;
		TNT1 A 1 A_SetSpeed(1.0);
		Goto RealReady;
	Fire2:
		TNT1 A 1 A_SetSpeed(0.0);
		TNT1 A 0 A_PlaySound("fist/brutalmodeswing", 5);
		TNT1 A 0 A_SetPitch(Pitch-1);
		DNBT C 1 offset(0,78) A_ZoomFactor(0.98);
		TNT1 A 0 A_SetPitch(Pitch-1);
		DNBT C 1 offset(0,45) A_ZoomFactor(0.96);
		TNT1 A 0 A_SetPitch(Pitch-1);
		DNBT C 1 A_ZoomFactor(0.95);
		DNBT D 4 A_CustomPunch(12,0,0,"FistPuff");
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT C 1 A_ZoomFactor(0.96);
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT C 1 offset(0,32) A_ZoomFactor(0.97);
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT C 1 offset(0,45) A_ZoomFactor(0.98);
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT C 1 offset(0,64) A_ZoomFactor(0.99);
		TNT1 A 0 A_SetPitch(Pitch+1);
		DNBT C 1 offset(0,96) A_ZoomFactor(1.00);
		TNT1 A 4;
		TNT1 A 1 A_SetSpeed(1.0);
		Goto RealReady;
}
}
class FistSeq : Ammo { 
	Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 1;
	}
}
class FistPuff : actor { 
	Default {
	
	/*SeeSound "fist/wallhit"
		PainSound "fist/wallhit" // ПОЧЕМУ закоменчено? O_o WTF?/
		DeathSound "fist/wallhit"*/
	+NOGRAVITY;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_JumpIfInventory("GlassItem", 1, "Glass");
		TNT1 A 0 A_JumpIfInventory("StrongItem",1,"Strong");
		TNT1 A 0 A_JumpIfInventory("DrunkLevel",100,"Weak");
		TNT1 A 1 A_PlaySound("fist/wallhit");
		Stop;
	Strong:
		TNT1 A 1 A_PlaySound("fist/stronghit");
		Stop;
	Weak:
		TNT1 A 1 A_PlaySound("fist/weakhit");
		Stop;
	Glass:
		TNT1 A 1 A_PlaySound("glass/break");
		Stop;
}
}
class SSG : "DPT.HQ-Weapon" 26208 { 
	Default {
	
	//$Category weapons
	Weapon.AmmoUse 2;
	Weapon.AmmoGive 8;
	Weapon.AmmoType "Shell";
	Inventory.PickupMessage "You got the super shotgun!";
	Obituary "%o was splattered by %k's super shotgun.";
	}
	States
	{
	Ready:
		SHT2 A 1 A_WeaponReady();
		Loop;
	DeSelect:
		SHT2 A 1 A_Lower();
		Loop;
	Select:
		SHT2 A 1 A_Raise();
		Loop;
	Fire:
		SHT2 A 3();
		SHT2 A 21 A_FireShotgun2();
		SHT2 B 4;
		SHT2 C 4 A_CheckReload();
		SHT2 D 4 A_OpenShotgun2();
		SHT2 E 4;
		SHT2 F 5 A_LoadShotgun2();
		SHT2 G 4;
		SHT2 H 3 A_CloseShotgun2();
		SHT2 A 3 A_ReFire();
		Goto Ready;
	Flash:
		SHT2 I 4 Bright A_Light1();
		SHT2 J 3 Bright A_Light2();
		Goto LightDone;
	Spawn:
		SHOT A -1;
		Stop;
}
}
class Topor : "DPT.HQ-Weapon" 26222 { 
	Default {
	
	Inventory.PickupMessage "Picked up a RaskolnicOFF. Where is a granny!?..";
	Inventory.PickupSound "misc/w_pkup";
	Weapon.AmmoUse 0;
	Weapon.Upsound 0;
	Weapon.Readysound 0;
	Scale 0.1;
	+MELEEweapon;
	+NOALERT;
	+NOAUTOFIRE;
	//$Category weapons
	}
	States
	{
	Spawn:
		TOPS A -1;
		Loop;
	DeSelect:
		TOP1 A 1 A_Lower();
		Loop;
	Select:
		TOP1 A 1 A_Raise();
		Loop;
	Ready:
		TOP1 A 1 A_WeaponReady();
		Goto Ready;
	Fire:
		TOP1 B 1 A_PlaySound("weapons/SOV2");
		TOP1 C 1 A_CustomPunch(30+random(-1,4),2,2,"PunchPuff22");
		TOP1 D 1;
		TOP1 E 1;
		TOP1 FIGH 2;
		Goto Ready;
	AltFire:
		TOP1 RP 3;
		TOP1 R 2 A_PlaySound("weapons/SOV1");
		TOP1 K 1 A_CustomPunch(15+random(-1,3),2,2,"PunchPuff22");
		TOP1 L 1 A_CustomPunch(20+random(-2,5),2,2,"PunchPuff22") ();
		TOP1 M 1 A_CustomPunch(25+random(-3,7),2,2,"PunchPuff22");
		TOP1 N 1 A_CustomPunch(15+random(-1,3),2,2,"PunchPuff22");
		TOP1 OS 1;
		NULL A 4;
		TOP1 IGH 2;
		Goto Ready;
}
}
class Axe : "DPT.HQ-Weapon" 26223 { 
	Default {
	
	+WEAPON.MELEEweapon;
	+WEAPON.NOALERT;
	Inventory.Icon "AXEPA0";
	Inventory.PickupMessage "You claimed yourself a powerful axe!";
	Tag "Axe";
	Obituary "%k butchered %o with his axe!";
	//$Category weapons
	}
	States
	{
	Spawn:
		AXEP A -1;
		Stop;
	Select:
		AXEG AAAAAAAAAA 0 A_Raise();//To get it to raise
		TNT1 A 6;
		AXEG EDCBA 2;
		Goto Ready;
	DeSelect:
		AXEG ABCDE 2;
		TNT1 A 6;
		AXEG A 0 A_Lower();
		Wait;
	Ready:
		AXEG A 1 A_WeaponReady();
		Loop;
	Fire:
		AXEG ABCDE 3;
		TNT1 A 4;
		AXEG I 2 A_PlaySound("weapons/axeswing", CHAN_weapon);
		AXEG J 2 A_CustomPunch(120+random(4, 16), 122, 0, "AxeHitPuff");
		AXEG K 2();
		TNT1 A 4;
		AXEG EDCBA 2;
		AXEG A 6;
		Goto Ready;
	AltFire:
		AXEG ABCDE 3;
		TNT1 A 8;
		AXEG FG 3;
		AXEG H 3 A_PlaySound("weapons/axeswing", CHAN_weapon);
		AXEG I 2;
		AXEG J 2 A_CustomPunch(156+random(4, 14), 155, 0, "AxeHitPuff");
		AXEG K 2;
		TNT1 A 8;
		AXEG EDCBA 3;
		Goto Ready;
}
}
class AxeHitPuff : BulletPuff { 
	Default {
	
	+PUFFONactorS;
	SeeSound "weapons/axecut";
	AttackSound "weapons/axebang";
	ActiveSound "silent";
	Damage 120;
	}
	States
	{
	Spawn:
		PUFF ABCD 4;
		Stop;
}
}  
class RivetGun : "DPT.HQ-Weapon" 26332 { 
	Default {
	
	Inventory.PickupSound "misc/w_pkup";
	Inventory.PickupMessage "You got the Rivet Gun!";
	Weapon.AmmoType1 "Rivets";
	Weapon.AmmoType2 "Rivets";
	Weapon.AmmoGive 8;
	Weapon.AmmoUse1 1;
	Weapon.AmmoUse2 8;
	Scale 0.7;
	+ALT_ammo_OPTIONAL;
	//$Category weapons
	}
	States
	{
	Spawn:
		RVPU A -1;
		Loop;
	Ready:
		RTGN A 1 A_WeaponReady();
		Loop;
	DeSelect:
		RTGN A 1 A_Lower();
		Loop ;
	Select:
		RTGN A 1 A_Raise();
		Loop;
	Fire:
		TNT1 A 0 A_Jump(80,"PainlessBolt");
		TNT1 A 0 A_PlaySound("RIVTFIR");
		TNT1 A 0 A_GunFlash();
		RTGN A 1 Bright A_FireCustomMissile("RivetProj", frandom(-2.2,3.6), 1, 7, 4, 0, random(-1, 1));
		RTGN BCDE 1;
		RTGN A 3;
		RTGN A 1 A_ReFire();
		Goto Ready ();
	PainlessBolt:
		TNT1 A 0 A_PlaySound("RIVTFIR");
		TNT1 A 0 A_GunFlash();
		RTGN A 1 Bright A_FireCustomMissile("RivetProjPainless", frandom(-2.2,3.6), 1, 7, 4, 0, random(-1, 1));
		RTGN BCDE 1;
		RTGN A 3;
		RTGN A 1 A_ReFire();
		Goto Ready;
	AltFire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("Rivets",8,2);
		RTGN A 3 A_WeaponReady(WRF_NOSECONDARY);
		Goto Ready;
		TNT1 A 0 A_PlaySound("RIVTFIR");
		TNT1 A 0 A_GunFlash();
		RTGN A 1 Bright A_FireCustomMissile("RivetSpreadShot",0, 1, 7, 4);
		RTGN BCDE 1;
		RTGN A 12;
		RTGN A 1 A_ReFire();
		Goto Ready  ();
	Flash:
		TNT1 A 1 Bright A_Light1();
		TNT1 A 1 Bright A_Light0();
		Stop;
}
}
class Rivets : Ammo 32257 { 
	Default {
	
	Inventory.Amount 12;
	Inventory.MaxAmount 225;
	Ammo.BackPackAmount 20;
	Ammo.BackPackMaxAmount 450;
	Inventory.Icon RVTIA0;
	Inventory.PickupSound "RVTAMMG1";
	Inventory.PickupMessage "Rivet Pile";
	Scale 0.6;
	}
	States
	{
	Spawn:
		RVTP A -1;
		Loop;
}
}
// Delta-Touch & GZDoom Fix
class RivetRack : Ammo 32258 { 
	Default {
	
	Inventory.Amount 25;
	Inventory.MaxAmount 225;
	Ammo.BackPackAmount 20;
	Ammo.BackPackMaxAmount 450;
	Inventory.Icon RVTIA0;
	Inventory.PickupSound "RVTAMMG2";
	Inventory.PickupMessage "Rivet Bolt Rack";
	Scale 0.7;
	}
	States
	{
	Spawn:
		RVTR A -1;
		Loop;
}
}
class RivetProj : FastProjectile { 
	Default {
	
	Speed 40;
	Radius 7;
	Height 8;
	PROJECTILE;
	+THRUactorS;
	+NODAMAGETHRUST;
	+RIPPER;
	Scale 0.15;
	DeathSound "RivetImpact";
	MissileType "RivetFlyRing";
	MissileHeight 8;
	}
	States
	{
	Spawn:
		BBLT A 1 Bright;
		TNT1 A 0 A_Explode(12,12);
		BBLT A 1 Bright;
		TNT1 A 0 A_SpawnItem("RivetProjDMG",0,0,0);
		Loop;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_SetScale(0.3);
		TNT1 A 0 A_SpawnItemEx("RivetBoltReboundFX",0,0,3,random(-2,2),random(-2,2),random(3,9),random(0,359),32);
		TNT1 A 0 A_SetTranslucent(0.8);
		RIVP A 2 Bright;
		RIVP BCDE 1 Bright;
		Stop;
}
}
class RivetProjDMG : actor { //Spawns as the bolts travel to damage enemies.
	Default {
	//Main damage dealer for bosses, as the rivets do not have +FORCERADIUSDMG.
	Speed 2;
	Radius 6;
	Height 7;
	Damage (7*random(2,5));//Adjust damage to be slightly higher if using non-vanilla enemies. (7*random(3,6)) for example.
	PROJECTILE;
	+BLOODSPLATTER;
	+NODAMAGETHRUST;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Stop;
	Death:
		TNT1 A 0;
		Stop;
}
}
class RivetProjPainless : FastProjectile  { //+PAINLESS on this version to prevent stunlocking of enemies.
	Default {
	
	Speed 40;
	Radius 7;
	Height 8;
	PROJECTILE;
	+THRUactorS;
	+PAINLESS;
	+NODAMAGETHRUST;
	+RIPPER;
	Scale 0.15;
	DeathSound "RivetImpact";
	MissileType "RivetFlyRing";
	MissileHeight 8;
	}
	States
	{
	Spawn:
		BBLT A 1 Bright;
		TNT1 A 0 A_Explode(12,12);//Better for controlling damage than a projectile with +RIPPER.
		BBLT A 1 Bright;
		TNT1 A 0 A_SpawnItem("RivetProjDMGPainless",0,0,0);
		Loop;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_SetScale(0.3);
		TNT1 A 0 A_SpawnItemEx("RivetBoltReboundFX",0,0,3,random(-2,2),random(-2,2),random(3,9),random(0,359),32);
		TNT1 A 0 A_SetTranslucent(0.8);
		RIVP A 2 Bright;
		RIVP BCDE 1 Bright;
		Stop;
}
}
class RivetProjDMGPainless : RivetProjDMG { //Spawns as bolts travel to damage enemies. This version randomly Spawns to prevent stunlocking.
	Default {
	//Main damage dealer for bosses, as the rivets do not have +FORCERADIUSDMG.
	+PAINLESS;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Stop;
	Death:
		TNT1 A 0;
		Stop;
}
}
//ALT FIRE
class RivetSpreadShot : FastProjectile { 
	Default {
	
	Speed 40;
	Radius 15;
	Height 8;
	Damage 0;
	PROJECTILE;
	Scale 0.15;
	DeathSound "RIVTCLXP";
	MissileType "RivetFlyRingB";
	MissileHeight 8;
	ReactionTime 6;
	+BLOODSPLATTER;
	+NODAMAGETHRUST;
	+RIPPER;
	}
	States
	{
	Spawn:
		BBLT A 1 Bright;
		TNT1 A 0 A_Countdown();
		Loop;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_Explode(35,60);
		TNT1 A 0 A_CustomMissile("RivetSpreadProj", 0, 0, 0, CMF_AIMDIRECTION);
		TNT1 A 0 A_CustomMissile("RivetSpreadProj", 0, 0, -50, CMF_AIMDIRECTION);
		TNT1 A 0 A_CustomMissile("RivetSpreadProj", 0, 0, 50, CMF_AIMDIRECTION);
		TNT1 A 0 A_CustomMissile("RivetSpreadProj", 0, 0, -90, CMF_AIMDIRECTION);
		TNT1 A 0 A_CustomMissile("RivetSpreadProj", 0, 0, 90, CMF_AIMDIRECTION);
		TNT1 A 0 A_CustomMissile("RivetSpreadProj", 0, 0, -130, CMF_AIMDIRECTION);
		TNT1 A 0 A_CustomMissile("RivetSpreadProj", 0, 0, 130, CMF_AIMDIRECTION);
		TNT1 A 0 A_SetScale(0.8);
		TNT1 A 0 A_SetTranslucent(0.8);
		CLSD ABCDEFGHI 1 Bright;
		Stop;
}
}
class RivetSpreadProj : actor { 
	Default {
	
	Speed 40;
	Radius 3;
	Height 3;
	Mass 10;
	DeathSound "RIVTCLXP";
	MissileType "RivetFlyRingB";
	MissileHeight 8;
	Scale 0.15;
	PROJECTILE;
	+THRUactorS;
	+BLOODSPLATTER;
	+NODAMAGETHRUST;
	+RIPPER;
	BounceType Hexen;
	BounceCount 4;
	WallBounceFactor 1.2;
	SeeSound "RIVTPBNC";
	}
	States
	{
	Spawn:
		BBLT A 1 Bright;
		TNT1 A 0 A_Explode(6,12);
		TNT1 A 0 A_Jump(200,3);
		TNT1 A 0 A_SpawnItem("RivetProjSpreadDMG",0,0,0);
		TNT1 A 0 A_Jump(255,2);
		TNT1 A 0 A_SpawnItem("RivetProjSpreadPainlessDMG",0,0,0);
		TNT1 A 0;
		Loop     ();
	Death: 
		TNT1 A 0 A_SpawnItemEx("RivetBoltReboundFX",0,0,3,random(-2,2),random(-2,2),random(3,9),random(0,359),32);
		TNT1 A 0;
		TNT1 A 0 A_SetScale(0.4);
		TNT1 A 0 A_SetTranslucent(0.8);
		CLSD ABCDEFGHI 1 Bright;
		Stop  ();
}
}
class RivetProjSpreadDMG : actor { 
	Default {
	
	Speed 2;
	Radius 6;
	Height 7;
	Damage (5*random(1,3));
	PROJECTILE;
	+BLOODSPLATTER;
	+NODAMAGETHRUST;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Stop;
	Death:
		TNT1 A 0;
		Stop;
}
}
class RivetProjSpreadPainlessDMG : RivetProjSpreadDMG { 
	Default {
	
	+PAINLESS;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Stop;
	Death:
		TNT1 A 0;
		Stop;
}
}
class RivetFlyRing : actor { //Rivet projectile flight effect.
	Default {
	
	+NOINTERACTION;
	+NOCLIP;
	+Bright;
	Radius 1;
	Height 1;
	Renderstyle "Add";
	Alpha 0.06;
	Scale 0.2;
	}
	States
	{
	Spawn:
		RIVF AAA 1;
		RIVF A 1 A_SetScale(0.15);
		RIVF A 1 A_SetScale(0.10);
		Stop;
}
}
class RivetFlyRingB : actor { //Rivet projectile flight effect. Alt fire.
	Default {
	
	+NOINTERACTION;
	+NOCLIP;
	+Bright;
	Radius 1;
	Height 1;
	Renderstyle "Add";
	Alpha 0.1;
	Scale 0.2;
	}
	States
	{
	Spawn:
		CLSD AAA 1;
		Stop;
}
}
class RivetBoltReboundFX : actor { 
	Default {
	
	Radius 1;
	Height 1;
	Speed 15;
	PROJECTILE;
	-NOGRAVITY;
	+THRUactorS;
	Gravity 0.6;
	Scale 0.15;
	BounceType Doom;
	BounceFactor 0.4;
	BounceCount 3;
	SeeSound "RivetRebound";
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Jump(255,"Var1","Var2");
		Loop;
	Var1: //Horizontal
		RBLT ABCDEFGH 1;
		Loop;
	Var2: //Vertical
		VRLT ABCDEFGH 1;
		Loop;
	Death:
		BBLT A 80;
		BBLT A 1 A_FadeOut(0.02);
		Goto Death+1;
}
}
class M40Rifle : "DPT.HQ-Weapon" 26333 { // WORKER
	Default {
	
	//$Category weapons
	Obituary "%o was sniped out by %k's M40";
	Radius 20;
	Height 16;
	Inventory.PickupMessage "You got the M40A1 Sniper Rifle";
	Weapon.KickBack 125;
	Weapon.AmmoType "M40762ammo";
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 12;
	+WEAPON.NoAlert;
	+WEAPON.NoAutoFire;
	Scale 0.8;
	Decal BulletChip;
	}
	States
	{
	Spawn:
		SNPP A -1;
		Stop;
	Ready:
		SNPG A 0 A_JumpIfInventory("M40A1Zoom", 1, "ScopedReady");
		SNPG A 1 A_WeaponReady();
		Loop;
	ScopedReady:
		SNPS A 1 A_WeaponReady(1);
		Loop;
	DeSelect:
		SNPG A 0 A_JumpIfInventory("M40A1Zoom", 1, "ScopedDeselect");
		SNPG A 1 A_Lower();
		Loop;
	ScopedDeSelect:
		SNPG A 0 A_TakeInventory("M40A1Zoom", 2);
		SNPG A 0 A_PlaySound("M40Rifle/Scope");
		SNPG A 2 A_ZoomFactor(1.0);
		SNPG A 1 A_Lower();
		Goto ScopedDeselect+3;
	Select:
		SNPG A 1 A_Raise();
		Loop;
	Fire:
		SNPG A 0 A_JumpIfInventory("M40A1Zoom", 1, "ScopedFire");
		SNPG A 0 A_AlertMonsters();
		SNPG A 0 A_FireBullets (0.0, 0.0, -1, 115, "M40Puff");
		SNPG A 0 A_PlayweaponSound("M40Rifle/Fire");
		SNPG A 0 Radius_Quake(2, 2, 0, 1, 0);
		SNPG A 0 A_SetPitch(Pitch-0.5);
		SNPF AB 2;
		SNPF CDE 3;
		SNPG A 3;
		SNPG BC 3;
		SNPG DEF 2;
		SNPG H 2 A_PlayweaponSound("M40Rifle/Bolt1");
		SNPG IJ 2;
		SNPG K 3;
		SNPG JI 2;
		SNPG H 2 A_PlayweaponSound("M40Rifle/Bolt2");
		SNPG FED 3;
		SNPG CB 4;
		SNPG A 2;
		SNPG A 1 A_ReFire();
		Goto Ready;
	ScopedFire:
		SNPS A 0 A_AlertMonsters();
		SNPS A 0 A_FireBullets (0.0, 0.0, -1, 115, "M40Puff");
		SNPS A 0 A_PlayweaponSound("M40Rifle/Fire");
		SNPS A 0 Radius_Quake(2, 2, 0, 1, 0);
		SNPS A 0 A_SetPitch(Pitch-0.5);
		SNPS A 28;
		SNPS A 2 A_PlayweaponSound("M40Rifle/Bolt1");
		SNPS A 11;
		SNPS A 2 A_PlayweaponSound("M40Rifle/Bolt2");
		SNPS A 19;
		SNPS A 1 A_ReFire();
		Goto Ready;
	AltFire:
		SNPS A 0 A_JumpIfInventory("M40A1Zoom", 2, "ZoomOut");
		SNPS A 0 A_JumpIfInventory("M40A1Zoom", 1, "ZoomMore");
		SNPS A 0 A_PlaySound("M40Rifle/Scope");
		SNPS A 0 A_GiveInventory("M40A1Zoom", 1);
		SNPS A 2 A_ZoomFactor(6.0);
		Goto Ready;
	ZoomMore:
		SNPS A 0 A_PlaySound("M40Rifle/Scope");
		SNPS A 0 A_GiveInventory("M40A1Zoom", 1);
		SNPS A 2 A_ZoomFactor(12.0);
		Goto Ready;
	ZoomOut:
		SNPG A 0 A_TakeInventory("M40A1Zoom", 2);
		SNPG A 0 A_PlaySound("M40Rifle/Scope");
		SNPG A 2 A_ZoomFactor(1.0);
		Goto Ready;
	ScopedReady:
		SNPS A 1 A_WeaponReady(1);
		Loop;
}
}
class M40A1Zoom : Inventory { Inventory.MaxAmount 2 } { 
	Default {
class M40Puff : BulletPuff { 
	Default {
		
		+NoExtremeDeath;
	}
}
class M40762ammo : Ammo 26224 { 
	Default {
		
		Inventory.PickupMessage "Picked up some bullets for the M40.";
		Inventory.Amount 4;
		Inventory.MaxAmount 16;
		Ammo.BackPackAmount 16;
		Ammo.BackPackMaxAmount 32;
		Inventory.Icon "SNPPB0";
	}
	States
	{
		Spawn:
			SNPP B -1;
			Stop;
	}
}
// Delta-Touch & GZDoom Fix
class M40762ammoBox : Ammo 26225 { 
	Default {
		
		Inventory.PickupMessage "Picked up a box of bullets for the M40.";
		Inventory.Amount 8;
		Inventory.MaxAmount 16;
		Ammo.BackPackAmount 16;
		Ammo.BackPackMaxAmount 32;
		Inventory.Icon "SNPPC0";
	}
	States
	{
		Spawn:
			SNPP C -1;
			Stop;
	}
}
class SpawnerModule_weapon : "DPT.HQ-Weapon" 25018 { //WORKER // NEED USE ONLY TO SUMONNER class
	Default {
		
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "You got a Spawner Module!";
		Weapon.AmmoType "SpawnerModules";
		Weapon.AmmoGive 1;
		Weapon.AmmoUse 1;
		Weapon.Kickback 0;
		AttackSound "weapons/pbarm";
		//$Category weapons
		+NOALERT;
	}
	States
	{
		Spawn:
			DGIZ A -1;
			Loop;
		Ready:
			SPWN A 1 A_WeaponReady();
			Loop;
		DeSelect:
			SPWN A 1 A_Lower();
			Loop;
		Select:
			SPWN A 1 A_Raise();
			Loop;
		Fire:
			SPWN A 1 A_GiveInventory("SpawnerModule_Detonator");
			SPWN A 8 Offset(0,32);
			SPWN A 1 Offset(0,0);
			SPWN A 0 A_FireCustomMissile("SpawnerModule22",0,1,0,0);
			SPNN Q 8 A_PlayweaponSound("weapons/pbthrow");
			SPNN RSTU 1;
			SPWN A 8;
			SPWN A 0 A_Selectweapon("SpawnerModule_Detonator");
			SPWN A 0();
			SPWN A 1;
			SPWN A 4;
			SPWN A 4 A_ReFire();
			Goto Ready;
	}
}
class SpawnerModule_Detonator : "DPT.HQ-Weapon" { //WORKER // NEED USE ONLY TO SUMONNER class
	Default {
		
		Inventory.PickupSound "misc/w_pkup";
		Weapon.AmmoType "SpawnerModules";
		Weapon.AmmoGive 0;
		Weapon.AmmoUse 0;
		Weapon.Kickback 1000;
		AttackSound "weapons/mauler1";
		+NOALERT;
		//$Category weapons
	}
	States
	{
		Spawn:
			DGIZ A -1;
			Loop;
		Ready:
			DETO A 1 A_WeaponReady();
			Loop;
		DeSelect:
			DETO A 1 A_Lower();
			Loop;
		Select:
			DETO A 1 A_Raise();
			Loop;
		Fire:
			DETO B 2;
			DETO B 0 A_AlertMonsters();
			DETO B 0 Thing_Projectile(1999,202,0,0,0);
			DETO B 0 A_PlayweaponSound("weapons/pbarm");
			DETO C 2 Thing_ReMove(1999);
			DETO B 2;
			DETO A 8;
			DETO A 8;
			DETO Z 0 A_Selectweapon("SpawnerModule_weapon");
			DETO A 3;
			Goto Deselect;
		AltFire:
			DETO B 2;
			DETO B 0 A_AlertMonsters();
			DETO B 0 Thing_Projectile(1999,201,0,0,0);
			DETO B 0 A_PlayweaponSound("weapons/pbarm");
			DETO C 2 Thing_ReMove(1999);
			DETO B 2;
			DETO A 8;
			DETO A 8;
			DETO Z 0 A_Selectweapon("SpawnerModule_weapon");
			DETO A 3;
			Goto Deselect;
	}
}
class SpawnerModule22 : Rocket { 
	Default {
		
		-NOGRAVITY;
		-ROCKETTRAIL;
		+DOOMBOUNCE;
		Damage 0;
		ExplosionDamage 255;
		ExplosionRadius 128;
		SeeSound "weapons/pbbounce";
		DeathSound "weapons/pbbounce";
		Renderstyle "Normal";
		Alpha 255;
	}
	States
	{
		Spawn:
			DGIZ A 1 Thing_ChangeTid(0,1999);
			Loop;
		Death:
			DGIZ A 1;
			DGIZ A 1 Thing_ChangeTid(0,1999);
			DGIZ A 1();
			Goto Death+2;
	}
}
class SpawnerModule_OverheatExplosion : actor { 
	Default {
		
		SeeSound "weapons/explode";
		Radius 8;
		Height 56;
		Speed 0;
		ExplosionDamage 255;
		ExplosionRadius 192;
	}
	States
	{
		Spawn:
			NKXP B 3 Bright;
			NKXP C 3 Bright;
			NKXP D 3 Bright A_Explode();
			NKXP EFGHIJKLMNOPQRSTUV 3 Bright;
			Stop;
	}
}
class SpawnerModule_SpawningProcess : actor { 
	Default {
		
		SeeSound "weapons/plasmaf";
		Radius 8;
		Height 56;
		Speed 0;
		Scale 3.5;
	}
	States
	{
		Spawn:
			GIZB A 3 Bright A_SpawnItem("Egg1337",1,8);
			GIZB B 3 Bright;
			GIZB C 3 Bright;
			GIZB D 3 Bright;
			Stop;
	}
}
class Egg1337 : actor { 
	Default {
		
		+SHOOTABLE;
		BloodColor White;
		+SOLID;
	}
	States
	{
		Spawn:
			EEGG A 100;
			Goto Death;
		Death:
			EEGG A 1 A_SpawnItemEx("KidCaco", 0,0,0,0,0,SXF_NOCHECKPOSITION);
			Stop;
	}
}
class MOMCaco : Cacodemon { 
	Default {
		
		Health 100;
		+FRIENDLY;
		-SOLID;
	}
}
class KidCacoGrowth : Inventory { 
	Default {
		
		Inventory.Amount 1;
		Inventory.MaxAmount 1000;
	}
}
class GrowedCacodemonBoy : Cacodemon { 
	Default {
		
	Translation "168:183=192:207"
	}
}
class GrowedCacodemonGirl : Cacodemon { 
	Default {
	
Translation "168:183=250:254"
	}
}
class BabyCacoBall : actor { 
	Default {
 
	Radius 3
	Height 4
	Speed 5
	FastSpeed 10
	Damage 1
	Projectile 
	+RANDOMIZE
	RenderStyle "Add"
	Alpha 1
	SeeSound "caco/attack"
	DeathSound "caco/shotx"
	}
	States
	{
	Spawn:
		BCAB AB 4 Bright
		Loop
	Death:
		BCAB CDE 6 Bright
		Stop
	}
}
class KidCaco 9655 : actor { 
	Default {
 
	Translation "176:183=168:175"
	Scale 0.25
	Health 10
	+FRIENDLY
	Radius 15
	Height 25
	mass 100
	speed 8
	painchance 255
	SeeSound "BabyCaco/Sight"
	PainSound "BabyCaco/Pain"
	DeathSound "BabyCaco/Death"
	Missiletype BabyCacoBall
	Obituary "%o underestimated a Baby Cacodemon"
	MONSTER
	+NOGRAVITY
	+FLOAT 
	}
	States
	{
	Spawn:
		CACB A 0
		CACB A 0 A_JumpIfInventory("KidCacoGrowth",1000,"Grow")
		CACB A 0 A_GiveInventory("KidCacoGrowth",10)
		CACB A 10 A_Look
		loop
	See:
		CACB A 0
		CACB A 0 A_JumpIfInventory("KidCacoGrowth",1000,"Grow")
		CACB A 0 A_GiveInventory("KidCacoGrowth",3)
		CACB A 3 A_Chase
		loop
	Missile:
		CACB A 0
		CACB A 0 A_JumpIfInventory("KidCacoGrowth",1000,"Grow")
		CACB A 0 A_GiveInventory("KidCacoGrowth",10)
		CACB A 10 A_Wander
		Goto See
		CACB B 5 A_FaceTarget
		CACB C 5 Bright A_CustomMissile("BabyCacoBall", 17, 0, 0)
		Goto See
	Grow:
		CACB A 0
		CACB A 1 A_SpawnItemEx("KidCaco2", 0,0,0,0,0,SXF_NOCHECKPOSITION)
		Stop
	Pain:
		CACB D 3
		CACB D 3 A_Pain
		CACB E 6
		Goto See
	Death:
		CACB F 8
		CACB G 8 A_Scream
		CACB H 8
		CACB I 8
		CACB J 8 A_NoBlocking
		CACB K 8
		CACB L -1 A_SetFloorClip
		Stop
	Raise:
		CACB L 8 A_UnSetFloorClip
		CACB KJIHGF 8
		Goto See
	}
}
class KidCaco2 : KidCaco  { 
	Default {
 
	Translation "176:183=168:175"
	Scale 0.4
	Health 40
	radius 12
	height 20
	mass 200
	painchance 200
	//  seesound "caco/sight" //FixMe: sounds of young cacodemons must be different
	//  painsound "caco/pain"
	//  deathsound "caco/death"
	//  activesound "caco/active"
	//  attacksound "caco/melee"
	}
	States
	{
	Grow:
		HEAD A 0
		HEAD A 1  A_SpawnItemEx("KidCaco3", 0,0,0,0,0,SXF_NOCHECKPOSITION)
		Stop
	}
}
class KidCaco3 : KidCaco  { 
	Default {
 
	Translation "176:183=168:175"
	Scale 0.6
	Health 140
	radius 16
	height 28
	mass 270
	painchance 180
	//  seesound "caco/sight" //FixMe: sounds of young cacodemons must be different
	//  painsound "caco/pain"
	//  deathsound "caco/death"
	//  activesound "caco/active"
	//  attacksound "caco/melee"
	}
	States
	{
	Grow:
		HEAD A 0
		HEAD A 1  A_SpawnItemEx("KidCaco4", 0,0,0,0,0,SXF_NOCHECKPOSITION)
		Stop
	}
}
class KidCaco4 : KidCaco3 { 
	Default {
 
	Translation "176:183=168:175"
	Scale 0.8
	Health 310
	radius 24
	height 42
	mass 310
	painchance 150
	//  seesound "caco/sight" //FixMe: sounds of young cacodemons must be different
	//  painsound "caco/pain"
	//  deathsound "caco/death"
	//  activesound "caco/active"
	//  attacksound "caco/melee"
	}
	States
	{
	Grow:
		HEAD A 0
		HEAD A 0 A_Jump(140,2)
		HEAD A 1  A_SpawnItemEx("GrowedCacodemonBoy", 0,0,0,0,0,SXF_NOCHECKPOSITION)
		Stop
		HEAD A 1  A_SpawnItemEx("GrowedCacodemonGirl", 0,0,0,0,0,SXF_NOCHECKPOSITION)
		Stop
	}
}
class SpawnerModules : Ammo 26226 { 
	Default {
 
	Inventory.Amount 1
	Inventory.MaxAmount 25
	Ammo.BackPackAmount 1
	Ammo.BackPackMaxAmount 40
	Inventory.Icon GIZBA0
	Inventory.PickupMessage ""
	}
	States
	{
	Spawn:
		DGIZ C -1     
	}
}
class SpawnerModulesBox : CustomInventory 26227 { 
	Default {
 
	+COUNTITEM
	+Inventory.ALWAYSPICKUP
	Inventory.PickupMessage "Picked up a box of pipebombs."
	}
	States
	{
	Spawn:
		SB0X A -1
		Stop
	Pickup:
		TNT1 A 0 A_GiveInventory("SpawnerModule_weapon")
		TNT1 A 0 A_GiveInventory("SpawnerModules",5)
		Stop
	}
}
class UberMinigun : "DPT.HQ-Weapon" 26334 { 
	Default {
 
	//$Category weapons
	Inventory.PickupMessage "You got the UberMinigun!"
	Inventory.PickupSound "misc/w_pkup"
	Weapon.Kickback 90
	Weapon.AmmoType "Clip"
	Weapon.AmmoGive 100
	Weapon.AmmoUse 1
	Obituary "%k turned %o into swiss cheese using %p Uberminigun"
	}
	States
	{
	Spawn:
		MINI A -1
		LOOP
	Ready:
		MING A 9 A_WeaponReady
		Loop
	DeSelect: 
		MING A 1 A_Lower
		NULL AA 0 A_LOWER
		LOOP
	Select: 
		MING A 1 A_Raise
		NULL AA 0 A_RAISE
		LOOP
	Fire:
		MING A 0 A_PlaySound("weapons/minigunup")
		MING BCDEFGH 2 
		MING CEGABCDEFGHACEGE 1 
	Hold:
		MINF A 0 A_GunFlash
		MINF A 0 A_PlayweaponSound("weapons/minigun")
		MINF A 0 A_PlaySound("weapons/minigunhold")
		MINF A 1 Bright A_FireBullets (5.6, 0, 2, 5, "BulletPuff")
		MINF C 1 Bright
		MINF B 1 Bright
		MING C 0 A_ReFire
		MING A 0 A_PlaySound("weapons/minigundown")
		MING A 1
		MING C 1 
		MING E 1
		MING G 1 
		MING A 1
		MING B 1 
		MING C 1
		MING D 1 
		MING E 1
		MING F 1 
		MING G 1
		MING H 1
		MING ABCDEFGH 1
		MING ABCDEFGH 2
		Goto Ready
	}
}
class Satcheler : "DPT.HQ-Weapon" 25020 { 
	Default {
 
	//$Category weapons
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You are an ammo dispenser! (1)"
	Obituary "%o was overweighted, thanks to %k's ammunition."
	Weapon.UpSound ""
	Weapon.AmmoGive 0
	Weapon.AmmoType1 "Satchelammo"
	Weapon.AmmoUse1 25
	Weapon.AmmoType2 "Satchelammo"
	Weapon.AmmoUse2 25
	AttackSound ""
	Scale 0.35
	+NOAUTOFIRE
	+NOALERT
	+ammo_OPTIONAL
	+ALT_ammo_OPTIONAL
	}
	States
	{
	Spawn:
		STCP A -1
		Loop
	Ready:
		STCG A 0 A_GiveInventory("Satchelammo",1)
		STCG A 2 A_WeaponReady
		Loop
	SatchelOn:
		STCG HGFEDCBA 1
		Goto Ready
	DeSelect:
		STCG A 1 A_Lower
		STCG A 0 A_Lower
		Loop
	Select:
		STCG A 1 A_Raise
		STCG A 0 A_Raise
		Loop
	Fire:
		STCG A 0 A_JumpIfNoammo("Ready")
		STCG ABCDEFGH 1
		TNT1 A 2 A_ReFire
		TNT1 A 0 A_PlayweaponSound("weapons/SatchelToss")
		TNT1 A 0 A_PlaySoundEx("weapons/SatchelOof","Voice")
		TNT1 A 0 A_FireCustomMissile("SatchelSpawner",0,1,20,0)
		HNDG IJKLMNOP 1
		TNT1 A 15
		Goto SatchelOn
	Hold:
		TNT1 A 1
		TNT1 A 0 A_ReFire
		TNT1 A 0 A_PlayweaponSound("weapons/SatchelToss")
		TNT1 A 0 A_PlaySoundEx("weapons/SatchelOof","Voice")
		TNT1 A 0 A_FireCustomMissile("SatchelSpawner",0,1,20,0)
		HNDG IJKLMNOP 1
		TNT1 A 15
		Goto SatchelOn
	AltFire:
		STCG A 0 A_JumpIfNoammo("Ready")
		STCG ABCDEFGH 1
		STCG HGF 1
		TNT1 A 0 A_PlayweaponSound("weapons/SatchelToss")
		TNT1 A 0 A_FireCustomMissile("SatchelBlaster",0,1,-20,0)
		STCF ABCDEFGH 1
		TNT1 A 10
		TNT1 A 10 A_ReFire
		Goto SatchelOn
	AltHold:
		STCG A 0 A_JumpIfNoammo("Ready")
		STCG HGF 1
		TNT1 A 0 A_PlayweaponSound("weapons/SatchelToss")
		TNT1 A 0 A_FireCustomMissile("SatchelBlaster",0,1,-20,0)
		STCF ABCDEFGH 1
		TNT1 A 10
		STCG A 0 A_JumpIfNoammo("SatchelOn")
		TNT1 A 10 A_ReFire
		Goto SatchelOn
	}
}
class Satchelammo : Ammo 26228 { 
	Default {
 
	Inventory.Amount 1
	Inventory.MaxAmount 100
	Ammo.BackPackAmount 0
	Ammo.BackPackMaxAmount 100
	Inventory.Icon STTPRCNT
	}
}
class SatchelSpawner : actor { 
	Default {
 
	Radius 7
	Height 9
	Speed 10
	Damage 0
	Projectile
	-NOGRAVITY
	BounceType Doom
	BounceCount 3
	DeathSound ""
	SeeSound "weapons/SatchelBounce"
	}
	States
	{
	Spawn:
		STCP ABCD 4
		loop
	Death:
		STCP A 0 A_NoBlocking
		STCP A 1 A_SpawnItem("BrutalExplosion",0,0) // "ammoSatchel2"
		Stop
	}
}
class ammoSatchel2 : CustomInventory 26229 { 
	Default {
 
	Inventory.PickupMessage "Picked up an ammo satchel."
	Inventory.PickupSound "weapons/SatchelPick"
	-COUNTITEM
	+Inventory.AUTOACTIVATE
	+Inventory.ALWAYSPICKUP
	}
	States
	{
	Pickup:
		TNT1 A 0 A_GiveInventory("Clip",10)
		TNT1 A 0 A_GiveInventory("Shell",4)
		TNT1 A 0 A_GiveInventory("Rocketammo",2)
		TNT1 A 0 A_GiveInventory("Cell",20)
		Stop
	Spawn:
		STCP A 600
		Goto FadeOut
	FadeOut:
		STCP AAAAAAAAAAAAAAAAAAAA 1 A_FadeOut(0.05)
		Stop
	}
}
//Alt-Fire
class SatchelBlaster : actor { 
	Default {
 
	Radius 7
	Height 9
	Speed 50
	Damage 25
	Projectile
	-NOGRAVITY
	BounceType Doom
	BounceCount 4
	DeathSound ""
	SeeSound "weapons/SatchelBounce"
	Obituary "%o was slammed in the face, thanks to %k's ammunition."
	}
	States
	{
	Spawn:
		STCP ABCD 2
		Loop
	Death:
		STCP A 0 A_NoBlocking
		STCP A 1 A_SpawnItem("ammoSatchel2",0,0)
		Stop
	XDeath:
		STCP A 0 A_NoBlocking
		STCP A 0 A_PlaySound("weapons/SatchelHit")
		STCP A 1 A_SpawnItem("ammoSatchel2",0,0)
		Stop
	}
}
class FlameThrower2 : "DPT.HQ-Weapon" 26335 { 
	Default {
 
	//$Category weapons
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You got the flamethrower! Time for a BBQ!"
	Obituary "%o was BBQed by %k's flamethrower."
	Weapon.AmmoType "Gas"
	Weapon.AmmoGive 48
	Weapon.AmmoUse 1
	+WEAPON.Explosive
	}
	States
	{
	Spawn:
		WFLM A -1
		Loop
	Ready:
		FLMG BCD 3 A_WeaponReady
		Loop
	DeSelect:
		FLMG A 1 A_Lower
		Loop
	Select:
		FLMG A 1 A_Raise
		Loop
	Fire:
		FLMG E 0 Bright A_GunFlash
		FLMG E 1 Bright A_FireCustomMissile("FTFire", 0, 1, Random(-4, 4), 0)
		FLMG F 1 Bright A_FireCustomMissile("FTFire", 0, 0, Random(-4, 4), 0)
		FLMG G 1 Bright A_FireCustomMissile("FTFire", 0, 1, Random(-4, 4), 0)
		FLMG E 0 Bright A_GunFlash
		FLMG E 1 Bright A_FireCustomMissile("FTFire", 0, 1, Random(-4, 4), 0)
		FLMG F 1 Bright A_FireCustomMissile("FTFire", 0, 0, Random(-4, 4), 0)
		FLMG G 1 Bright A_FireCustomMissile("FTFire", 0, 1, Random(-4, 4), 0)
		FLMG E 0 Bright A_GunFlash
		FLMG E 1 Bright A_FireCustomMissile("FTFire", 0, 1, Random(-4, 4), 0)
		FLMG F 1 Bright A_FireCustomMissile("FTFire", 0, 0, Random(-4, 4), 0)
		FLMG G 1 Bright A_FireCustomMissile("FTFire", 0, 1, Random(-4, 4), 0)
		FLMG H 2 Bright A_ReFire
		Goto Ready
	Flash:
		TNT1 A 2 A_Light1
		TNT1 A 2 A_Light2
		TNT1 A 1 A_Light1
		TNT1 A 1 A_Light0
		Stop
	}
}
class FTFire : actor { 
	Default {
 
	Radius 2
	Height 4
	Speed 16
	Damage 1
	Projectile
	RenderStyle "Add"
	DamageType Fire
	Alpha 0.67
	Scale 0.67
	SeeSound "Flamethrower/Fire"
	DeathSound "Flamethrower/Hit"
	}
	States
	{
	Spawn:
		TNT1 A 2
		FRFX ABCD 2 Bright A_Explode(5, 8, 0)
		TNT1 A 0 A_LowGravity
		FRFX EFG 2 Bright A_Explode(5, 16, 0)
		FRFX HIJ 2 Bright A_Explode(5, 32, 0)
		FRFX KLM 2 Bright A_Explode(5, 64, 0)
		FRFX NO 2 Bright
		Stop
	Death:
		FRFX HIJ 2 Bright A_Explode(5, 32, 0)
		TNT1 A 0 A_CustomMissile("DropFire", 0, 0, 0, 4)
		FRFX KLM 2 Bright A_Explode(5, 64, 0)
		FRFX NO 2 Bright
		Stop
	}
}
class DropFire : actor { 
	Default {
 
	Radius 8
	Height 40
	Projectile
	RenderStyle "Add"
	DamageType Fire
	Alpha 0.90
	-NoGravity
	+LowGravity
	+NoExplodeFloor
	+NoDamageThrust
	}
	States
	{
	Spawn:
		TNT1 A 0 A_PlaySound("Flamethrower/Flame")
		FLME A 2 Bright A_Explode(5, 32, 0)
		FLME BCDEFGHIJKLMN 2 Bright A_Explode(5, 16, 0)
		TNT1 A 0 A_PlaySound("Flamethrower/Flame")
		FLME A 2 Bright A_Explode(5, 32, 0)
		FLME BCDEFGHIJKLMN 2 Bright A_Explode(5, 16, 0)
		TNT1 A 0 A_PlaySound("Flamethrower/Flame")
		FLME A 2 Bright A_Explode(5, 32, 0)
		FLME BCDEFGHIJKLMN 2 Bright A_Explode(5, 16, 0)
		TNT1 A 0 A_PlaySound("Flamethrower/Flame")
		FLME A 2 Bright A_Explode(5, 32, 0)
		FLME BCDEFGHIJKLMN 2 Bright A_Explode(5, 16, 0)
		TNT1 A 0 A_PlaySound("Flamethrower/Flame")
		FLME A 2 Bright A_Explode(5, 32, 0)
		FLME BCDEFGHIJKLMN 2 Bright A_Explode(5, 16, 0)
		TNT1 A 0 A_Jump(192, "Death")
		Loop
	Death:
		TNT1 A 1
		Stop
	}
}
class Gas : Ammo 26230 { 
	Default {
 
	Inventory.PickupSound "misc/pickup"
	Inventory.Amount 24
	Inventory.MaxAmount 240
	Ammo.BackPackAmount 24
	Ammo.BackPackMaxAmount 480
	Inventory.PickupMessage "You picked up a gasoline cannister"
	Inventory.Icon AGASA0
	}
	States
	{
	Spawn:
		AGAS A -1
		Loop
	}
}
// Delta-Touch & GZDoom Fix
class BigGas : Ammo 26231 { 
	Default {
 
	Inventory.PickupSound "misc/pickup"
	Inventory.Amount 120
	Inventory.MaxAmount 240
	Ammo.BackPackAmount 24
	Ammo.BackPackMaxAmount 480
	Inventory.PickupMessage "You picked up a gasoline pack"
	Inventory.Icon AGASB0
	}
	States
	{
	Spawn:
		AGAS B -1
		Loop
	}
}
class Machinegun : "DPT.HQ-Weapon" 26336 { 
	Default {
 
	//$Category weapons
	Obituary "%o was gunned down by %k's machinegun."
	radius 20
	height 16
	attacksound "MGun/Fire"
	decal "BulletChip"
	Inventory.PickupMessage "You got the machinegun!"
	Weapon.kickback 100
	Weapon.AmmoType "Clip"
	Weapon.AmmoUse 1
	Weapon.AmmoGive 20
	}
	States
	{
	Ready:
		RGUN A 1 A_WeaponReady
		loop
	DeSelect: 
		RGUN A 1 A_Lower
		loop
	Select:
		RGUN A 1 A_Raise
		loop
	Fire:
		RGUN B 0 A_FireBullets (7, 6, 1, 6, "BulletPuff")
		RGUN B 0 radius_quake (2, 2, 0, 1, 0)
		RGUN BC 1 A_GunFlash
		RGUN A 2 
		RGUN A 0 A_ReFire
		RGUN A 5
		Goto Ready
	Flash:
		TNT1 A 1 Bright A_Light1
		TNT1 B 1 Bright A_Light2
		TNT1 A 0 Bright A_Light0
		Stop
	Spawn:
		RGUP A -1
		Stop
	}
}
class NailGunMG : "DPT.HQ-Weapon" 26337 { 
	Default {
 
	//$Category weapons
	Weapon.AmmoUse 1
	Weapon.AmmoGive 25
	Weapon.KickBack 40
	Weapon.AmmoType "Nails"
	Inventory.PickupSound "Misc/W_PkUp"
	Inventory.PickupMessage "You got the NailGun!"
	Obituary "%o was nailed by %k."
	}
	States
	{
	Spawn:
		NLMG F -1
		Loop
	Select:
		NLMG A 1 A_Raise
		Loop
	DeSelect:
		NLMG A 1 A_Lower
		Loop
	Ready:
		NLMG A 1 A_WeaponReady
		Loop
	Fire:
		NLMG B 0 A_PlayweaponSound("weapons/NailMGFire")
		NLMG B 2 A_FireCustomMissile("MGNail", Random(4, -4), 1, -3, 0, 0, Random(2, -2))
		NLMG B 0 Bright A_Light2
		NLMG C 1
		NLMG A 1
		NLMG D 0 A_PlayweaponSound("weapons/NailMGFire")
		NLMG D 2 A_FireCustomMissile("MGNail", Random(4, -4), 1, 3, 0, 0, Random(2, -2))
		NLMG D 0 Bright A_Light2
		NLMG E 1
		NLMG A 1
		NLMG E 0 A_Light0
		Goto Ready
	}
}
class Nails : Ammo 26232 { 
	Default {
 
	Radius 16
	Height 8
	Inventory.PickupMessage "Picked up a Box of Nails"
	Inventory.Icon "NLPJI0"
	Inventory.Amount 25
	Inventory.MaxAmount 125
	Ammo.BackPackAmount 25
	Ammo.BackPackMaxAmount 250
	}
	States
	{
	Spawn:
		NBOX A -1
		Stop
	}
}
class MGNail : actor { 
	Default {
 
	Projectile
	Radius 3
	Height 3
	Speed 44
	Damage 4
	Scale 0.5
	+BloodSplatter
	SeeSound ""
	DeathSound ""
	Decal BulletChip
	}
	States
	{
	Spawn:
		NLPJ A 1 A_SpawnItemEx("NailBlur", 0, 0, 0, 1, 0, 0, 180, 128)
		NLPJ A 0 A_PlaySound("weapons/NailFlight")
		Loop
	Crash:
	Death:
		NLPJ B 0 A_PlaySound("weapons/NailHit")
		NLPJ BCDEFG 2
		Stop
	XDeath:
		NLPJ B 0 A_PlaySound("weapons/NailHitBleed")
		NLPJ BCDEFG 2
		Stop
	}
}
class NailBlur        : actor { 
	Default {
 
	Height 8
	Radius 1
	Damage 0
	Scale 0.6
	Speed 0.2
	RenderStyle "Translucent"
	Alpha 0.5
	+NoGravity
	+DropOff
	+NoTeleport
	}
	States
	{
	Spawn:
		NLPJ A 1 A_FadeOut(0.4)
		Loop
	}
}
class AlternativeDoom3SSG : SuperShotgun 26338 { 
	Default {
 
	//$Category weapons
	Decal "BulletChip"
	}
	States
	{
	Ready:
		SSG3 A 1 A_WeaponReady
		Loop
	Select:
		SSG3 A 1 A_Raise
		Loop
	DeSelect:
		SSG3 A 1 A_Lower
		Loop
	Fire:
		SSG3 K 4 Bright A_FireShotgun2
		SSG3 L 4
		SSG3 A 4 A_CheckReload
		SSG3 B 4
		SSG3 C 4 A_OpenShotgun2
		SSG3 D 16
		SSG3 EFG 2
		SSG3 H 4 A_LoadShotgun2
		SSG3 D 5
		SSG3 I 4 A_CloseShotgun2
		SSG3 A 5
		Goto Ready
	Flash:
		TNT1 A 1 A_Light1
		TNT1 A 1 A_Light2
		TNT1 A 1 A_Light0
		Stop
	}
}
class Coachgun : "DPT.HQ-Weapon" 26220 { 
	Default {
 
	//$Category weapons
	Weapon.AmmoUse 2
	Weapon.AmmoGive 8
	Weapon.AmmoType "Shell"
	Decal "BulletChip"
	Inventory.PickupMessage "You got the coach gun!"
	Obituary "%o was blown away by %k's coachgun."
	}
	States
	{
	Ready:
		COCH A 1 A_WeaponReady
		Loop
	DeSelect:
		COCH A 1 A_Lower
		Loop
	Select:
		COCH A 1 A_Raise
		Loop
	Fire:
		COCH A 3
		COCH B 1 Bright A_FireBullets (5, 4, 20, 5, "BulletPuff")
		COCH B 0 Bright A_PlaySoundEx ("coachgun/fire", "soundslot5")
		COCH B 0 Bright A_Gunflash
		COCH B 0 Bright Radius_Quake (3, 2, 0, 1, 0)
		COCH C 1 Bright A_SetPitch (pitch-2)
		COCH D 1 A_SetPitch (pitch+0.4)
		COCH AAAA 2 A_SetPitch (pitch+0.4)
		COCH A 4
		COCH EFG 2
		COCH H 2 A_PlaySound ("coachgun/reload1")
		COCH I 2
		COCH J 12
		COCH KLMNO 1
		COCH P 4 A_PlaySound ("coachgun/reload2")
		COCH QRSTU 1
		COCH V 8
		COCH W 2
		COCH X 2 A_PlaySound ("coachgun/reload3")
		COCH GFE 2
		COCH A 7 A_Refire
		Goto Ready
	Flash:
		TNT1 A 4 Bright A_Light1
		TNT1 A 3 Bright A_Light2
		Goto LightDone
	Spawn:
		COCP A -1
		Stop
	}
}
class EgoSmasher : "DPT.HQ-Weapon" 26339 { 
	Default {
 
	//$Category weapons
	decal BulletChip
	radius 20
	height 16
	scale 0.6
	Inventory.PickupMessage "You got the EgoSmasher"
	Weapon.kickback 100
	Weapon.AmmoType "shell"
	Weapon.AmmoUse 2
	Weapon.AmmoGive 10
	+WEAPON.NOAUTOFIRE
	}
	States
	{
	Spawn:
		SOGP A -1
		Loop
	Ready:
		SOG2 A 1 A_WeaponReady
		loop
	DeSelect:
		SOG2 A 1 A_Lower
		SOG2 AA 0 A_LOWER
		loop
	Select:
		SOG2 A 1 A_Raise
		SOG2 AA 0 A_RAISE
		loop
	Fire:
		SOG2 A 0 A_GunFlash
		SOG2 A 0 A_PlayweaponSound("EGOFIR")
		SOG2 B 1 Bright A_FireBullets(3,5,5,11,"BulletPuff",1)
		SOG2 A 0 A_PlaySound("EGOFIR")
		SOG2 C 1 Bright A_FireBullets(3,5,5,11,"BulletPuff",0)
		SOG2 DEFGHIJK 1
		Goto Ready
	}
}
class SidebySide : "DPT.HQ-Weapon" 26221 { 
	Default {
 
	//$Category weapons
	Weapon.AmmoUse 2
	Weapon.AmmoGive 8
	Weapon.AmmoType "Shell"
	Decal "BulletChip"
	Weapon.kickback 50
	Inventory.PickupMessage "You got the 8 Gauge Side-by-side shotgun!"
	Obituary "%o ate %k's Buckshot."
	}
	States
	{
	Ready:
		SBSH A 1 A_WeaponReady 
		Loop
	DeSelect:
		SBSH A 1 A_Lower
		Loop
	Select:
		SBSH A 1 A_Raise 
		Loop
	Fire:
		SBSH A 3
		SBSH B 1 Bright A_FireBullets (4.4,1.5, 25, 11, "BulletPuff")
		SBSH B 0 Bright A_PlaySoundEx ("SBSFIRE/fire", "soundslot5")
		SBSH B 0 Bright A_Gunflash
		SBSH B 0 Bright 
		SBSH C 1 Bright 
		SBSH D 1 
		SBSH AAAA 2 
		SBSH A 2
		SBSH EFG 2
		SBSH H 2 A_PlaySound ("SBSRL1/reload1")
		SBSH I 2
		SBSH J 2
		SBSH KLMNO 1
		SBSH P 4 A_PlaySound ("SBSRL2/reload2")
		SBSH QRSTU 1
		SBSH V 2
		SBSH W 2
		SBSH X 2 A_PlaySound ("SBSRL3/reload3")
		SBSH GFE 2
		SBSH A 2 A_Refire
		Goto Ready
	Flash:
		TNT1 A 4 Bright A_Light1
		TNT1 A 3 Bright A_Light2
		Goto LightDone
	Spawn:
		SBSH Y -1
		Stop
	}
}
class Pussy : "DPT.HQ-Weapon"  { 
	Default {
 
	//$Category weapons
	Inventory.PickupSound ""
	Inventory.PickupMessage ""
	+WEAPON.MELEEweapon
	Weapon.Kickback 0
	Weapon.YAdjust 0
	+Inventory.UNDROPPABLE
	+WEAPON.CHEATNOTweapon
	+WEAPON.NOAUTOFIRE
	+WEAPON.NOALERT
	}
	States
	{
	Ready:
		TNT1 A 1 A_WeaponReady
		Loop
	DeSelect:
		TNT1 A 1 A_Lower
		Loop
	Select:
		TNT1 A 1 A_Raise
		Loop
	Fire:
		TNT1 A 1 A_FireCustomMissile ("Mocha", 0,0,0,0)
		TNT1 A 0 A_ReFire
		Goto Ready
	Spawn:
		TNT1 A -1
		Stop
	}
}
class mocha : actor { 
	Default {
 
	Obituary "%o obossan do smerti"
	PROJECTILE
	+MISSILE
	+CLIENTSIDEONLY
	Speed 15
classceFactor 0 : actor { 
	Default {
		Damage 1;
		-NOGRAVITY;
		scale 0.3;
		radius 1;
		height 1;
		mass 1;
		DamageType Piss;
		SeeSound "DSPISS";
	}
	States
	{
		Spawn:
			PISS ABCD 6;
		Death:
			PISS EFG 6;
		RealDeath:
			PISS H 1 A_FadeOut (0.0001);
			TNT1 A 1 Thing_Remove(0);
			Stop;
	}
}
class Dick : "DPT.HQ-Weapon" { 
	Default {
		
		//$Category weapons
		Inventory.PickupSound "";
		Inventory.PickupMessage "";
		+WEAPON.MELEEweapon;
		Weapon.Kickback 0;
		Weapon.YAdjust 0;
		+Inventory.UNDROPPABLE;
		+WEAPON.CHEATNOTweapon;
		+WEAPON.NOAUTOFIRE;
		+WEAPON.NOALERT;
	}
	States
	{
		Ready:
			TNT1 A 1 A_WeaponReady();
			Loop;
		DeSelect:
			TNT1 A 1 A_Lower();
			Loop;
		Select:
			TNT1 A 1 A_Raise();
			Loop;
		Fire:
			TNT1 A 0;
			TNT1 A 2 A_FireCustomMissile("PissOBJ",0,0,0,0,0);
			TNT1 A 0 A_ReFire();
			Goto Ready;
		Altfire:
			TNT1 A 0;
			TNT1 A 8 A_FireCustomMissile("Cum",0,0,0,0,0);
			TNT1 A 0 A_ReFire();
			Goto Ready;
		Spawn:
			TNT1 A -1;
			Stop;
	}
}
class PissOBJ : actor { 
	Default {
		
		Obituary "%o zahlebnulsa mochey";
		Speed 10;
		Radius 4;
		Height 4;
	Translation "176:191=160:167"
		Damage 1;
		+MISSILE;
		+NOBLOCKMAP;
		-NOGRAVITY;
		Scale 1.5;
		DamageType piss;
	}
	States
	{
	Spawn:
		BLUD A 1;
		Loop;
	Death:
		BLUD ABCA 2;
		NULL A 0;
		Stop;
}
}
class BiggestPissOBJ : PissOBJ { Scale 3 } { 
	Default {
class Cum : actor { 
	Default {
		
		Obituary "%o successful win the gokkun challenge";
		Speed 12;
		Radius 4;
		Height 4;
	Translation "176:191=80:81"
		Damage 2;
		+MISSILE;
		+NOBLOCKMAP;
		-NOGRAVITY;
		Scale 1.5;
		DamageType cum;
	}
	States
	{
	Spawn:
		BLUD A 1;
		Loop;
	Death:
		BLUD ABCA 2;
		NULL A 0;
		Stop;
}
}
class DartPowerDick : "DPT.HQ-Weapon" { 
	Default {
	
	//$Category weapons
	Inventory.PickupSound "";
	Inventory.PickupMessage "";
	+WEAPON.MELEEweapon;
	Weapon.Kickback 0;
	Weapon.YAdjust 0;
	+Inventory.UNDROPPABLE;
	+WEAPON.CHEATNOTweapon;
	+WEAPON.NOAUTOFIRE;
	+WEAPON.NOALERT;
	}
	States
	{
	Spawn:
		NULL A 1;
		Stop;
	Ready:
		NULL A 1 A_WeaponReady();
		Loop;
	DeSelect:
		NULL A 1 A_Lower();
		Loop;
	Select:
		NULL A 1 A_Raise();
		Goto Select;
	Fire:
		NULL A 0;
		NULL A 2 A_FireCustomMissile("BiggestPissOBJ",0,0,0,0,0);
		NULL A 0 A_ReFire();
		Goto Ready;
	AltFire:
		NULL A 0 A_GiveInventory("Clip",1);
		NULL A 0 A_PlayweaponSound("DartPowerSwallow");
		NULL A 2 offset (0, 35);
		NULL A 2 offset (0, 30);
		NULL A 2 offset (0, 25);
		NULL A 2 offset (0, 20);
		NULL A 2 offset (0, 15);
		NULL A 2 offset (0, 10);
		NULL A 25 offset (0, 5) A_GiveInventory("DartPowerCancelCheck",1);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (5, 15);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (10, 20);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (5, 25);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (0, 30);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (-5, 25);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (-10, 20);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (-5, 15);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (0, 10);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (0, 5);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (5, 15);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (10, 20);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (5, 25);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (0, 30);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (-5, 25);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (-10, 20);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (-5, 15);
		NULL A 0 A_WeaponReady();
		NULL A 2 offset (0, 10);
		NULL A 0 A_GiveInventory("DartPowerBallCooldown", 1);
		NULL A 0 offset (0, 5) A_FireCustomMissile("DartPowerBall", 0, 0 ,0);
		NULL A 1 offset (0, 55) A_PlayweaponSound("DartPowerSpit");
		NULL A 1 offset (0, 75);
		NULL A 1 offset (0, 95);
		NULL A 1 offset (0, 115);
		NULL A 1 offset (0, 135);
		NULL A 1 offset (0, 115);
		NULL A 1 offset (0, 95);
		NULL A 1 offset (0, 75);
		NULL A 1 offset (0, 55);
		NULL A 10 offset (0, 32) A_TakeInventory("DartPowerCancelCheck",999);
		NULL A 15 offset (0, 32);
		Goto Ready;
	Cancel:
		NULL A 0 A_GiveInventory("Clip",1);
		NULL A 0 A_TakeInventory("DartPowerCancelCheck",999);
		NULL A 0 A_PlayweaponSound("DartPowerCum");
		NULL A 0 offset (0, 55) A_FireCustomMissile("VomitFake",0,0,0,0);
		NULL A 1 offset (0, 55);
		NULL A 1 offset (0, 60);
		NULL A 1 offset (0, 65);
		NULL A 1 offset (0, 70);
		NULL A 1 offset (0, 75);
		NULL A 1 offset (0, 80);
		NULL A 1 offset (0, 85);
		NULL A 1 offset (0, 90);
		NULL LLLLLLLLLLLLLLLLLLLLLLLLL 1 offset (0, 95) A_FireCustomMissile("DartPowerCum",random(-20,20),0,0,3);
		NULL A 10 offset (0, 95);
		NULL A 2 offset (0, 90);
		NULL A 2 offset (0, 85);
		NULL A 2 offset (0, 80);
		NULL A 2 offset (0, 75);
		NULL A 2 offset (0, 70);
		NULL A 2 offset (0, 65);
		NULL A 2 offset (0, 60);
		NULL A 2 offset (0, 55);
		NULL A 2 offset (0, 32);
		Goto Ready;
}
}
class DartPowerCum : actor { 
	Default {
	
	speed 1;
	height 2;
	radius 2;
	scale 0.2;
	damage (random(2,3));
	renderstyle "Translucent";
	alpha 0.8;
	Obituary "%o was puked on by %k.";
	PROJECTILE;
	+RIPPER;
	-NOGRAVITY;
	+BLOODLESSIMPACT;
	}
	States
	{
	Spawn:
		SRBB E 0;
		SRBB E 5 A_Recoil(random(-12,-22));
		SRBB EFGHI 5;
		Stop;
}
}
class VomitFake : actor { 
	Default {
	
	PROJECTILE;
	-SOLID;
	+NOGRAVITY;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Stop;
}
}
class DartPowerCancelCheck : Inventory { 
	Default {
	
	Inventory.Amount 1;
	Inventory.MaxAmount 1;
	}
}
class DartPowerBall : actor { 
	Default {
	
	PROJECTILE;
	Speed 50;
	-NOGRAVITY;
	Scale 0.8;
	+LOWGRAVITY;
	decal "BloodSplat";
	Obituary "%o was stained by %k's blood ball.";
	Damage 3;
	Height 5;
	Radius 6;
	renderstyle "Translucent";
	alpha 1.0;
	reactiontime 8;
	}
	States
	{
	Spawn:
		BLBA AABBCCDD 2 A_SpawnItem("DartPowerCum",0,0,0,1);
		BLBA A 0 A_CountDown();
		Loop;
	Death:
		VFX6 A 0 A_Stop();
		VFX6 A 0 A_ChangeFlag("NOGRAVITY",1);
		VFX6 A 0 A_Explode(125, 88, 0);
		NULL A 0 A_PlaySound("gibbage/xsplat");
		NULL A 0 A_SpawnItemEx ("DartPowerCum", 1, 1, random(8,32), random(0,5), random(0,5), 0, random(0,360), 160, 0);
		NULL A 0 A_SpawnItemEx ("DartPowerCum", 1, 1, random(8,32), random(0,5), random(0,5), 0, random(0,360), 160, 0);
		NULL A 0 A_SpawnItemEx ("DartPowerCum", 1, 1, random(8,32), random(0,5), random(0,5), 0, random(0,360), 160, 0);
		NULL A 0 A_SpawnItemEx ("DartPowerCum", 1, 1, random(8,32), random(0,5), random(0,5), 0, random(0,360), 160, 0);
		NULL A 0 A_SpawnItemEx ("DartPowerCum", 1, 1, random(8,32), random(0,5), random(0,5), 0, random(0,360), 160, 0);
		VFX6 ABCDE 3 A_FadeOut(0.08);
		Stop;
}
}
class DartPowerBallCooldown : PowerDamage { 
	Default {
	
	DamageFactor "Null", 1.0;
	Powerup.Duration 69;
	}
}
class Doom3SSG : "DPT.HQ-Weapon" 20206 { 
	Default {
	
	//$Category weapons
	decal "BulletChip";
	Scale 0.27;
	Obituary "%o chewed on %k's Double Barrel Shotgun.";
	Inventory.PickupMessage "You got the Double Barrel Shotgun!" ;
	Weapon.kickback 300;
	Weapon.AmmoType "Shell";
	Weapon.AmmoUse 2;
	Weapon.AmmoGive 12;
	AttackSound "SSGFIRE";
	}
	States
	{
	Ready:
		D3SS A 1 A_WeaponReady();
		Loop;
	DeSelect: 
		D3SS A 1 A_LOWER();
		Loop;
	Select:
		D3SS A 1 A_RAISE();
		Loop;
	Fire:
		D3SS A 0 A_GunFlash();
		D3SS B 1 Bright A_FireBullets (11.2, 7.1, 20, 5, "BulletPuff");
		D3SS CDEFAAA 2;
		D3SS GHIJKLMNOPQRSTUVWXY 1;
		D3SS A 0 A_PlaySound("SSGREL1");
		D3SS Z 1;
		D3S2 ABCDDDDDDDDDD 1;
		D3S2 EFGHIJ 1;
		D3S2 A 0 A_PlaySound("SSGLOAD");
		D3S2 A 0();//A_FireCustomMissile(SuperShotgunCasingSpawner, 0, 0, 3, 0)
		D3S2 A 0();//A_FireCustomMissile(SuperShotgunCasingSpawner, 0, 0, -3, 0)
		D3S2 KLMNO 1;
		D3S2 A 0 A_PlayweaponSound("SSGREL2");
		D3S2 P 2;
		D3S2 Q 2;
		D3S2 R 1;
		D3S2 S 1;
		D3S2 T 1;
		D3S2 UVW 1;
		Goto Ready;
	Spawn:
		SSGZ A -1;
		Stop;
}
}
class BlueSprayPaint : "DPT.HQ-Weapon" 26202 { 
	Default {
	
	//$Category weapons
	Weapon.UpSound "DSSPRYSH";
	+WEAPON.NOALERT;
	+WEAPON.NOAUTOAIM;
	+WEAPON.WIMPY_weapon;
	Scale 0.5;
	}
	States
	{
	Ready:
		SPRY A 0 A_StopSoundEx("Body");
		SPRY A 1 A_WeaponReady();
		Loop;
	DeSelect:
		SPRY A 1 A_Lower();
		SPRY A 0 A_StopSoundEx("Body");
		Loop;
	Select:
		SPRY A 1 A_Raise();
		Loop;
	Fire:
		SPRY A 0 A_PlaySoundEx("DSSPRY", "Body", 1);
		SPRY C 2 OFFSET (0, 35) A_FireCustomMissile ("PaintSpray",0,1);
		SPRY A 0 A_ReFire();
		SPRY A 0 A_StopSoundEx("Body");
		SPRY A 20 OFFSET (0, 33);
		Goto Ready;
	Spawn:
		SPRY B -1;
		Stop;
}
}
class RedSprayPaint : BlueSprayPaint 26203 { 
	Default {
	
Translation "192:207=32:47"
	}
	States
	{
Fire:
	SPRY A 0 A_PlaySoundEx("DSSPRY", "Body", 1);
	SPRY C 2 OFFSET (0, 35) A_FireCustomMissile ("RedPaintSpray",0,1);
	SPRY A 0 A_ReFire();
	SPRY A 0 A_StopSoundEx("Body");
	SPRY A 20 OFFSET (0, 33);
	Goto Ready;
}
}
class GreenSprayPaint : BlueSprayPaint 26204 { 
	Default {
 
	Translation "192:207=112:127"
	}
	States
	{
	Fire:
		SPRY A 0 A_PlaySoundEx("DSSPRY", "Body", 1)
		SPRY C 2 OFFSET (0, 35) A_FireCustomMissile ("GreenPaintSpray",0,1) 
		SPRY A 0 A_ReFire
		SPRY A 0 A_StopSoundEx("Body") 
		SPRY A 20 OFFSET (0, 33)
		Goto Ready
	}
}
class PaintSpray : actor { 
	Default {
 
	Radius 13
	Height 8
	Speed 25
	Damage 1
	Projectile
	RenderStyle "Translucent"
	decal BlueSprayPaint
	Alpha 0.70
	Scale 0.5
	+CANNOTPUSH
	+BLOODLESSIMPACT
	+NODAMAGETHRUST
	+RANDOMIZE
	+DONTSPLASH
	+PAINLESS
	Obituary "%o was sprayed by %k's spray paint."
	}
	States
	{
	Spawn:
		SPRA A 0
		SPRA A 0 A_Jump(128,"Spawn2") 
		SPRA AAABBBCCCDDDEEE 2 A_FadeOut(0.05)
		Stop
	Spawn2:
		SPRA FFFGGGHHHIIIJJJ 2 A_FadeOut(0.05)
		Stop
	Death:
		NULL Z 1
		Stop
	}
}
class RedPaintSpray : PaintSpray { 
	Default {
 
	Translation "192:207=32:47"
	decal RedSprayPaint
	}
}
class GreenPaintSpray : PaintSpray { 
	Default {
 
	Translation "192:207=112:127"
	decal GreenSprayPaint
	}
}
// New
class SprayPaint : "DPT.HQ-Weapon" 26205 { 
	Default {
 
	//$Category weapons
	Scale .75
	+NOALERT
	Inventory.PickupMessage "Got a can of spraypaint! Go tag something!"
	Obituary "%o was killed by %k during a tragic painting accident."
	Weapon.Kickback 0
	DONTHURTSHOOTER
	+NOAUTOFIRE
	}
	States
	{
	Spawn:
		SYPT A -1
		Loop
	Ready:
		SYPT B 1 A_WeaponReady
		Loop
	DeSelect:
		SYPT B 1 A_Lower
		Loop
	Select:
		NULL AAAAAAAAAAAAAAA 0 A_Raise
		SYPT BBBBBBB 0 A_Lower
		SYPT CCC 1 A_Raise
		SYPT CCC 0 A_Raise
		SYPT C 0 A_PlayweaponSound("weapons/M3ShtShell")
		SYPT CCC 1 A_Lower
		SYPT CCC 0 A_Lower
		SHT3 I 0 A_Playsoundex ("weapons/M500load", voice)
		SYPT CCC 1 A_Raise
		SYPT CCC 0 A_Raise
		SYPT C 0 A_PlayweaponSound("weapons/M3ShtShell")
		SYPT CCC 1 A_Lower
		SYPT CCC 0 A_Lower
		SYPT CCCCCCC 0 A_Raise
		Goto Ready
	AltFire:
		SYPT BB 3
		SYPT A 0 A_Refire
		NULL A 0 A_JumpIfInventory("Spraycolor",8,"changeback")
		SYPT BBBBBBB 0 A_Lower
		SYPT CCC 1 A_Raise
		SYPT CCC 0 A_Raise
		SYPT C 0 A_PlayweaponSound("weapons/M3ShtShell")
		SYPT CCC 1 A_Lower
		SYPT CCC 0 A_Lower
		SHT3 I 0 A_Playsoundex ("weapons/M500load", voice)
		SYPT CCC 1 A_Raise
		SYPT CCC 0 A_Raise
		SYPT C 0 A_PlayweaponSound("weapons/M3ShtShell")
		SYPT CCC 1 A_Lower
		SYPT CCC 0 A_Lower
		NULL A 0 A_GiveInventory("Spraycolor",1)
		SHT3 I 0 ACS_Execute(900,0,0,0,0)
		SYPT CCCCCCC 0 A_Raise
		Goto Ready
	changeback:
		SYPT BBBBBBB 0 A_Lower
		SYPT CCC 1 A_Raise
		SYPT CCC 0 A_Raise
		SYPT C 0 A_PlayweaponSound("weapons/M3ShtShell")
		SYPT CCC 1 A_Lower
		SYPT CCC 0 A_Lower
		SHT3 I 0 A_Playsoundex ("weapons/M500load", voice)
		SYPT CCC 1 A_Raise
		SYPT CCC 0 A_Raise
		SYPT C 0 A_PlayweaponSound("weapons/M3ShtShell")
		SYPT CCC 1 A_Lower
		SYPT CCC 0 A_Lower
		NULL A 0 A_TakeInventory("Spraycolor",7)
		SYPT CCCCCCC 0 A_Raise
		Goto Ready
	AltHold:
		NULL A 0 A_JumpIfInventory("SprayAlt",1,4)
		SYPT B 2
		SYPT D 3 A_PlaySound("weapons/Zippo")
		SYPT E 2 Bright
		SYPT F 1 Bright
		SYPT C 0 A_FireCustomMissile("PaintBurn", 0, 1, 8, 0)
		NULL A 0 A_GiveInventory("SprayAlt", 1)
		SYPT F 0 A_ReFire
		NULL A 0 A_TakeInventory("SprayAlt", 1)
		SYPT F 1 Bright
		SYPT E 2 Bright
		SYPT D 3 A_PlaySound("weapons/ZippoClose")
		SYPT B 2
		Goto Ready
	Fire:
		NULL A 0 A_JumpIfInventory("Spraycolor",7,"black")
		NULL A 0 A_JumpIfInventory("Spraycolor",6,"white")
		NULL A 0 A_JumpIfInventory("Spraycolor",5,"yellow")
		NULL A 0 A_JumpIfInventory("Spraycolor",4,"purple")
		NULL A 0 A_JumpIfInventory("Spraycolor",3,"orange")
		NULL A 0 A_JumpIfInventory("Spraycolor",2,"green")
		NULL A 0 A_JumpIfInventory("Spraycolor",1,"red")
		SYPT C 0 A_PlaySound("SprayMist/shoot")
		SYPT C 2 A_FireCustomMissile("PaintMist", 0, 1, 8, 4)
		SYPT C 0 A_ReFire
		Goto Ready   
	Red:
		SYPT C 0 A_PlaySound("SprayMist/shoot")
		SYPT C 2 A_FireCustomMissile("PaintMist2", 0, 1, 8, 4)
		SYPT C 0 A_ReFire
		Goto Ready  
	Green:
		SYPT C 0 A_PlaySound("SprayMist/shoot")
		SYPT C 2 A_FireCustomMissile("PaintMist3", 0, 1, 8, 4)
		SYPT C 0 A_ReFire
		Goto Ready  
	Orange:
		SYPT C 0 A_PlaySound("SprayMist/shoot")
		SYPT C 2 A_FireCustomMissile("PaintMist4", 0, 1, 8, 4)
		SYPT C 0 A_ReFire
		Goto Ready  
	Purple:
		SYPT C 0 A_PlaySound("SprayMist/shoot")
		SYPT C 2 A_FireCustomMissile("PaintMist5", 0, 1, 8, 4)
		SYPT C 0 A_ReFire
		Goto Ready  
	Yellow:
		SYPT C 0 A_PlaySound("SprayMist/shoot")
		SYPT C 2 A_FireCustomMissile("PaintMist7", 0, 1, 8, 4)
		SYPT C 0 A_ReFire
		Goto Ready  
	White:
		SYPT C 0 A_PlaySound("SprayMist/shoot")
		SYPT C 2 A_FireCustomMissile("PaintMist6", 0, 1, 8, 4)
		SYPT C 0 A_ReFire
		Goto Ready 
	Black:
		SYPT C 0 A_PlaySound("SprayMist/shoot")
		SYPT C 2 A_FireCustomMissile("PaintMist8", 0, 1, 8, 4)
		SYPT C 0 A_ReFire
		Goto Ready 
	Flash:
		SYPT C 0
		Stop
	}
}
class PaintMist : actor { 
	Default {
 
	decal BlueSprayPaint
	Scale .35
	Radius 3
	Height 4
	Damage 1
	Speed 8
	+NOGRAVITY
	+DROPOFF
	+MISSILE
	+DONTSPLASH
	+STRIFEDAMAGE
	PROJECTILE
	RENDERSTYLE "Translucent"
	SeeSound "items/nitrogenbombcloud" 
	DeathSound "items/nitrogenbombcloud"
	Alpha 0.35
	}
	States
	{
	Spawn:
		PTMT A 1 A_PlayweaponSound("SprayMist")
		Goto Death
	Death:
		PTMT A 1 Bright
		PTMT CDEFGHIJKLMNOPQRSTUVWXYZ 1 Bright
		Stop
	}
}
class PaintMist2 : PaintMist { 
	Default {
 
	decal RedSprayPaint
	Translation "192:207=172:191"
	}
}
class PaintMist3 : PaintMist { 
	Default {
 
	decal GreenSprayPaint
	Translation "192:207=112:127"
	}
}
class PaintMist4 : PaintMist { 
	Default {
 
	decal OrangeSprayPaint
	Translation "192:207=211:223"
	}
}
class PaintMist5 : PaintMist { 
	Default {
 
	decal PurpleSprayPaint
	Translation "192:207=250:254"
	}
}
class PaintMist6 : PaintMist { 
	Default {
 
	decal YellowSprayPaint
	Translation "192:207=64:79"
	}
}
class PaintMist7 : PaintMist { 
	Default {
 
	decal WhiteSprayPaint
	Translation "192:207=160:167"
	}
}
class PaintMist8 : PaintMist { 
	Default {
 
	decal BlackSprayPaint
	Translation "192:207=103:111"
	}
}
class PaintBurn : actor { 
	Default {
 
	decal BlackSprayPaint
	Radius 6
	Height 6
	Speed 10
	Obituary "%o fell victim to %k's pyromania."
	SeeSound "weapons/CottonLight"
	Damage 2
	PROJECTILE
	RENDERSTYLE "Translucent"
	ALPHA 0.35
	Scale 1.75
	+FIREDAMAGE
	+STRIFEDAMAGE
	}
	States
	{
	Spawn:
		FLME ABCDEFGH 1 Bright
	Death:
		FLME IJKLMN 1 Bright
		NULL A 0 A_SetTranslucent(0.30)
		FLME OP 1 Bright
		NULL A 0 A_SetTranslucent(0.40)
		FLME O 1 Bright
		NULL A 0 A_SetTranslucent(0.50)
		FLME Q 1 Bright
		NULL A 0 A_SetTranslucent(0.60)
		FLME R 1 Bright
		Stop
	}
}
class SprayAlt : Inventory { 
	Default {
 
	Inventory.Amount 1
	Inventory.MaxAmount 1
	}
}
class SprayColor : Inventory { 
	Default {
 
	Inventory.Amount 1
	Inventory.MaxAmount 8
	}
}
class BlueBeam : actor { 
	Default {
 
 +NoClip
 +NoBlockmap
 +ForceYBillboard
 +NoInteraction
 RenderStyle "Add"
 XScale 0.05
 YScale 4.0
 Alpha 0.5
	}
 States
 {
  Spawn:
   SBBL A 0
   SBBL AAAAAAAAAA 1 A_FadeIn(0.1)
   SBBL A 1 Bright A_SpawnItemEx("BeamFire", 0, 0, 0, 0.01 * Random(-10, 10), 0.01 * Random(-10, 10), 0.01 * Random(0, 125), 0, 128, 0)
   Wait
 }
}
class BeamFire : actor { 
	Default {
 
 +NoInteraction
 RenderStyle "Add"
 Alpha 1
 Scale 0.2
	}
 States
 {
  Spawn:
   TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
   TNT1 A 0 A_SpawnItemEx("BeamSmoke", 0, 0, 0, momx, momy, momz, 0, 128, 0)
   ION1 A 1 Bright A_FadeOut(0.02)
   Wait
  Spawn2:
   ION1 B 1 Bright A_FadeOut(0.02)
   Wait
  Spawn3:
   ION1 C 1 Bright A_FadeOut(0.02)
   Wait
  Spawn4:
   ION1 D 1 Bright A_FadeOut(0.02)
   Wait
 }
}
class BeamSmoke : actor { 
	Default {
 
 +NoInteraction
 Scale 0.4
	}
 States
 {
  Spawn:
   TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
   SMOK A 1 Bright A_FadeOut(0.01)
   Wait
  Spawn2:
   SMOK B 1 Bright A_FadeOut(0.01)
   Wait
  Spawn3:
   SMOK C 1 Bright A_FadeOut(0.01)
   Wait
  Spawn4:
   SMOK D 1 Bright A_FadeOut(0.01)
   Wait
 }
}
class BlueStrike : actor { 
	Default {
 
 +NoGravity
 +ForceRadiusDmg
 +ForceYBillboard
 RenderStyle "Add"
 Scale 1.0
 YScale 4.0
	}
 States
 {
  Spawn:
   TNT1 A 0
   TNT1 A 0 A_SpawnItem("BlueFlare2", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("IonFloor", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("IonSphere", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("IonBlasphemy", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("IonPole", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("IonSmokePole", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("IonDebris", 0, 0, 0)
   BBLU A 1 Bright A_PlaySoundEx("Laser/Boom", "Voice", 0, 2)
   BBLU A 1 Bright A_Explode(75000, 1024, 1)
   BBLU A 1 Bright A_SetTranslucent(0.9, 1)
   BBLU A 1 Bright A_SetTranslucent(1.0, 1)
   BBLU AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 Bright A_FadeOut(0.02)
   TNT1 A 105
   Stop
 }
}
class BlueFlare2 : BlueStrike { 
	Default {
 
 XScale 1.0
 YScale 1.0
 Scale 10.0
 Alpha 0.8
	}
 States
 {
  Spawn:
   FBLU A 0 Bright
   FBLU A 1 Bright A_FadeOut(0.005)
   Wait
 }
}
class IonBeacon : actor { 
	Default {
 
 +Missile
 +DoomBounce
 Speed 15
 Radius 8
 Height 16
 Translation "Ice"
 RenderStyle "Add"
	}
 States
 {
  Spawn:
   BAL1 A 1005
   Wait
  Death:
   BAL1 A 1 A_SetTranslucent(0.8, 1)
   BAL1 A 1 A_SetTranslucent(0.5, 1)
   BAL1 A 1 A_SetTranslucent(0.2, 1)
   BAL1 A 1 A_SetTranslucent(0.1, 1)
   BAL1 A 1 A_SetTranslucent(0.0, 1)
   BFLR A 1 Bright A_SetTranslucent(0.1, 1)
   BFLR A 1 Bright A_SetTranslucent(0.3, 1)
   BFLR A 1 Bright A_SetTranslucent(0.7, 1)
   BFLR A 1 Bright A_SetTranslucent(1.0, 1)
   BFLR AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("BeamFire", 0, 0, 0, 0.1 * Random(-3, 3), 0.1 * Random(-3, 3), 0.01 * Random(20, 150), 0, 128, 0)
   BFLR A 1 ACS_ExecuteAlways(384, 0, 0, 0, 0)
   BFLR A 1 A_FadeOut(0.05)
   Wait
 }
}
class BeaconSpark : actor { 
	Default {
 
 +NoInteraction
 Gravity 1
 Height 3
 Radius 2
 RenderStyle "Add"
 Scale 0.1
	}
 States
 {
  Spawn:
   ION1 A 20 Bright
   ION1 A 1 Bright A_FadeOut(0.2)
   Wait
 }
}
class IonRing : actor { 
	Default {
 
+NOBLOCKMAP
+NOCLIP
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("IonSmokefx", 0, 0, 0 ,0.00001 * Random(0, 300000), 0.00001 * Random(0, 300000), 0, Random(0, 359), 128, 0)
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnitemEx("IonFx3", 0, 0, 0, random(-6,6), random(-6,6), random(0,6), 0, (128|32), 0)
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnitemEx("IonFx3", 0, 0, 0, random(-1,1), random(-1,1), 0.0001 * Random(10000, 20000), 0, (128|32), 0)
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnitemEx("IonSmoke2", 0, 0, 0,0.0001 * Random(-80000, 80000), 0.0001 * Random(-80000, 80000), 0.0001 * Random(0, 80000), 0, (128|32), 0)
//TNT1 AAAAA 0 A_SpawnitemEx("IonSmoke2", 0.0001 * Random(-60000, 60000), 0.0001 * Random(-60000, 60000), 0.0001 * Random(-60000, 60000), 0, 0, 0.0001 * Random(0, 10000), 0, (128|32), 0)
TNT1 AAAAA 0 A_SpawnitemEx("IonFire", random(-1,1), random(-1,1), 0, 0.0001 * Random(0, 100), 0.0001 * Random(0, 100), 0.0001 * Random(0, 7000), 0, (128|32), 0)
//TNT1 AAAAAAAAAAAAAA 0 A_SpawnitemEx("IonBigSmoke", 0, 0, 16, 0.0001 * Random(0, 10000), 0.0001 * Random(0, 10000), 0.0001 * Random(0, 10000), 0, (128|32), 0)
TNT1 A 0 
TNT1 A 1
Stop
}}
class IonFloor : IonRing { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("IonSmokefx", 0, 0, 0 ,0.00001 * Random(-800000, 800000), 0.00001 * Random(-800000, 800000),0,0, 128, 0)
Stop
}}
class IonSphere : IonRing { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("IonSmokefx", 0, 0, 0 ,0.00001 * Random(-500000, 500000), 0.00001 * Random(-500000, 50000),0.00001 * Random(0, 500000),0, 128, 0)
Stop
}}
class IonBlasphemy : IonRing { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("Ionfx2", 0, 0, 0 ,0.00001 * Random(-500000, 500000), 0.00001 * Random(-500000, 500000),0.00001 * Random(0, 500000),0, 128, 0)
Stop
}}
class IonPole : IonRing { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("Ionfx2", 0, 0, 0 ,0.00001 * Random(-10000, 10000), 0.00001 * Random(-10000, 10000),0.00001 * Random(0, 2000000),0, 128,0)
Stop
}
}
class IonSmokePole : IonRing { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("Ionsmokefx", 0, 0, 0 ,0.00001 * Random(-10000, 10000), 0.00001 * Random(-1000, 10000),0.00001 * Random(0, 2000000),0, 128,0)
Stop
}
}
class IonDebris : IonRing { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("Ionfx3", 0, 0, 0 ,0.00001 * Random(-2000000, 2000000), 0.00001 * Random(-2000000, 2000000),0.00001 * Random(0, 2000000),0, 128,0)
Stop
}
}
class IonFx : actor { 
	Default {
 
+NOBLOCKMAP
+NOCLIP
+NOINTERACTION
+NOGRAVITY
Renderstyle "Add"
alpha 0.2
ReactionTime 10
Speed 28
Scale 5.0
PROJECTILE
	}
States
{
Spawn:
ION1 ABCD 10 Bright A_SpawnitemEx("IonFx2", 0, 0, 0, 0, 0, 0, 0, (128|32), 0)
ION1 A 0 Bright A_Countdown
loop
Death:
Stop
}
}
class IonFx2 : IonFx { 
	Default {
 
reactionTime 0
Speed 0
scale 4.0
	}
States
{
Spawn:
   TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
   ION1 A 1 Bright A_FadeOut(0.001)
   Wait
  Spawn2:
   ION1 B 1 Bright A_FadeOut(0.001)
   Wait
  Spawn3:
   ION1 C 1 Bright A_FadeOut(0.001)
   Wait
  Spawn4:
   ION1 D 1 Bright A_FadeOut(0.001)
   Wait
 }
}
class IonFx3 : IonFx { 
	Default {
 
ReactionTime 5
Scale 3.7
renderstyle "Add"
Alpha 0.02
	}
States
{
Spawn:
ION1 ABCD 4 Bright A_SpawnitemEx("IonFx4", 0, 0, 0, 0, 0, 0, 0, (128|32), 0)
ION1 A 0 Bright A_Countdown
loop
Death:
Stop
}
}
class IonFx4 : IonFx2 { 
	Default {
 
scale 3.0
renderstyle "Add"
Alpha 0.05
	}
}
class IonSmoke1 : IonFx { 
	Default {
 
+NOINTERACTION
+ForceRadiusDmg
Speed 28
ReactionTime 70
	}
States
{
Spawn:
TNT1 A 2 A_SpawnitemEx("IonSmokeFx", 0, 0, 0, 0, 0, 0.0001 * Random(80000, 100000), 0, (128|32), 0)
TNT1 A 0 A_Explode(255, 256, 1)
TNT1 A 0 A_Countdown
loop
}
}
class IonSmokeFx : IonSmoke1 { 
	Default {
 
+NOGRAVITY
RenderStyle "Normal"
reactionTime 0
Speed 0
Alpha 0.2
scale 8.0
	}
States
{
  Spawn:
   TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
   SMOK A 1 Bright A_FadeOut(0.0005)
   Wait
  Spawn2:
   SMOK B 1 Bright A_FadeOut(0.0005)
   Wait
  Spawn3:
   SMOK C 1 Bright A_FadeOut(0.0005)
   Wait
  Spawn4:
   SMOK D 1 Bright A_FadeOut(0.0005)
   Wait
 }
}
class IonSmoke2 : IonSmoke1 { 
	Default {
 
+NoInteraction
RenderStyle "Normal"
reactionTime 0
Speed 0
scale 5.4
	}
States
{
  Spawn:
   TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
   SMOK A 1 Bright A_FadeOut(0.0002)
   Wait
  Spawn2:
   SMOK B 1 Bright A_FadeOut(0.0002)
   Wait
  Spawn3:
   SMOK C 1 Bright A_FadeOut(0.0002)
   Wait
  Spawn4:
   SMOK D 1 Bright A_FadeOut(0.0002)
   Wait
 }
}
class IonBigSmoke : IonSmoke1 { 
	Default {
 
+NoInteraction
-Noclip
-Nogravity
+LowGravity
+Hexenbounce
+Doombounce
-ForceRadiusDmg
	}
}
class IonFire : IonSmokeFx { 
	Default {
 
Scale 1.0
Renderstyle "Add"
alpha 0.25
	}
States
{
  Spawn:
   IOF1 A 5 A_FadeOut(0.003)
   Wait
 }
}
class HyperBlueStrike : BlueStrike { 
	Default {
 
Scale 15.0
	}
States
{
Spawn:
   TNT1 A 0
   TNT1 A 0 A_SpawnItem("HyperBlueFlare", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("HyperIonFloor", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("HyperIonSphere", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("HyperIonBlasphemy", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("HyperIonPole", 0, 0, 0)
   TNT1 A 0 A_SpawnItem("HyperIonSmokePole", 0, 0, 0)
   //TNT1 A 0 A_SpawnItem("HyperIonDebris", 0, 0, 0)
   BBLU A 1 Bright A_PlaySoundEx("Laser/Boom", "Voice", 0, 2)
   BBLU A 1 Bright A_Explode(75000, 1750, 1)
   BBLU A 1 Bright A_SetTranslucent(0.9, 1)
   BBLU A 1 Bright A_SetTranslucent(1.0, 1)
   BBLU A 0 Radius_Quake(7, 105, 120, 140, 0)
   BBLU AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 Bright A_FadeOut(0.02)
   TNT1 A 105
   Stop
 }
}
class HyperBlueFlare : BlueFlare2 { 
	Default {
 
 Scale 60.0
 Alpha 0.8
	}
 States
 {
  Spawn:
   FBLU A 0 Bright
   FBLU A 1 Bright A_FadeOut(0.005)
   Wait
 }
}
class HyperIonFloor : IonFloor { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("HyperIonSmokefx", 0, 0, 0 ,0.00001 * Random(-800000, 800000), 0.00001 * Random(-1200000, 1200000),0,0, 128, 0)
Stop
}}
class HyperIonSphere : IonSphere { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("HyperIonSmokefx", 0, 0, 0 ,0.00001 * Random(-700000, 700000), 0.00001 * Random(-700000, 700000),0.00001 * Random(0, 700000),0, 128, 0)
Stop
}}
class HyperIonBlasphemy : IonBlasphemy { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("HyperIonfx2", 0, 0, 0 ,0.00001 * Random(-700000, 700000), 0.00001 * Random(-700000, 700000),0.00001 * Random(0, 700000),0, 128, 0)
Stop
}}
class HyperIonPole : IonPole { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("HyperIonfx2", 0, 0, 0 ,0.00001 * Random(-300000, 300000), 0.00001 * Random(-300000, 300000),0.00001 * Random(0, 5000000),0, 128,0)
Stop
}
}
class HyperIonSmokePole : IonSmokePole { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("HyperIonsmokefx", 0, 0, 0 ,0.00001 * Random(-300000, 300000), 0.00001 * Random(-700000, 700000),0.00001 * Random(0, 5000000),0, 128,0)
Stop
}
}
class HyperIonDebris : IonDebris { 
	Default {
 
	}
States
{
Spawn:
TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("HyperIonfx3", 0, 0, 0 ,0.00001 * Random(-6000000, 6000000), 0.00001 * Random(-6000000, 6000000),0.00001 * Random(0, 6000000),0, 128,0)
Stop
}
}
class HyperIonsmokefx : Ionsmokefx { 
	Default {
 
Scale 32.0
alpha 0.5
+FORCEXYBILLBOARD
	}
States
{
  Spawn:
   TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
   SMOK A 1 Bright A_FadeOut(0.001)
   Wait
  Spawn2:
   SMOK B 1 Bright A_FadeOut(0.001)
   Wait
  Spawn3:
   SMOK C 1 Bright A_FadeOut(0.001)
   Wait
  Spawn4:
   SMOK D 1 Bright A_FadeOut(0.001)
   Wait
 }
}
class HyperIonfx2 : Ionfx2 { 
	Default {
 
Scale 16.0
alpha 0.4
+FORCEXYBILLBOARD
	}
}
class HyperIonfx3 : Ionfx2 { 
	Default {
 
ReactionTime 7
Scale 8.0
+FORCEXYBILLBOARD
Alpha 0.07
	}
States
{
Spawn:
ION1 ABCD 8 Bright A_SpawnitemEx("HyperIonFx4", 0, 0, 0, 0, 0, 0, 0, (128|32), 0)
ION1 A 0 Bright A_Countdown
loop
Death:
Stop
}
}
class HyperIonFx4 : IonFx4 { 
	Default {
 
Scale 8.0
Alpha 0.07
	}
States
{
Spawn:
   TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
   ION1 A 1 Bright A_FadeOut(0.0005)
   Wait
  Spawn2:
   ION1 B 1 Bright A_FadeOut(0.0005)
   Wait
  Spawn3:
   ION1 C 1 Bright A_FadeOut(0.0005)
   Wait
  Spawn4:
   ION1 D 1 Bright A_FadeOut(0.0005)
   Wait
 }
}
class IonRifle : "DPT.HQ-Weapon" 31212 { 
	Default {
 
	//$Category weapons
	Inventory.PickupMessage "You got the Ion Attack Rifle!"
	Obituary "%o was annihilated by %k's Ion Attack Rifle!"
	Weapon.AmmoType "Cell"
	Weapon.AmmoGive 2
	Weapon.AmmoUse 300
	Weapon.Kickback 10000
	+NOAUTOFIRE
	+EXPLOSIVE
	+BFG
	}
	States
	{
	Spawn:
		IONR Z -1
		Stop
	Ready:
		IONR A 1 A_WeaponReady
		Loop
	DeSelect:
		IONR A 1 A_Lower
		Loop
	Select:
		IONR A 1 A_Raise
		Loop
	Fire:
		IONR A 3
		IONR A 20 A_PlayweaponSound("SRGCHRG")
		IONR A 28 A_GunFlash
		IONR A 0 A_Recoil(5)
		IONR B 4 Bright A_FireCustomMissile("Ionball",0,1,0,5)
		IONR A 0 A_PlayweaponSound("SRGATK1")
		IONR B 3 Bright A_Recoil(-4.5)
		IONR B 200 //28
		IONR B 0 A_ReFire
		Goto Ready
	Flash:
		IONR C 22 Bright
		IONR D 6 Bright A_Light1
		IONR E 7 Bright A_Light2
		IONR E 0 A_Light0
		Stop
	}
}
class IonBall : Plasmaball { 
	Default {
 
	}
	States
	{
	Death:
		PLSE A 0 A_CustomMissile("Bluestrike", 0, 0, 0, 0, 0)
		PLSE ABCDE 4 Bright
		Stop
	}
}
class Nuclear_Launcher : "DPT.HQ-Weapon" 26449 { // WORKER
	Default {
 
	//$Category weapons
	Inventory.PickupMessage "You got the Nuclear Launcher!"
	Obituary "%o was annihilated by %k's Nuclear Launcher!"
	Weapon.UpSound "plats/pt1_mid"
	Weapon.AmmoUse1 100
	Weapon.AmmoType1 "Rocketammo"
	Weapon.AmmoUse2 200
	Weapon.AmmoType2 "Rocketammo"
	Weapon.AmmoGive1 30
	Weapon.KickBack 10000
	+NOAUTOFIRE
	+EXPLOSIVE
	+BFG
	}
	States
	{
	Spawn:
		NLAU A -1
		Stop
	Ready:
		NKLG A 30 A_WeaponReady
		Loop
	Select:
		NKLG A 0 A_Raise
		NKLG A 1 A_Raise
		Loop
	DeSelect:
		NKLG A 0 A_PlaySoundEx("misc/null", "Item")
		NKLG AA 1 A_Lower
		Goto Deselect +2
	Fire:
		NKLG A 0 A_GunFlash
		NKLG B 3 A_FireCustomMissile("NukeMissile",0,1,5)
		NKLG CDDDDCA 5
		Goto Ready
	AltFire:
		NKLG A 0 A_GunFlash
		NKLG B 3 A_FireCustomMissile("HyperNukeMissile",0,1,5)
		NKLG CDDDDCA 5
		Goto Ready
	Flash:
		NKLF A 3 bright A_Light0
		Goto LightDone
	}
}
class Confirmed : Inventory { 
	Default {
 
	Inventory.MaxAmount 1
	}
}
class NukeNoclipper : actor { 
	Default {
 
	Radius 24
	Height 24
	Speed 40
	PROJECTILE
	+NOCLIP
	+RIPPER
	+BLOODLESSIMPACT
	+FLOORCLIP
	Radius 1
	Height 1
	}
	States
	{
	Spawn:
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Explode(53,65)
		Stop
	}
}
class NukeMissile : Rocket { 
	Default {
 
	Speed 48
	}
	States
	{
	Spawn:
		NUKM A 1 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 0 A_SpawnItem("Nuke", 0, 2, 0)
		Stop
	}
}
class Nuke : actor { 
	Default {
 
	+NOBLOCKMAP
	+NOGRAVITY
	+FORCERADIUSDMG
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_PlaySoundEx("DSNUKEXP", "Voice", 0, 2)
		TNT1 A 1 A_Explode(750, 1024, 1)
		TNT1 A 0 Radius_Quake(7, 60, 20, 60, 0)
		TNT1 A 0 A_SpawnItem("NukeFlare", 0, 0, 0)
		TNT1 A 25 A_SpawnItem("NukeFloor", 0, 0, 0)
		TNT1 AA 0 A_SpawnItem("NukeSmokeFloor", 0, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukePillar", 0, 0, 0, 0, 0, 10, 0, 0, 0)
		TNT1 A 105 A_SpawnItemEx("NukeSmokePillar", 0, 0, 0, 0, 0, 10, 0, 0, 0)
		TNT1 A 0 A_SpawnItem("NukeMushroom", random(-800,800),random(-800,800), 0)
		TNT1 AA 0 A_SpawnItem("NukeSmokeMushroom", 0, 800, 0)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,80)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,100)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,120)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,140)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,160)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,180)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,200)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,220)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,240)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,260)
		TNT1 AAA 0 A_CustomMissile("NukeNoclipper",0,0,280)
		Stop
	}
}
class NukeFire : Nuke { 
	Default {
 
	RenderStyle "Add"
	+NOINTERACTION
	Scale 0.75
	}
	States
	{
	Spawn:
		TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
		FLA1 A 1 Bright A_FadeOut(0.005)
		Wait
	Spawn2:
		FLA2 A 1 Bright A_FadeOut(0.005)
		Wait
	Spawn3:
		FLA3 A 1 Bright A_FadeOut(0.005)
		Wait
	Spawn4:
		FLA4 A 1 Bright A_FadeOut(0.005)
		Wait
	}
}
class NukeSmoke : Nuke { 
	Default {
 
	Scale 3.5
	+NOINTERACTION
	Alpha 0.5
	}
	States
	{
	Spawn:
		TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
		SMOK A 5 A_FadeOut(0.005)
		Wait
	Spawn2:
		SMOK B 5 A_FadeOut(0.005)
		Wait
	Spawn3:
		SMOK C 5 A_FadeOut(0.005)
		Wait
	Spawn4:
		SMOK D 5 A_FadeOut(0.005)
		Wait
	}
}
class NukeFlare : NukeFire { 
	Default {
 
	Scale 16
	+NOINTERACTION
	}
	States
	{
	Spawn:
		FLAR A 1 Bright A_FadeOut(0.01)
		Wait
	}
}
class NukeFloor : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeFire", 0, 0, 0, 0.00001 * Random(0, 300000), 0.00001 * Random(0, 300000), 0, Random(0, 359), 128, 0)
		Stop
	}
}
class NukeSmokeFloor : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 0.00001 * Random(0, 300000), 0.00001 * Random(0, 300000), 0, Random(0, 359), 128, 0)
		Stop
	}
}
class NukePillar : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeFire", 0, 0, 0, 0.00001 * Random(0, 100000), 0.00001 * Random(0, 100000), Random(0, -3), Random(0, 359), 128, 0)
		TNT1 A 0 A_SpawnItem("NukeSmokering", 0, 0, 0)
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeFire", 0, 0, 0, 0.00001 * Random(0, 100000), 0.00001 * Random(0, 100000), Random(0, -3), Random(0, 359), 128, 0)
		Stop
	}
}
class NukeSmokePillar : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 0.00001 * Random(0, 100000), 0.00001 * Random(0, 100000), 0.00001 * Random(0, -400000), Random(0, 359), 128, 0)
		Stop
	}
}
class NukeMushroom : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeFire", 0, 0, 0, 0.00001 * Random(0, 250000), 0.00001 * Random(0, 250000), 0.00001 * Random(-100000, 100000), Random(0, 359), 128, 0)
		Stop
	}
}
class NukeSmokeMushroom : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 0.00001 * Random(0, 250000), 0.00001 * Random(0, 250000), 0.00001 * Random(-100000, 100000), Random(0, 359), 128, 0)
		Stop
	}
}
class NukeSmokering : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 0, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 20, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 40, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 60, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 80, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 100, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 120, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 140, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 160, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 180, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 200, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 220, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 240, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 260, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 280, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 300, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 320, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeSmoke", 0, 0, 0, 4, 0, 0, 340, 0, 0)
		Stop
	}
}
//Hyper nuke=========================================================================================================
class HyperNukeMissile : Rocket { 
	Default {
 
    +FULLVOLDEATH
    Scale 2.0
    DeathSound "DSNUKEXP"
	}
	States
	{
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("HyperNuke", 0, 2, 0)
		Stop
	}
}
class HyperNuke : Nuke { 
	Default {
 
	SeeSound "DSNUKEXP"
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_PlaySoundEx("Nuke/Boom", "Voice", 0, 2)
		TNT1 A 1 A_Explode(74000, 21680)
		TNT1 A 0 Radius_Quake(654, 200, 170, 140, 0)
		TNT1 AA 0 A_SpawnItem("NukeHyperFlare", 0, 0, 0)
		TNT1 A 25 A_SpawnItem("NukeHyperFloor", 0, 0, 0)
		TNT1 AA 0 A_SpawnItem("NukeHyperSmokeFloor", 0, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperPillar", 0, 0, 0, 0, 0, 40, 0, 0, 0)
		TNT1 A 105 A_SpawnItemEx("NukeHyperSmokePillar", 0, 0, 0, 0, 0, 40, 0, 0, 0)
		TNT1 A 0 A_SpawnItem("NukeHyperMushroom", 0, 4000, 0)
		TNT1 AA 0 A_SpawnItem("NukeHyperSmokeMushroom", 0, 4000, 0)
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile("NukeNoclipper",3,0,random(0,360),2,random(0,360))
		TNT1 A 600
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnIteMEx("NukeRadiation1",random(2000,-2000),random(2000,-2000),random(0, 85))
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnIteMEx("NukeRadiation2",random(2000,-2000),random(2000,-2000),random(0, 85))
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnIteMEx("NukeRadiation3",random(2000,-2000),random(2000,-2000),random(0, 85))
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnIteMEx("NukeRadiation4",random(2000,-2000),random(2000,-2000),random(0, 85))
		Stop
	}
}
class NukeHyperFire : Nuke { 
	Default {
 
	RenderStyle "Add"
	+NOINTERACTION
	Scale 4
	}
	States
	{
	Spawn:
		TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
		FLA1 A 1 Bright A_FadeOut(0.005)
		Wait
	Spawn2:
		FLA2 A 1 Bright A_FadeOut(0.005)
		Wait
	Spawn3:
		FLA3 A 1 Bright A_FadeOut(0.005)
		Wait
	Spawn4:
		FLA4 A 1 Bright A_FadeOut(0.005)
		Wait
	}
}
class NukeHyperSmoke : Nuke { 
	Default {
 
	Scale 19
	+NOINTERACTION
	Alpha 0.5
	}
	States
	{
	Spawn:
		TNT1 AA 0 A_Jump(196, "Spawn2", "Spawn3", "Spawn4")
		SMOK A 5 A_FadeOut(0.003)
		Wait
	Spawn2:
		SMOK B 5 A_FadeOut(0.005)
		Wait
	Spawn3:
		SMOK C 5 A_FadeOut(0.005)
		Wait
	Spawn4:
		SMOK D 5 A_FadeOut(0.005)
		Wait
	}
}
class NukeRadiation1 : CSTAFFMISSILE { 
	Default {
 
    Radius 12
	Height 12
    Damage 12
	DamageType RadiationQuanity
	Speed 16
	Scale 9
	+NOGRAVITY
	+RIPPER
	+BLOODLESSIMPACT
	+HEXENBOUNCE
	+FORCEYBILLBOARD
	Alpha 0.21
	}
	States
	{
	Spawn:
	    TNT1 A 0 //A_SpawnItemEX("RadiationAsItem",0) // WORKER
		TNT1 A 0 A_SpawnItemEX("RadiationQuanity",100)
		SMOK A 170000 A_FadeOut(0.003)
		Stop
	}
}
class NukeRadiation2 : NukeRadiation1 { 
	Default {
 
	}
	States
	{
	Spawn:
		SMOK B 170000 A_FadeOut(0.003)
		Stop
	}
}
class NukeRadiation3 : NukeRadiation1 { 
	Default {
 
	}
	States
	{
	Spawn:
		SMOK C 170000 A_FadeOut(0.003)
		Stop
	}
}
class NukeRadiation4 : NukeRadiation1 { 
	Default {
 
	}
	States
	{
	Spawn:
		SMOK D 170000 A_FadeOut(0.003)
		Stop
	}
}
class NukeHyperFlare : NukeFire { 
	Default {
 
	Scale 64
	+NOINTERACTION
	}
	States
	{
	Spawn:
		FLAR A 1 Bright A_FadeOut(0.01)
		Wait
	}
}
class NukeHyperFloor : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeHyperFire", 0, 0, 0, 0.00001 * Random(0, 900000), 0.00001 * Random(0, 900000), 0, Random(0, 359), 128, 0)
		Stop
	}
}
class NukeHyperSmokeFloor : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 0.00001 * Random(0, 900000), 0.00001 * Random(0, 900000), 0, Random(0, 359), 128, 0)
		Stop
	}
}
class NukeHyperPillar : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1  A_SpawnItemEx("NukeHyperFire", 0, 0, 0, 0.00001 * Random(0, 300000), 0.00001 * Random(0, 300000), 0.00001 * Random(0, -600000), Random(0, 359), 128, 0)
		TNT1 A 0 A_SpawnItem("NukeHyperSmokering", 0, 0, 0)
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeHyperFire", 0, 0, 0, 0.00001 * Random(0, 300000), 0.00001 * Random(0, 300000), 0.00001 * Random(0, -600000), Random(0, 359), 128, 0)
		Stop
	}
}
class NukeHyperSmokePillar : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 0.00001 * Random(0, 300000), 0.00001 * Random(0, 300000), 0.00001 * Random(0, -600000), Random(0, 359), 128, 0)
		Stop
	}
}
class NukeHyperMushroom : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeHyperFire", 0, 0, 0, 0.00001 * Random(0, 600000), 0.00001 * Random(0, 900000), 0.00001 * Random(-400000, 400000), Random(0, 359), 128, 0)
		Stop
	}
}
class NukeHyperSmokeMushroom : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 0.00001 * Random(0, 600000), 0.00001 * Random(0, 900000), 0.00001 * Random(-400000, 400000), Random(0, 359), 128, 0)
		Stop
	}
}
class NukeHyperSmokering : Nuke { 
	Default {
 
	}
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 0, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 20, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 40, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 60, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 80, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 100, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 120, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 140, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 160, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 180, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 200, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 220, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 240, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 260, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 280, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 300, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 320, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 340, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 10, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 30, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 50, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 70, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 90, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 110, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 130, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 150, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 170, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 190, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 210, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 230, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 250, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 270, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 290, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 310, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 330, 0, 0)
		TNT1 A 0 A_SpawnItemEx("NukeHyperSmoke", 0, 0, 0, 12, 0, 0, 350, 0, 0)
		Stop
	}
}
class RadiationQuanity : Ammo { 
	Default {
 
	Inventory.MaxAmount 100
	Inventory.Amount 0
	Ammo.BackPackAmount 0
	Ammo.BackPackMaxAmount 0
	}
}
class Explosive1 : "DPT.HQ-Weapon" 26340 { 
	Default {
 
	//$Category weapons
  Weapon.AmmoUse 1
  Weapon.AmmoGive 3
  Weapon.AmmoType "TNTammo"
  +WEAPON.NOAUTOFIRE
  Inventory.PickupMessage "You grabbed some TNT."
	}
  States
  {
  Ready:
    DYNO A 1 A_WeaponReady
    Loop
  DeSelect:
    DYNO A 1 A_Lower
    Loop
  Select:
    DYNO A 1 A_Raise
    Loop
  Fire:
    DYNO A 5 
    DYNO B 5
    DYNO C 5 Bright A_PlaysoundEx("Lighter/Click","weapon")
    DYNO DDDDD 1 Bright A_SpawnItemEx("PuffSpark1",4,15,35,0,0,0,random(45,60),128)
    DYNO EEEEE 1 Bright A_SpawnItemEx("PuffSpark1",4,15,35,0,0,0,random(45,60),128)
    DYNO FFFFF 1 Bright A_SpawnItemEx("PuffSpark1",4,15,35,0,0,0,random(45,60),128)
    DYNO GGGGG 1 Bright A_SpawnItemEx("PuffSpark1",4,15,35,0,0,0,random(45,60),128)
    DYNO HHHHH 1 Bright A_SpawnItemEx("PuffSpark1",4,15,35,0,0,0,random(45,60),128)
    DYNO I 0 A_GiveInventory("EXPLOSIVESHOUT",1)
    DYNO I 2 offset (35, 28) A_FireCustomMissile("TNT",0,1,1,5,0)
    DYNO I 2 offset (35, 32)
    DYNO I 2 offset (25, 36)
    DYNO I 2 offset (15, 40)
    DYNO I 2 offset (5, 44)
    DYNO I 2 offset (-5, 48)
    DYNO I 2 offset (-15, 52)
    DYNO I 2 offset (-25, 56)
    DYNO I 2 offset (-35, 60)
    DYNO I 2 offset (-45, 64)
    Goto Select
  Spawn:
    TNTT A -1
    Stop
  }
}
class FloatingPlasma1 : actor { 
	Default {
 
  Obituary "%o was killed."
  radius 0
  height 0
  speed 0
  damage (0)
  PROJECTILE
  -NOGRAVITY
  RenderStyle "Add"
  Alpha 0.5
  gravity 0.9
  scale 0.007
	}
  States
  {
  Spawn:
    FLAE AAAAAAAAA 4 Bright A_SpawnItemEx("PuffSpark1",1,1,1,0,0,0,0,128,64)
    Goto Death
  Death:
    FLAE A 0 A_Stop
    FLAE A 0 Bright A_Jump(30,"Longer2")
    FLAE A 0 Bright A_Jump(30,"Longer3")
    FLAE A 0 Bright A_Jump(30,"Longer1")
    FLAE AAAAAAAAA 4 Bright
    Goto Longer1
  Longer1:
    FLAE AAAAAAAAAA 1 Bright
    FLAE A 1 A_SpawnItemEx("PuffSpark1",1,1,1,0,0,0,0,128,64)
    FLAE AAAAAAAAAA 5 Bright A_FadeOut(0.1)
    Stop
  Longer2:
    FLAE AAAAA 1 Bright
    FLAE AAAAA 1 Bright
    FLAE AAAAA 1 Bright
    FLAE A 1 A_SpawnItemEx("PuffSpark1",1,1,1,0,0,0,0,128,64)
    FLAE AAAAAAAAAA 5 Bright A_FadeOut(0.1)
    Stop
  Longer3:
    FLAE AAAAA 1 Bright
    FLAE AAAAA 1 Bright
    FLAE A 1 A_SpawnItemEx("PuffSpark2",1,1,1,0,0,0,0,128,64)
    FLAE AAAAAAAAAA 5 Bright A_FadeOut(0.1)
    Stop
  }
}
class TNTammo : Ammo 26233 { 
	Default {
 
  Inventory.PickupMessage "TNT ammo!"
  Inventory.Amount 3
  Inventory.MaxAmount 6
  Inventory.Icon "TNTTB0"
  Ammo.BackPackAmount 3
  Ammo.BackPackMaxAmount 6
	}
  States
  {
  Spawn:
    TNTT B 700
    Stop
  }
}
class PuffSpark1 : actor { 
	Default {
 
  renderstyle "Add"
  alpha 0.4
  Scale 0.1
  +NOBLOCKMAP
  +NOGRAVITY
  +FLOAT
  +NOCLIP
	}
  States
  {
  Spawn:
    PUF1 A 2 A_Stop
    PUF1 B 2 
    PUF1 C 2 
    PUF1 D 2 
    PUF1 E 2 
    PUF1 F 2 
    PUF1 GGHHIIJJ 2 A_FadeOut(0.16)
    Stop
  }
}
class PuffSpark2 : actor { 
	Default {
 
  renderstyle "Add"
  alpha 0.4
  Scale 0.1
  +NOBLOCKMAP
  +NOGRAVITY
  +FLOAT
  +NOCLIP
	}
  States
  {
  Spawn:
    PUF2 A 4 A_Stop
    PUF2 B 4 
    PUF2 CCDDEE 4 A_FadeOut(0.16)
    Stop
  }
}
class EXPLOSIVESHOUT: Inventory { 
	Default {
 
    Inventory.Amount 1
    Inventory.MaxAmount 1
	}
}
class TNT : actor { 
	Default {
 
  Radius 11
  Height 8
  Speed 25
  Damage 0
  Projectile
  +RANDOMIZE
  +DEHEXPLOSION
  +HEXENBOUNCE
  -NOGRAVITY
classUNCEONactorS : actor { 
	Default {
		bouncecount 5;
		bounceFactor 0.4;
		DamageType "Explosion";
		gravity 0.7;
		Scale 0.7;
		Obituary "%o rode %k's dynamite.";
	}
	States
	{
		Spawn:
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32)  ();
			Loop;
		Death:
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNTT A 1 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,random(45,60),128);
			TNTT A 0 A_PlaysoundEx("TNT/Fire","weapon");
			TNTT AAA 0 Bright A_SpawnItemEx ("TNTFIRE",0,0,0,random(-3,3),random(-3,3),random(-3,3),random(0,359),128,32) ();
			TNT1 A 0 A_CustomMissile("Smoke1",0,32,0,0,0);
			TNT1 A 0 A_CustomMissile("Smoke1",0,0,0,0,0);
			TNT1 A 0 A_CustomMissile("Smoke1",0,16,0,0,0);
			TNT1 A 0 A_CustomMissile("Smoke1",0,-16,0,0,0);
			TNT1 A 0 A_CustomMissile("TNTFIRE3",0,32,0,0,0);
			TNT1 A 0 A_CustomMissile("TNTFIRE3",0,0,0,0,0);
			TNT1 A 0 A_CustomMissile("TNTFIRE3",0,16,0,0,0);
			TNT1 A 0 A_CustomMissile("TNTFIRE3",0,-16,0,0,0);
			TNT1 A 0 A_CustomMissile("TNTExplosion",8,0,0,0,0);
			TNT1 A 0 A_PlaysoundEx("Car/Explosion","weapon");
			right A_SpawnItemEx ("TNTFIRE1",0,0,0,random(5,10),random(5,10),random(5,10),random(0,359),128,32);
			TNT1 AAAAAAAAAAAAAAAA 0 Bright A_SpawnItemEx ("Rocks",0,0,0,random(10,20),random(10,20),random(10,20),random(0,359),128,32);
			TNT1 AAAAAAAAAAAAAAAA 0 Bright A_SpawnItemEx ("Rocks1",0,0,0,random(10,20),random(10,20),random(10,20),random(0,359),128,32);
			TNT1 AAAAAAAAAAAAAAAA 0 Bright A_SpawnItemEx ("Rocks2",0,0,0,random(10,20),random(10,20),random(10,20),random(0,359),128,32);
			TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 Bright A_SpawnItemEx ("Smoke1",0,0,0,random(1,2),random(1,2),random(1,2),random(0,359),128,32);
			TNT1 A 0 Bright A_Explode (128,128);
			TNT1 A 8 Bright A_Explode (64,128);
			TNT1 B 6 Bright A_Explode (32,128);
			TNT1 C 4 Bright A_Explode (32,128);
			TNT1 D 6 Bright A_Explode (32,128);
			TNT1 E 4 Bright A_Explode (32,128);
			TNT1 F 6 Bright A_Explode (32,128);
			TNT1 G 4 Bright A_Explode (32,128);
			TNT1 H 6 Bright A_Explode (32,128);
			TNT1 I 4 Bright A_Explode (32,128);
			TNT1 J 6 Bright A_Explode (32,128);
			TNT1 K 4 Bright A_Explode (16,128);
			TNT1 A 6 Bright A_Explode (16,128);
			TNT1 M 4 Bright A_Explode (16,128);
			TNT1 N 6 Bright A_Explode (16,128);
			TNT1 O 4 Bright A_Explode (16,128);
			TNT1 P 6 Bright A_Explode (16,128);
			TNT1 Q 4 Bright A_Explode (16,128);
			TNT1 A -1;
			Stop;
	}
}
class TNTFIRE : FloatingPlasma1 { 
	Default {
		
		scale 0.008;
	}
}
class Smoke1 : actor { 
	Default {
		
		Obituary "%o was killed.";
		radius 5;
		height 8;
		speed 0;
		damage (0);
		PROJECTILE;
		alpha 0.75;
		scale 0.3;
		Gravity 2.5;
	}
	States
	{
		Spawn:
			SMOK A 4 Bright;
			SMOK B 4 Bright;
			SMOK C 4 Bright;
			SMOK D 4 Bright;
			SMOK E 4 Bright;
			SMOK F 4 Bright;
			SMOK G 4 Bright;
			SMOK H 4 Bright;
			SMOK I 4 Bright;
			SMOK J 4 Bright;
			SMOK K 4 Bright;
			SMOK L 4 Bright;
			SMOK M 4 Bright;
			SMOK N 4 Bright;
			SMOK O 4 Bright;
			SMOK P 4 Bright;
			Goto Death;
		Death:
			SHAR Q 16 Bright A_FadeOut(0.16);
			Stop;
	}
}
class TNTFire3 : actor { 
	Default {
		
		Obituary "%o was flamed";
		radius 13;
		height 8;
		speed 0;
		damage (3);
		renderstyle "Add";
		DamageType "Fire";
		deathsound "Car/Fire";
		alpha 0.5;
		PROJECTILE;
		+RANDOMIZE;
		+NOGRAVITY;
		+NOCLIP;
		scale 1;
	}
	States
	{
		Spawn:
			FIRE ABCDEFGH 4 Bright A_Jump(32,"Death");
			Goto Death;
		Death:
			PYXP A 0 Bright A_Scream();
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE A 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE B 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE C 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE D 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE E 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE F 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE G 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE H 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE A 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE B 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE C 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE D 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE E 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE F 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE G 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE H 4 Bright A_Explode(35,64);
			TNT1 A 0 A_SpawnItemEx("FlameThrowerFireRemains",8,8,32,random(0,1),random(0,1),random(0,1),random(0,360),128);
			FIRE ABCDEFGH 4 A_FadeOut(0.16);
			Stop;
	}
}
class TNTExplosion : actor { 
	Default {
		
		Radius 11;
		Height 8;
		Speed 0;
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+HEXENBOUNCE;
		-NOGRAVITY;
		+NOCLIP;
		renderstyle "Add";
		DamageType "Friendly";
		deathsound "Car/Explosion";
		alpha 0.8;
		scale 1.5;
		bouncecount 50;
		bounceFactor 0.3;
		gravity 0.1;
	}
	States
	{
		Spawn:
			PYXP A 0 Bright A_PlaySound("Car/Explosion");
			PYXP A 0 Bright;
			PYXP A 8 Bright;
			PYXP B 6 Bright;
			PYXP C 4 Bright;
			PYXP D 6 Bright;
			PYXP E 4 Bright;
			PYXP F 6 Bright;
			PYXP G 4 Bright;
			PYXP H 6 Bright;
			PYXP I 4 Bright;
			PYXP J 6 Bright;
			PYXP K 4 Bright;
			PYXP L 6 Bright;
			PYXP M 4 Bright;
			PYXP N 6 Bright;
			PYXP O 4 Bright;
			PYXP P 6 Bright;
			PYXP Q 4 Bright;
			PYXP R 6 Bright;
			PYXP S 4 Bright;
			PYXP T 6 Bright;
			PYXP U 4 Bright;
			Stop;
	}
}
class TNTFIRE1 : FloatingPlasma1 { 
	Default {
		
		scale 0.01;
	}
}
class Rocks : actor { 
	Default {
		
		Radius 11;
		Height 8;
		Speed 25;
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+HEXENBOUNCE;
		-NOGRAVITY;
		bouncecount 10;
		bounceFactor 0.3;
		gravity 0.9;
		Scale 1;
		Obituary "%o rode %k's rocket.";
	}
	States
	{
		Spawn:
			5HRD ABC 3;
			Loop;
		Death:
			5HRD A 0 A_Jump(128,"Left1");
			5HRD A 0 A_Jump(128,"Left2");
			5HRD A 0 A_Jump(128,"Left3");
		Left1:
			5HRD A 350;
			5HRD AAAAAAAAAA 5 A_FadeOut(0.16);
			Stop;
		Left2:
			5HRD B 350;
			5HRD BBBBBBBBBB 5 A_FadeOut(0.16);
			Stop;
		Left3:
			5HRD M 350;
			5HRD CCCCCCCCCC 5 A_FadeOut(0.16);
			Stop;
	}
}
class Rocks1 : Rocks { 
	Default {
	actor Rocks2;
	
	Radius 11;
	Height 8;
	Speed 25;
	Projectile;
	+RANDOMIZE;
	+DEHEXPLOSION;
	+HEXENBOUNCE;
	-NOGRAVITY;
	bouncecount 10;
	bounceFactor 0.6;
	gravity 0.8;
	Scale 0.9;
	Obituary "%o rode %k's rocket.";
	}
  States
  {
	Spawn:
		5HRD ABC 3;
		Loop;
	Death:
		5HRD A 0 A_Jump(128,"Left1");
		5HRD A 0 A_Jump(128,"Left2");
		5HRD A 0 A_Jump(128,"Left3");
	Left1:
		5HRD A 350;
		5HRD AAAAAAAAAA 5 A_FadeOut(0.16);
		Stop;
	Left2:
		5HRD B 350;
		5HRD BBBBBBBBBB 5 A_FadeOut(0.16);
		Stop;
	Left3:
		5HRD M 350;
		5HRD CCCCCCCCCC 5 A_FadeOut(0.16);
		Stop;
}
}
class FlameThrowerFireRemains : actor { 
	Default {
	
	RenderStyle "Add";
	alpha 0.95;
	+RANDOMIZE;
	+NOCLIP;
	PROJECTILE;
	Speed 2;
	Damage 0;
	Scale 0.4;
	}
  States
  {
	Spawn:
		TNT1 A 4;
		FLMB A 3 Bright;
		FLMB A 0 ThrustThingZ(0,5,0,1);
		FLMB BBCCDDEEFFGGHH 2 Bright A_FadeOut(0.07);
		Stop;
}
}
class HAAX : "DPT.HQ-Weapon" 26341 { 
	Default {
	
	//$Category weapons
	+WEAPON.NOAUTOFIRE;
	Inventory.PickupMessage "wtf hax o_0!";
	}
  States
  {
	Ready:
		TNT1 A 1 A_WeaponReady();
		Loop;
	DeSelect:
		TNT1 A 1 A_Lower();
		Loop;
	Select:
		TNT1 A 1 A_Raise();
		Loop;
	Fire:
		TNT1 A 35 A_PlaySound ("pc/haax");
		TNT1 A 12 A_FireCustomMissile("FlyingPC",0,0,0,0,0);
		TNT1 A 0 A_ReFire();
		Goto Ready;
	Spawn:
		CPU1 A -1;
		Stop;
}
}
class FlyingPC : actor { 
	Default {
	
	Radius 11;
	Height 8;
	Speed 75;
	Damage 9999;
	Projectile;
	+RANDOMIZE;
	+DEHEXPLOSION;
	-NOGRAVITY;
	+QUARTERGRAVITY;
	+NOBLOOD;
	DeathSound "pc/hit";
	Obituary "%o was wtf pwned by %k.";
	}
  States
  {
	Spawn:
		CPU1 A 1 Bright;
		Loop;
	Death:
		TNT1 A 0 Bright A_ChangeFlag("NOGRAVITY",1);
		TNT1 A 0;
		TNT1 A 0 A_TossGib();
		TNT1 A 0 A_TossGib();
		TNT1 A 0 A_TossGib();
		TNT1 A 0 A_TossGib();
		TNT1 A 0 A_TossGib();
		TNT1 A 0 A_TossGib();
		TNT1 A 0 A_TossGib();
		TNT1 A 0 A_TossGib();
		TNT1 A 0 A_TossGib();
		TNT1 A 0 A_TossGib();
		MISL B 8 Bright A_Explode(256,256);
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
}
}
class AK1337 : "DPT.HQ-Weapon" 19006 { 
	Default {
	
	//$Category weapons
	Inventory.PickupMessage "You got the AK-47!";
	Obituary "%o chewed on %k's machinegun.";
	Weapon.AmmoType "AKIn";
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 30;
	Weapon.AmmoType2 "AKammo";
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 36;
	Scale 0.2;
	}
  States
  {
	Ready:
		AK47 A 1 offset (0, 34) A_WeaponReady();
		Loop;
	DeSelect: 
		AK47 A 1 A_Lower();
		Loop;
	Select:
		AK47 A 1 A_Raise();
		Loop;
	Fire: 
		1156 A 0 A_JumpIfNoammo("AltFire");
		1156 A 0 Bright A_PlaysoundEx("SND1401","weapon");
		1156 C 1 Bright A_FireBullets(2,3,-1,4,"BulletPuff",1,1280);
		1156 D 1 Bright A_SpawnItemEx("MachineCasing",4,15,30,random(1,3),random(0,1),random(1,3),random(45,60),128);
		1156 A 0 A_ALERTMONSTERS();
		1156 EF 1;
		1156 A 0 Bright A_JumpIfNoammo("AltFire");
		1156 A 0 Bright A_ReFire();
		Goto Ready;
	AltFire:
		AK47 A 1 A_JumpIfInventory("AKIn",30,2);
		AK47 A 0 A_JumpIfInventory("AKammo",1,"ReloadStart");
		AK47 A 0 A_JumpIfInventory("AKammo",0,"Ready");
		Goto Ready;
	ReloadStart:
		AK47 ADEFGH 3;
		AK47 H 1 A_GiveInventory("ReloadingThing",1);
		AK47 H 2 A_PlaysoundEx("AK47/clipout","weapon");
		AK47 H 0 A_SpawnItemEx("AK47ClipCasing",4,0,20,random(-1,-1),random(-1,0),random(-1,-1),random(15,60),128);
		AK47 IJKLMN 3;
		AK47 O 7 A_PlaysoundEx("AK47/clipin","weapon");
		AK47 P 2();
		Goto Reloadammo;
	Reloadammo:
		AK47 M 0 A_GiveInventory("AKIn",1);
		AK47 M 0 A_TakeInventory("AKammo",1);
		AK47 M 0 A_JumpIfInventory("AKIn",30,"ReloadEnd");
		AK47 M 0 A_JumpIfInventory("AKammo",1,"Reloadammo");
		Goto ReloadEnd;
	ReloadEnd:
		AK47 QRSTUV 4;
		AK47 W 4 A_PlaysoundEx("AK47/bolt","weapon");
		AK47 XYZ 3;
		AK48 A 3;
		AK47 A 0 A_ReFire();
		Goto Ready;
	Flash:
		AK47 A 4 Bright A_Light1();
		AK47 B 5 Bright A_Light2();
		AK47 A 0 Bright A_Light0();
		Stop;
	Spawn:
		AKPK A -1;
		Stop;
}
}
class 9MMCasing : actor { 
	Default {
	
	Speed 1;
	Scale 0.1;
	Height 1;
	Radius 0;
	Gravity 0.8;
	bouncecount 3;
	bounceFactor 0.4;
	+DOOMBOUNCE;
	+MISSILE;
	SeeSound "misc/shell";
	DeathSound "misc/shell";
	}
  States
  {
	Spawn:
		CASI A 0();
		CASI A -1 A_Jump(164,"Spawn2","Spawn3");
		Loop;
	Spawn2:
		CASI B -1();
		Loop;
	Spawn3:
		CASI C -1();
		Loop;
	Death:
		TNT1 A 0 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,0,128);
		CASI A 1050 A_Jump(164,"Death2","Death3");
		Stop;
	Death2:
		TNT1 A 0 A_SpawnItemEx("PuffSpark2",0,0,0,0,0,0,0,128);
		CASI B 1050;
		Stop;
	Death3:
		TNT1 A 0 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,0,128);
		CASI C 1050;
		Stop;
}
}
class AKIn : Ammo  { 
	Default {
	
	Inventory.PickupMessage "";
	Inventory.Icon "CLP2D0";
	Inventory.Amount 30;
	Inventory.MaxAmount 30;
	}
}
class AKammo : Ammo 26234 { 
	Default {
	
	Inventory.PickupMessage "AK-47 ammo!";
	Inventory.Amount 30;
	Inventory.MaxAmount 300;
	Inventory.Icon "CLP2D0";
	Ammo.BackPackAmount 30;
	Ammo.BackPackMaxAmount 480;
	}
  States
  {
	Spawn:
		CLP2 D 700;
		Stop;
}
}
class MachineCasing : 9MMCasing { 
	Default {
	
	Scale 0.12;
	}
}
class ReloadingThing : Inventory { 
	Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 1;
	}
}
class AK47ClipCasing : actor { 
	Default {
	
	Speed 1;
	Scale 0.7;
	Height 1;
	Radius 0;
	Gravity 0.8;
	bouncecount 2;
	bounceFactor 0.4;
	+DOOMBOUNCE;
	+MISSILE;
	SeeSound "misc/shell";
	DeathSound "misc/shell";
	}
  States
  {
	Spawn:
		CLP2 B 0();
		CLP2 A -1 A_Jump(164,"Spawn2","Spawn3","Spawn4");
		Loop;
	Spawn2:
		CLP2 B -1();
		Loop;
	Spawn3:
		CLP2 C -1();
		Loop;
	Spawn4:
		CLP2 D -1();
		Loop;
	Death:
		TNT1 A 0 A_SpawnItemEx("PuffSpark1",0,0,0,0,0,0,0,128);
		CLP2 A 1050 A_Jump(164,"Death2");
		Stop;
	Death2:
		TNT1 A 0 A_SpawnItemEx("PuffSpark2",0,0,0,0,0,0,0,128);
		CLP2 B 1050;
		Stop;
}
}
class MinesWeap : "DPT.HQ-Weapon" 26207 { 
	Default {
	
	//$Category weapons
	Weapon.AmmoType "Mineammo1337";
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 5;
	Weapon.AmmoType2 "Mineammo1337";
	Weapon.AmmoUse2 1;
	Inventory.PickupMessage "WTF? MINES!";
	+WEAPON.NOALERT;
	+Inventory.UNDROPPABLE;
	+Inventory.ALWAYSPICKUP;
	}
	States
	{
	Spawn:
		MINE A 1;
		Loop;
	Ready:
		FORF C 1 A_WeaponReady();
		Loop;
	Select:
		FORF C 1 A_Raise();
		Loop;
	DeSelect:
		FORF C 1 A_Lower();
		Loop;
	Fire:
		FORF C 4 A_Lower();
		FORF C 2 A_Lower();
		FORF C 1 A_Lower();
		FORF C 1 A_Lower();
		FORF D 4 A_FireCustomMissile("MineThrown1337");
		FORF C 1 A_Raise();
		FORF C 1 A_Raise();
		FORF C 2 A_Raise();
		FORF C 4 A_Raise();
		FORF C 24;
		Goto Hold;
	AltFire:
		FORF C 4 A_Lower();
		FORF C 2 A_Lower();
		FORF C 1 A_Lower();
		FORF C 1 A_Lower();
		FORF D 4 A_FireCustomMissile("Mine1337");
		FORF C 1 A_Raise();
		FORF C 1 A_Raise();
		FORF C 2 A_Raise();
		FORF C 4 A_Raise();
		FORF C 24;
		Goto Hold;
	Hold:
		FORF C 1;
		FORF C 0 A_ReFire();
		Goto Ready;
}
}
class Mineammo1337 : Ammo 24768 { 
	Default {
	
	Inventory.PickupMessage "picked up an inactive mine.";
	Inventory.Amount 1;
	Inventory.MaxAmount 50;
	Ammo.BackPackAmount 10;
	Ammo.BackPackMaxAmount 50;
	Inventory.Icon "MINEB0";
	}
  States
  {
	Spawn:
		BRMN A -1;
		Stop;
}
}
class MineThrown1337 : actor { 
	Default {
	
	Radius 22;
	Height 16;
	Speed 20;
	Damage 0;
	Projectile;
	-NOGRAVITY;
	+DOOMBOUNCE;
	+BOUNCEONactorS;
	DeathSound "MINELAY";
	}
  States
  {
	Spawn:
		BRMN A 1 Bright;
		Loop;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_Scream();
		TNT1 A 0 A_SpawnItem("Mine1337");
		Stop;
}
}
class Mine1337 : actor { 
	Default {
	
	health 1;
	Radius 8;
	Height 8;
	Speed 0;
	Damage 80;
	Projectile;
	+SHOOTABLE;
	+NOBLOOD;
	-SOLID;
	-NOBLOCKMAP;
	+EXTREMEDEATH;
	+FLOORHUGGER;
	SeeSound "MINELAY";
	DeathSound "MINEEXPLODE";
	Obituary "%o dug up %k's mine";
	}
  States
  {
	Spawn:
		BRMN A 1 Bright;
		Loop;
	Melee:
		Goto death;
	Death:
		BRMN B 10 A_PlaySound("MINE001");
		EXPL T 2 A_Explode();
		EXPL S 2 A_Scream();
		EXPL R 2 A_NoBlocking();
		EXPL Q 2;
		EXPL P 2;
		EXPL O 2;
		EXPL N 2;
		EXPL M 2;
		EXPL L 2;
		EXPL K 2;
		EXPL J 2;
		EXPL I 2;
		EXPL H 2;
		EXPL G 2;
		EXPL F 2;
		EXPL E 2;
		EXPL D 2;
		EXPL C 2;
		EXPL B 2;
		EXPL A 2;
		Stop;
}
}
class Pillow : "DPT.HQ-Weapon" 20003 { 
	Default {
	
	//$Category weapons
	Inventory.PickupSound "";
	Weapon.AmmoUse 0;
	Weapon.Kickback 400;
	Scale 0.5;
	AttackSound "apillow/hit";
	}
	States
	{
	Spawn:
		PILO F -1;
		Loop;
	Ready:
		PILO A 1 A_WeaponReady();
		Loop;
	DeSelect:
		PILO A 1 A_Lower();
		Loop;
	Select:
		PILO A 1 A_Raise();
		Loop;
	Fire:
		PILO A 3();
		PILO B 3 A_PlaySound("world/swing");
		PILO C 2 A_CustomPunch(1, 0, 1, "PunchPuff22");
		PILO CCCC 0 A_FireCustomMissile ("PillowFeather", 0+random(-45,45), 0, 0, 10+random(-5,5));
		PILO D 2;
		PILO E 2;
		TNT2 A 10;
		Goto Ready;
}
}
class PillowFeather : actor { 
	Default {
	
	Health1000;
	Radius2;
	Height4;
	Mass100;
	Speed1;
	Painchance0;
	Scale0.20;
	+MISSILE;
	+DONTSPLASH;
	+LOWGRAVITY;
	SeeSound"";
	}
	States
	{
	Spawn:
		PILO G 8;
		PILO H 8;
		Loop;
	Death:
		PILO G 500 A_Jump(128,1);
		PILO H 500;
		Stop;
}
}
class Spartanleg : "DPT.HQ-Weapon" 20082 { 
	Default {
	
	//$Category weapons
	Weapon.Kickback 1000;
	Inventory.PickupMessage "got the spartan boot!";
	Obituary "%o was owned by %k's spartan boot";
	+WEAPON.MELEEweapon;
	}
  States
  {
	Ready:
		TNT1 A 4 A_WeaponReady();
		Loop;
	DeSelect:
		TNT1 A 1 A_Lower();
		Loop;
	Select:
		TNT1 A 1 A_Raise();
		Loop;
	Fire:
		TNT1 A 80 A_PlaySound ("sparta/thisis");
		KICK A 2;
		KICK B 2;
		KICK C 2;
		KICK D 4;
		KICK E 6 A_Saw("none","sparta/kick",9999,"meleepuff");
		TNT1 A 0 A_Refire();
		Goto Ready;
	Altfire:
		TNT1 A 0;
		TNT1 A 35 A_PlaySound ("sparta/madness");
		TNT1 A 0 A_Refire();
		Goto Ready;
	Spawn:
		B00T A -1;
		Stop;
}
}
// DARTPOWER
class JabChecker : Inventory { 
	Default {
	
	Inventory.Amount 1;
	Inventory.MaxAmount 1;
	}
}
class JabChecker2 : Inventory { 
	Default {
	
	Inventory.Amount 1;
	Inventory.MaxAmount 1;
	}
}
class BulletSnuff : BulletPuff { // FROM MOD NAMED XXX-MERECEANIES // NOT NEEDED TO ADD
	Default {
class DartPowerUnarmed : "DPT.HQ-Weapon"  { 
	Default {
		
		+WEAPON.WIMPY_weapon;
		+WEAPON.MELEEweapon;
		+WEAPON.NOAUTOFIRE;
		+CHEATNOTweapon;
		+NOALERT;
		-SOLID;
		+Inventory.UNDROPPABLE;
		-Weapon.NOLMS;
		Attacksound "fists/punch";
		Inventory.PickupSound "";
		Inventory.PickupMessage "";
		Weapon.AmmoUse 0;
	}
	States
	{
		Ready:
			DPNG A 1 A_WeaponReady();
			Loop;
		DeSelect:
			DPNG A 1 A_Lower();
			Loop;
		Select: 
			DPNG A 1 A_Raise();
			Loop;
		Fire:
			NULL A 0 A_JumpIfInventory("jabchecker",1, "JabLeft");
		JaBright:
			NULL A 0 A_TakeInventory("jabchecker2",1);
			DPNG B 1();//A_BFGSound
			DPNG C 1;
			NULL A 0 A_Recoil(-1.75);
			DPNG D 1 A_CustomPunch (5, 1, 1, "BulletSnuff", 52);
			DPNG E 1 A_CustomPunch (random(3,6), 1, 1, "PunchPuff22", 56);
			DPNG F 1;
			DPNG E 1;
			DPNG D 1;
			NULL A 0 A_GiveInventory("jabchecker",1);
			DPNG CCBBAA 1 A_WeaponReady();
			NULL A 0 A_TakeInventory("jabchecker",1);
			DPNG A 1 A_Refire();
			Goto Ready;
		JabLeft:
			NULL A 0 A_TakeInventory("jabchecker",1);
			DPNG J 1();//A_BFGSound
			DPNG K 1;
			NULL A 0 A_Recoil(-1.75);
			DPNG L 1 A_CustomPunch (5, 1, 1, "BulletSnuff", 52);
			DPNG M 1 A_CustomPunch (random(3,6), 1, 1, "PunchPuff22", 56);
			DPNG N 1;
			DPNG M 1;
			DPNG L 1;
			NULL A 0 A_GiveInventory("jabchecker2",1);
			DPNG KKJJII 1 A_WeaponReady();
			NULL A 0 A_TakeInventory("jabchecker2",1);
			DPNG I 1 A_Refire();
			Goto Ready;
		AltFire:
			NULL A 0 A_PlayweaponSound("weapons/magnumwhip");
			NULL A 0 A_PlaySoundEx("weapons/Kick", "Body");
			KICK ABC 2;
			NULL A 0 A_Recoil(-3);
			KICK DD 1 A_Saw("","weapons/foothit",random(5,10),"BulletSnuff");
			KICK D 3 A_CustomPunch (10, 1, 1, "PunchPuff22", 56);
			KICK C 4;
			KICK A 2;
			KICK A 2 A_WeaponReady();
			DPNG A 3 A_WeaponReady();
			Goto Ready;
		Hold:
			NULL A 0 A_JumpIfInventory("jabchecker",1, "JabLeft");
			NULL A 0 A_JumpIfInventory("jabchecker2",1, "JaBright");
			DPNG I 1;
			DPNG J 2();//A_BFGSound
			DPNG K 2;
			NULL A 0 A_Recoil(-0.75);
			DPNG K 0 A_CustomPunch (4, 1, 1, "BulletSnuff", 48);
			DPNG L 2 A_CustomPunch (6, 1, 1, "BulletSnuff", 52);
			DPNG M 2 A_CustomPunch (random(5,8), 1, 1, "PunchPuff22", 56);
			DPNG N 2;
			DPNG O 2;
			DPNG I 1;
			DPNG A 1 A_WeaponReady();
			DPNG B 2();//A_BFGSound
			DPNG C 2;
			NULL A 0 A_Recoil(-0.75);
			DPNG C 0 A_CustomPunch (4, 1, 1, "BulletSnuff", 48);
			DPNG D 2 A_CustomPunch (7, 1, 1, "BulletSnuff", 52);
			DPNG E 2 A_CustomPunch (random(4,8), 1, 1, "PunchPuff22", 56);
			DPNG F 2;
			DPNG G 2;
			DPNG A 1;
			DPNG A 1 A_Refire();
			Goto Ready;
	}
}
class punchsound : actor { 
	Default {
		
		Radius 1;
		Height 1;
		+NOBLOCKMAP;
		+NOCLIP;
		+ALLOWCLIENTSpawn;
	}
	States
	{
		Spawn:
			NULL A 0;
			NULL A 1 A_Playsound ("fists/punch");
			Stop;
	}
}
class thudsound : actor { 
	Default {
		
		Radius 1;
		Height 1;
		+NOBLOCKMAP;
		+NOCLIP;
		+ALLOWCLIENTSpawn;
	}
	States
	{
		Spawn:
			NULL A 0;
			NULL A 1 A_Playsound ("fists/hitwall");
			Stop;
	}
}
class PunchPuff22 : BulletPuff { 
	Default {
	/* 
		-SHOOTABLE
		-SOLID
		+NOTELEPORT
		+SYNCHRONIZED
		+ALWAYSFAST
		+LOOKALLAROUND
		Speed 1
		Height 1
		Radius 1
		Damage 0
		RenderStyle "Translucent"
		Alpha 0.175
		Scale 0.9
		PROJECTILE
		+DROPOFF
		+NOBLOCKMAP
		+NOGRAVITY
		-PUFFONactorS
		-RANDOMIZE
		+DONTOVERLAP
		+BOSS
		+FULLVOLACTIVE
		-BLOODLESSIMPACT
		+BLOODSPLATTER
		Scale 0.25
	}
	States
	{
	Melee:
	Spawn:
		NULL A 0
		NULL A 0 A_SpawnItemEx ("thudsound", 0, 0, 0, 0, 0, 0, 0, 128, 0)
		SSHK ABCDEFGHIJK 1
		Stop
	}
}*/
class NewCasingSmoke : actor { 
	Default {
		
		Speed 0.2;
		Scale 0.05;
		VSpeed 1;
		PROJECTILE;
		RENDERSTYLE "Add";
		Alpha 0.3;
		+NOGRAVITY;
		+FORCEXYBILLBOARD;
		+DOOMBOUNCE;
		+NOINTERACTION;
	}
	States
	{
		Spawn:
			SMOK ABCDEFGHIJKLMNOPQ 1;
			Stop;
	}
}
class NewCasingSmallSmoke : NewCasingSmoke { 
	Default {
		
		Scale 0.03;
	}
}
class 9mmSpawner : DebrisGeneral { 
	Default {
		
		Speed 20;
		+NOINTERACTION;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 1();
			TNT1 A 0 A_CustomMissile("9mmCasing",0,0,random(80,100),2,random(40,80));
			Stop;
	}
}
/*actor 9MMCasing : DebrisGeneral
{ 
	+DOOMBOUNCE
	-NOBLOCKMAP
	-NOGRAVITY
	Radius 3
	Height 3
	Speed 6
	bounceFactor 0.5
	Scale .30
	renderstyle "Translucent"
	alpha 1.0
	SeeSound "weapons/casing"
	States
	{
	Spawn:
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8)
		CAS1 ABCDEFGH 1 A_SpawnItemEx("NewCasingSmallSmoke", 0, 0, 0)
		Goto Spawn+3
	Death:
		TNT1 A 0
		TNT1 A 0 A_jump(256,"death1","death2","death3","death4","death5","death6")
	Death1:
		CAS1 I 1250
		CAS1 IIIIIIIIIIIIIIIII 1  A_FadeOut(0.04)
		Stop
	Death2:
		CAS1 J 1250
		CAS1 JJJJJJJJJJJJJJJJJ 1  A_FadeOut(0.04)
		Stop
	Death3:
		CAS1 K 1250
		CAS1 KKKKKKKKKKKKKKKKK 1  A_FadeOut(0.04)
		Stop
	Death4:
		CAS1 L 1250
		CAS1 LLLLLLLLLLLLLLLLL 1  A_FadeOut(0.04)
		Stop
	Death5:
		CAS1 M 1250
		CAS1 MMMMMMMMMMMMMMMMM 1  A_FadeOut(0.04)
		Stop
	Death6:
		CAS1 N 1250
		CAS1 NNNNNNNNNNNNNNNNN 1  A_FadeOut(0.04)
		Stop
	}
}*/
class ShellSpawner : 9mmSpawner { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0();
			TNT1 A 1();
			TNT1 A 0 A_CustomMissile("ShotgunCasing22",0,0,random(-80,-100),2,random(40,60));
			Stop;
	}
}
class ShotgunCasing22 : 9mmCasing { 
	Default {
		
		Scale .35;
		SeeSound "weapons/shotgunshells";
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8);
			SHL1 ABCDEFGH 1 A_SpawnItemEx("NewCasingSmoke", 0, 0, 0);
			Goto Spawn+3;
		Death:
			TNT1 A 0;
			TNT1 A 0 A_jump(256,"death1","death2","death3","death4","death5","death6");
		Death1:
			SHL1 I 1250;
			SHL1 IIIIIIIIIIIIIIIII 1  A_FadeOut(0.04);
			Stop;
		Death2:
			SHL1 J 1250;
			SHL1 JJJJJJJJJJJJJJJJJ 1  A_FadeOut(0.04);
			Stop;
		Death3:
			SHL1 K 1250;
			SHL1 KKKKKKKKKKKKKKKKK 1  A_FadeOut(0.04);
			Stop;
		Death4:
			SHL1 L 1250;
			SHL1 LLLLLLLLLLLLLLLLL 1  A_FadeOut(0.04);
			Stop;
		Death5:
			SHL1 M 1250;
			SHL1 MMMMMMMMMMMMMMMMM 1  A_FadeOut(0.04);
			Stop;
		Death6:
			SHL1 N 1250;
			SHL1 NNNNNNNNNNNNNNNNN 1  A_FadeOut(0.04);
			Stop;
	}
}
class Gothic_Shotgun : "DPT.HQ-Weapon" 10407 { 
	Default {
		
		//$Category weapons
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "Shell";
		Inventory.PickupMessage "$GOTSHOTGUN";
		Obituary "$OB_MPSHOTGUN";
		Attacksound "weapons/shotgf";
		Tag "DPT Shotgun";
		Decal BulletChip;
	}
	States
	{
		Ready:
			GHSG A 1 A_WeaponReady();
			Loop;
		Select:
			GHSG A 1 offset (130,154);
			GHSG A 1 offset (120,139);
			GHSG A 0 A_PlaySoundEx("SELECT/4","Body");
			GHSG A 1 offset (110,125);
			GHSG A 1 offset (100,112);
			GHSG A 1 offset (90,100);
			GHSG A 1 offset (80,89);
			GHSG A 1 offset (70,79);
			GHSG A 1 offset (60,70);
			GHSG A 1 offset (50,62);
			GHSG A 1 offset (40,55);
			GHSG A 1 offset (30,49);
			GHSG A 1 offset (20,44);
			GHSG A 1 offset (15,40);
			GHSG A 1 offset (10,37);
			GHSG A 1 offset (5,34);
			GHSG A 1 offset (0,0);
			Goto Ready;
		DeSelect:
			GHSG A 1 offset (4,34);
			GHSG A 1 offset (8,40);
			GHSG A 1 offset (16,49);
			GHSG A 1 offset (24,62);
			GHSG A 1 offset (32,79);
			GHSG A 1 offset (40,100);
			GHSG A 1 offset (48,125);
			GHSG A 1 offset (56,154);
			TNT1 A 0 offset (1,33);
			Goto DeselectLoop;
		DeselectLoop:
			TNT1 AA 0 A_Lower();
			TNT1 A 1 A_Lower();
			Loop;
		Fire:
			GHSG A 3;
			GHSG A 0 A_FireBullets (5.6, 3.7, 10, 5, "BulletPuff");
			GHSG A 5 A_GunFlash();
			GHSG B 2;
			GHSG C 1;
			GHSG D 2;
			GHSG E 3;
			GHSG F 4;
			GHSG G 1;
			GHSG H 1 A_FireCustomMissile("ShellSpawner", 0, 0, -8, -1);
			GHSG GFEDCB 2;
			GHSG A 1;
			GHSG A 7 A_ReFire();
			Goto Ready;
		Flash:
			GHTF B 3 Bright A_Light2();
			GHTF A 2 Bright A_Light1();
			Goto LightDone;
	}
}
// Scripts and sprites taken from Action Doom 2
// Additional sprites and scripting by TheCamaleonMaligno
// AAAAND with some sprites more + no autofire by Samuzero15tlh
class Katana : "DPT.HQ-Weapon" 10498 { // Secret
	Default {
		
		//$Category weapons
		Inventory.PickupMessage "You found the Shion's Katana!!";
		Inventory.PickupSound "weapons/KatanaPickup";
		+MELEEweapon;
		+ammo_OPTIONAL;
		+WEAPON.NOALERT;
		+WEAPON.NOAUTOFIRE;
		Obituary "%o was sliced by %k's katana.";
		Weapon.Kickback 116;
		Radius25;
		Height12;
		Speed80;
		Mass25;
		Scale 0.4;
	}
	States
	{
		Spawn:
			SWRD O -1;
			Loop;
		DrawSword:
			SWRD H 1 OffSet(40,80);
			SWRD H 1 OffSet(35,70);
			SWRD H 1 OffSet(25,60);
			SWRD H 1 OffSet(20,50);
			SWRD H 1 OffSet(15,45);
			SWRD H 1 OffSet(10,40);
			SWRD H 1 OffSet(5,36);
			SWRD H 1 OffSet(3,33);
		Ready:
			SWRD H 1 A_WeaponReady();
			Loop;
		DeSelect:
			SWRD H 1 offset (4,34);
			SWRD H 1 offset (8,40);
			SWRD H 1 offset (16,49);
			SWRD H 1 offset (24,62);
			SWRD H 1 offset (32,79);
			SWRD H 1 offset (40,100);
			SWRD H 1 offset (48,125);
			SWRD H 1 offset (56,154);
			TNT1 A 0 offset (1,33);
			Goto DeselectLoop;
		DeselectLoop:
			TNT1 AA 0 A_Lower();
			TNT1 A 1 A_Lower();
			Loop;
		Select:
			SWRD A 1 offset (130,154);
			SWRD A 1 offset (120,139);
			SWRD A 1 offset (110,125);
			SWRD A 1 offset (100,112);
			SWRD A 1 offset (90,100);
			SWRD A 1 offset (80,89);
			SWRD A 1 offset (70,79);
			SWRD A 1 offset (60,70);
			SWRD A 1 offset (50,62);
			SWRD A 1 offset (40,55);
			SWRD A 1 offset (30,49);
			SWRD A 1 offset (20,44);
			SWRD A 1 offset (15,40);
			SWRD A 1 offset (10,37);
			SWRD A 1 offset (5,34);
			SWRD A 1 offset (0,0);
			SWRD A 5;
			SWRD B 2 A_PlayweaponSound("weapons/DrawSword");
			SWRD C 1;
			SWRD D 1;
			SWRD E 1;
			SWRD F 1;
			SWRD G 2;
			BORD G 10;
			Goto DrawSword;
		Fire:
			TNT1 A 0 A_Jump(96, "Fire2", "Fire3", "Fire4");
			SWRD I 2 A_PlayweaponSound("Skeleton/Swing");
			SWRD J 2;
			SWRD K 1 A_FireCustomMissile(KatanaPuff);
			SWRD L 1 A_FireCustomMissile(KatanaPuff);
			SWRD M 1 A_FireCustomMissile(KatanaPuff);
			SWRD N 1;
			TNT1 A 2 A_WeaponReady();
			TNT1 AAAAAAAAAAAAAAA 1 A_WeaponReady();
			Goto DrawSword;
		Fire2:
			SWRD Q 2;
			SWRD U 1 A_PlayweaponSound("Skeleton/Swing");
			SWRD VWX 1 A_FireCustomMissile(KatanaPuff);
			TNT1 A 3 A_WeaponReady();
			TNT1 AAAAAAAAAAAAAAA 1 A_WeaponReady();
			Goto DrawSword;
		Fire3:
			SWRD Q 2;
			SWR1 A 1 A_PlayweaponSound("Skeleton/Swing");
			SWR1 BCD 1 A_FireCustomMissile(KatanaPuff);
			TNT1 A 3 A_WeaponReady();
			TNT1 AAAAAAAAAAAAAAA 1 A_WeaponReady();
			Goto DrawSword;
		Fire4:
			SWR2 A 2 A_PlayweaponSound("Skeleton/Swing");
			SWR2 B 2;
			SWR2 C 1 A_FireCustomMissile(KatanaPuff);
			SWR2 D 1 A_FireCustomMissile(KatanaPuff);
			SWR2 E 1 A_FireCustomMissile(KatanaPuff);
			SWR2 F 1;
			TNT1 A 2 A_WeaponReady();
			TNT1 AAAAAAAAAAAAAAA 1 A_WeaponReady();
			Goto DrawSword;
		AltFire: 
			SWRD SSSS 1  A_FireCustomMissile("Fakedeflect", 0, 0);
			TNT1 A 0 A_ReFire();
			Goto DrawSword;
	}
}
class Fakedeflect : actor { 
	Default {
		
		Health 100;
		Height 16;
		Radius 25;
		Speed 8;
		RENDERSTYLE "None";
		+INVULNERABLE;
		//	+NOBLOOD
		+SHOOTABLE;
		+NOGRAVITY;
		+SHIELDREFLECT;
		+DONTSPLASH;
	}
	States
	{
		Spawn:
			SARG AA 2();
			Stop;
	}
}
class UACM360 : "DPT.HQ-Weapon" 12461 { 
	Default {
		
		//$Category weapons
		Weapon.kickback 200;
		Weapon.AmmoType "Clip";
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 40;
		decal Bullet;
		Inventory.PickupMessage "You got the UAC-M360!";
		Obituary "%o was shredded by %k's UAC-M360.";
		+NOALERT;
	}
	States
	{
		Ready:
			DGGN A 0 A_JumpIfInventory("M4Cache",1,2);
			DGGN A 1 A_WeaponReady(8);
			Loop;
			DGGN A 1 A_WeaponReady();
			Loop;
		DeSelect:
			DGGN A 1 A_Lower();
			Loop;
		Select:
			DGGN A 0 A_TakeInventory("M4Cache",92);
			DGGN A 1 A_Raise();
			Loop;
		Fire:   
			DGGN A 0 A_JumpIfInventory("M4Cache",92,"Fire2");
			DGGN A 0 A_AlertMonsters();
			DGGN A 0 A_GiveInventory("M4Cache",1);
			DGGN A 0 A_FireBullets (5.6, 0, 1, 10, "BulletPuff");
			DGGN A 0 A_PlayweaponSound ("DSM4SHOT");
			DGGN A 0 A_GunFlash();
			DGGN A 0 A_Jump(192,3,5,7);
			DGGN A 1 OFFSET (0, 33) Bright;
			DGGN A 1 OFFSET (5, 37) Bright;
			Goto M4Refire;
			DGGN A 1 OFFSET (3, 35) Bright;
			DGGN A 1 OFFSET (7, 38) Bright;
			Goto M4Refire;
			DGGN A 1 OFFSET (4, 36) Bright;
			DGGN A 1 OFFSET (4, 39) Bright;
			Goto M4Refire;
			DGGN A 1 OFFSET (6, 37) Bright;
			DGGN A 1 OFFSET (7, 34) Bright;
			Goto M4Refire ();
		M4Refire:
			DGGN A 0 A_ReFire();
			DGGN A 1 OFFSET (1, 33);
			Goto Ready;
		AltFire:
		Fire2:
			DGGN D 1 OFFSET (1, 57) A_TakeInventory("M4Cache",92);
			DGGN D 1 OFFSET (1, 54);
			DGGN D 1 OFFSET (1, 51);
			DGGN D 1 OFFSET (1, 48) A_PlaySound ("DSM4COK1")    ();
			DGGN E 1 OFFSET (1, 45)    ();
			DGGN E 1 OFFSET (1, 42)    ();
			DGGN E 1 OFFSET (1, 39)    ();
			DGGN E 1 OFFSET (1, 36);
			DGGN F 1 OFFSET (1, 33);
			DGGN F 1 OFFSET (1, 34);
			DGGN F 1 OFFSET (1, 35);
			DGGN F 1 OFFSET (1, 34);
			DGGN F 4 OFFSET (1, 33);
			DGGN G 4 OFFSET (1, 33);
			DGGN F 1 OFFSET (1, 33);
			DGGN F 1 OFFSET (1, 34);
			DGGN F 1 OFFSET (1, 35);
			DGGN F 1 OFFSET (1, 36);
			DGGN E 1 OFFSET (1, 35);
			DGGN E 1 OFFSET (1, 34);
			DGGN E 3 OFFSET (1, 33);
			DGGN F 4 OFFSET (1, 33) A_PlaySound ("DSM4COK2")    ();
			DGGN E 1 OFFSET (1, 36)    ();
			DGGN E 1 OFFSET (1, 39)    ();
			DGGN E 1 OFFSET (1, 42)    ();
			DGGN E 1 OFFSET (1, 45);
			DGGN D 1 OFFSET (1, 48);
			DGGN D 1 OFFSET (1, 51);
			DGGN D 1 OFFSET (1, 54);
			DGGN D 1 OFFSET (1, 57);
			Goto Ready;
		Flash:
			DGGN B 0 A_Jump(128,2);
			DGGN B 2 Bright A_Light1();
			Goto LightDone;
			DGGN C 2 Bright A_Light2();
			Goto LightDone;
		Spawn:
			DGGN H -1;
			Stop;
	}
}
class M4Cache : Ammo { 
	Default {
		
		Inventory.MaxAmount 92;
	}
}
class Golden_Eagle : "DPT.HQ-Weapon" 32761 { 
	Default {
		
		//$Category weapons
		Weapon.AmmoType "clip";
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 50;
		Weapon.AmmoType2 "PistolClipHolder";
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive2 12;
		AttackSound "DS9MMFIR";
		decal BulletChip;
		Inventory.PickupMessage "You got the Golden Eagle!";
		Obituary "%o was shot up by %k's Golden Eagle.";
		Inventory.PickupSound "DSPISTIN";
		+NOALERT;
		+ammo_OPTIONAL;
		Scale .5;
	}
	States
	{
		Spawn:
			GEAG M -1;
			Stop;
		Ready:
			GEAG A 1 A_WeaponReady();
			Loop;
		Select:
			//GEAG A 0 A_TakeInventory("PistolClipHolder", 255)
			GEAG A 1 A_Raise();
			Loop;
		DeSelect:
			GEAG A 1 A_Lower();
			Loop;
		Fire:
			GEAG A 0 A_JumpIfNoammo("Click");
			GEAG A 0 A_JumpIfInventory("PistolClipHolder",1,"Bang");
			Goto Click;
		Bang:
			GEAG A 0 A_AlertMonsters();
			GEAG A 0 A_TakeInventory("PistolClipHolder", 1);
			GEAG B 0 A_FireBullets(5.6,5.6,1,12,"BulletPuff");
			GEAG B 2 Bright A_GunFlash();// A_Light1
			GEAG C 2();// A_Light0
			GEAG A 0 A_JumpIfNoammo(1);
			Goto Hold;
			GEAG A 0 A_TakeInventory("PistolClipHolder", 12);
			Goto Hold;
		Reload:
		Altfire:
			GEAG A 0 A_JumpIfInventory("PistolClipHolder",12,"Ready");
			GEAG A 1 A_JumpIfInventory("Clip",1,"ReloadStart");
			Goto Click;
		Click:
			GEAG A 0 A_PlaySound("DSNOammo");
			GEAG A 1 A_WeaponReady(14);
		Hold:
		AltHold:
			GEAG A 1 A_WeaponReady(14);
			GEAG A 0 A_ReFire();
			Goto Ready;
		ReloadStart:
			GEAG E 4 A_Playsound("DSPISOUT");
			GEAG DE 4;
		ReloadLoop:
			GEAG E 0 A_JumpIfInventory("PistolClipHolder",12,"ReloadEnd");
			GEAG E 0 A_GiveInventory("PistolClipHolder", 1);
			Loop;
		ReloadEnd:
			GEAG F 2 A_Playsound("DSPISTIN");
			GEAG G 2;
			GEAG HI 4;
			GEAG A 1;
			Goto Ready;
		Flash:
			TNT1 A 1 A_Light(2);
			TNT1 A 1 A_Light(5);
			TNT1 A 1 A_Light(4);
			TNT1 A 1 A_Light(3);
			TNT1 A 1 A_Light(2);
			TNT1 A 1 A_Light(0);
			Stop;
	}
}
class PistolClipHolder : Ammo { 
	Default {
		
		Inventory.MaxAmount 12;
		+Inventory.UNDROPPABLE;
		-Inventory.invbar;
	}
}
class IGparticles : actor {// NEED TO ADD
	Default {
	actor Icegun : "DPT.HQ-Weapon" 26209
		
		//$Category weapons
		Weapon.AmmoType "Cell";
		Weapon.AmmoType2 "Cell";
		Weapon.AmmoGive 40;
		Weapon.AmmoUse 1;
		Weapon.AmmoUse2 1;
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "You got an ice gun!"();
		Obituary "%o was iced by %k's ice gun."();
		AttackSound "gun/icer";
		Scale 0.7;
	}
	States 
	{ 
	Spawn: 
		ICE1 A -1();
		Loop;
	Ready: 
		ICEG A 1 A_WeaponReady();
		Loop;
	DeSelect: 
		ICEG A 1 A_Lower();
		Loop;
	Select: 
		ICEG A 1 A_Raise();
		Loop;
	Fire: 
		ICEG A 2;
		ICEG B 0 A_GunFlash();
		ICEG B 1 A_FireCustomMissile("IcePlasmaBall", 0, 1, 0, 0);
		ICEG C 2;
		ICEG B 3;
		ICEG A 2 A_ReFire();
		Goto Ready;
	AltFire:
		ICEG A 1;
		ICEG B 0 A_GunFlash();
		ICEG B 1 A_FireCustomMissile("IceFlames", 0, 1, 0, 0);
		ICEG A 0 A_ReFire();
		Goto Ready;
	Flash: 
		ICEG A 2 Bright A_Light1();
		ICEG A 1 Bright A_Light0();
		Stop;
}
}
class IcePlasmaBall : actor { 
	Default {
	
	Radius 10;
	Height 8;
	Speed 35;// 25
	Damage 10;
	Scale 0.5;
	Projectile;
	RenderStyle "Add";
	alpha 0.3;
	DamageType Ice;
	SeeSound "weapons/plasmaf";
	DeathSound "weapons/plasmax";
	}
	States
	{
	Spawn:
		PLSS AB 6 Bright;
		Loop;
	Death:
		PLSE ABCDE 2 Bright;//A_SpawnDebris("IGparticles")
		Stop;
}
}
class IceFlames : actor { 
	Default {
	
	Radius 11;
	Height 8;
	Speed 20;
	Damage 5;
	DamageType Ice;
	Scale 1.0;
	Projectile;
	RenderStyle "Add";
	alpha 0.75;
	SeeSound "weapons/icemist";
	}
	States
	{
	Spawn:
		PLSK ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 Bright;
		PLSZ A 1 Bright;
		Goto Death;
	Death:
		NULL A 0;
		Stop;
}
}
// NighMare
class NighMareKatana : "DPT.HQ-Weapon" 26210 { 
	Default {
	
	//$Category weapons
	scale 0.1;
	Inventory.PickupMessage "You got a katana!";
	Obituary "%o was slice n' diced by %k's katana.";
	+WEAPON.NO_AUTO_SWITCH;
	+WEAPON.MELEEweapon;
	}
  States
  {
	Spawn:
		R002 T -1;
		Loop;
	Ready:
		R002 A 1 A_WeaponReady();
		Loop;
	DeSelect:
		R002 A 0 A_Lower();
		R002 A 1 A_Lower();
		Loop;
	Select:
		R002 A 0 A_Raise();
		R002 A 1 A_Raise();
		Loop;
	Fire:
		R002 B 0 A_jumpifInventory("Slashcount", 1, "SecondSlash");
	FirstSlash:
		R002 B 2 A_PLAYSOUNDEX("skeleton/swing", "weapon");//DSSWORD
		R002 B 1 offset(-20, 10) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 B 1 offset(-60, 30) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 B 1 offset(-100, 50) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 B 1 offset(-140, 70) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 B 1 offset(-180, 90) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 B 1 offset(-220, 110) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 B 1 offset(-260, 130) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 B 1 offset(-300, 150) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 B 0 offset(-300, 180) a_giveInventory("Slashcount", 1);
		R002 B 5 offset(-300, 180) A_ReFire();
		R002 B 0 offset(-300, 180) a_takeInventory("Slashcount", 1);
		Goto DoneSlashing;
	SecondSlash:
		R002 J 2 offset(0, 150) A_PLAYSOUNDEX("skeleton/swing", "weapon");//DSSWORD
		R002 J 1 offset(5, 120);
		R002 J 1 offset(10, 90);
		R002 J 1 offset(15, 60);
		R002 J 1 offset(20, 30);
		R002 J 1 offset(30, 0);
		R002 J 1 offset(40, 10) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 J 1 offset(90, 30) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 J 1 offset(140, 50) A_CustomPunch(15, 1, 0, "KatanaPuff", 88) ();
		R002 J 1 offset(190, 70) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 J 1 offset(240, 90) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 J 1 offset(290, 110) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 J 1 offset(340, 130) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 J 1 offset(390, 150) A_CustomPunch(15, 1, 0, "KatanaPuff", 88);
		R002 J 1 offset(390, 180);// A_CustomPunch(8, 1, 0, "KatanaPuff", 88) 
		R002 J 0 offset(390, 180) a_takeInventory("Slashcount", 1);
		R002 J 5 offset(390, 180) A_ReFire ();
		R002 J 10;
	DoneSlashing:
		R002 B 1 offset(-300, 150);
		R002 B 1 offset(-260, 130);
		R002 B 1 offset(-220, 110);
		R002 B 1 offset(-180, 90);
		R002 B 1 offset(-140, 70);
		R002 B 1 offset(-100, 50);
		R002 B 1 offset(-60, 30);
		R002 B 1 offset(-20, 10);
		Goto Ready;
}
}
class SlashCount : Inventory { 
	Default {
	
	Inventory.Amount 1;
	Inventory.MaxAmount 1;
	+Inventory.UNDROPPABLE;
	}
  States
  {
	Spawn:
		TNT1 A -1;
		Stop;
}
}
class KatanaPuff : actor { 
	Default {
	
	+NOBLOCKMAP;
	+NOGRAVITY;
	+ALLOWPARTICLES;
	+RANDOMIZE;
	DamageType "Player";
	SeeSound "DSSWOHIT";
	RenderStyle "Translucent";
	Alpha 0.5;
	VSpeed 1;
	Mass 5;
	}
  States
  {
	Spawn:
		PUFF A 4 Bright;
		PUFF B 4;
	Melee:
		PUFF CD 4;
		Stop;
}
}

class MurderKnife : "DPT.HQ-Weapon" 26212 { 
	Default {
	
	//$Category weapons
	Weapon.Kickback 100;
	Weapon.UpSound "weapons/KnifeReady";
	//Weapon.preferredSkin "MurderSkin"
	+CHEATNOTweapon;
	+WEAPON.MELEEweapon;
	+WEAPON.BFG;
	+WEAPON.NO_AUTO_SWITCH;
	+WEAPON.NOAUTOFIRE;
	+Inventory.UNDROPPABLE;
	+NOAUTOAIM;
	Obituary "Someguy has been killed by unknown murderer";
	}
  States
  {
	Ready:
		KNIF A 0;
		KNIF A 1 A_WeaponReady();
		Loop;
	DeSelect:
		KNIF A 0();
		KNIF A 1 A_Lower();
		Loop;
	Select: 
		KNIF A 0();//A_PlaySound ("weapons/KnifeReady")
		KNIF A 1 A_Raise();
		Loop;
	Fire:
		KNIF B 0 A_JumpIf (ACS_ExecuteWithResult(555), "BackStab");
		KNIF B 1 A_CustomPunch (10, 1, 0, "StabPuff2", 54);
		KNIF C 1 A_CustomPunch (10, 1, 0, "StabPuff2", 64);
		KNIF C 0 A_Recoil(-2);
		KNIF D 2 A_CustomPunch (5, 1, 0, "StabPuff", 72);
		KNIF DDD 2 A_CustomPunch (5, 1, 0, "StabPuff2", 72);
		KNIF C 4;
		KNIF B 4();
		KNIF A 15;
		KNIF A 1 A_ReFire();
		Goto Ready;
	BackStab:
		KNIF C 1 Offset(4, 32) A_CustomPunch (666, 1, 0, "BackStabPuff", 64);
		KNIF C 1 Offset(36, 32);
		KNIF C 1 Offset(72, 32);
		KNIF C 1 Offset(108, 32);
		KNIF C 1 Offset(144, 32);
		KNIF E 1 Offset(178, 32) A_PlaySound ("weapons/KnifeStab");
		KNIF E 1 Offset(144, 32);
		KNIF E 1 Offset(108, 32);
		KNIF E 1 Offset(72, 32);
		//Stabbing
		KNIF E 1 Offset(36, 40);//A_CustomPunch (666, 1, 0, "BackStabPuff", 72)
		KNIF E 1 Offset(32, 48);//A_CustomPunch (666, 1, 0, "BackStabPuff", 72)
		KNIF E 1 Offset(28, 56);//A_CustomPunch (666, 1, 0, "BackStabPuff", 72)
		KNIF E 1 Offset(24, 74);//A_CustomPunch (666, 1, 0, "BackStabPuff", 72)
		KNIF E 1 Offset(20, 82);//A_CustomPunch (666, 1, 0, "BackStabPuff", 72)
		//Redraw
		KNIF E 1 Offset(16, 90);
		KNIF E 1 Offset(12, 100);
		KNIF E 1 Offset(8, 110);
		KNIF E 1 Offset(4, 120);
		KNIF E 1 Offset(0, 130);
		KNIF E 8 Offset(0, 152);
		KNIF A 2 Offset(0, 130);
		KNIF A 2 Offset(0, 100);
		KNIF A 2 Offset(0, 70);
		KNIF A 2 Offset(0, 40);
		KNIF A 2 Offset(0, 32);
		Goto Ready;
}
}
class StabPuff : actor { 
	Default {
	
	+NOBLOCKMAP;
	+NOGRAVITY;
	+PUFFONactorS;
	DamageType "Default";
	activesound "weapons/KnifeStab";
	attacksound "";
	seesound "weapons/KnifeHit";
	Obituary "";
	}
  States
  {
	Spawn:
		TNT1 A 0;
		TNT1 A 1;
		Stop;
	Crash:
		TNT1 A 0;
		TNT1 A 1;
		Stop;
	Melee:
		TNT1 A 0;
		TNT1 A 1;
		Stop;
}
}
class StabPuff2 : StabPuff { //The Silent puff
	Default {
	
	SeeSound "";
	ActiveSound "";
	}
}
class BackStabPuff : actor { 
	Default {
	
	+NOBLOCKMAP;
	+NOGRAVITY;
	+PUFFONactorS;
	DamageType "Backstab";
	activesound "weapons/KnifeStab";
	attacksound "";
	seesound "weapons/BackStab";
	Obituary "";
	}
  States
  {
	Spawn:
		TNT1 A 0;
		TNT1 A 1;
		Stop;
	Crash:
		TNT1 A 0;
		TNT1 A 1;
		Stop;
	Melee:
		TNT1 A 0;
		TNT1 A 1;
		Stop;
}
}
// Cop
class JailTime : Inventory { 
	Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 10;//300
	}
}
class JailPuff : BulletPuff { 
	Default {
	
	DamageType "Jail";
	}
}
class JailPistol : "DPT.HQ-Weapon" { 
	Default {
	
	//$Category weapons
	+CHEATNOTweapon;
	}
	States
	{
	Ready:
		PISG A 1 A_WeaponReady();
		Loop;
	Select:
		PISG A 1 A_Raise();
		Loop;
	DeSelect:
		PISG A 1 A_Lower();
		Loop;
	Fire:
		PISG A 1;
		PISG B 1 A_FireBullets (5.6, 0, 1, 5, "JailPuff");
		PISG A 0 A_PlaySound("weapons/pistol", CHAN_weapon);
		PISG A 0 A_GunFlash();
		PISG C 1;
		PISG B 15 A_ReFire();
		Goto Ready;
	Spawn:
		TNT1 A -1;
		Stop;
}
}
class Tazer : "DPT.HQ-Weapon" 25025 { 
	Default {
	
	//$Category weapons
	Inventory.PickupMessage "You got a tazer!";
	Inventory.PickupSound "misc/w_pkup";
	AttackSound "weapons/tazer";
	}
   States
   {
	Spawn:
		TAZT A -1;
		Loop;
	Ready:
		TAZO A 5 A_WeaponReady();
		Loop;
	DeSelect:
		TAZO A 1 A_Lower();
		Loop;
	Select:
		TAZO A 1 A_Raise();
		Loop;
	Fire:
		TAZO A 1 A_JumpIfNoammo(1);
		TAZO B 0 A_PlayweaponSound("weapons/tazershot");
		TAZO B 3 A_CustomPunch(10, 1, 0, "ShockPuff");
		TAZO C 0 A_PlayweaponSound("weapons/tazershot");
		TAZO C 3;
		TAZO C 0 A_PlayweaponSound("weapons/tazershot");
		Goto Ready;
	Hold:
		TAZO A 1 A_JumpIfNoammo(1);
		TAZO B 3 A_CustomPunch(10, 1, 0, "ShockPuff");
		TAZO C 3;
		Goto Ready;
}
}
// Mage
class MWeapWand2 : "DPT.HQ-Weapon" 26213 { 
	Default {
	
	//$Category weapons
	Inventory.PickupMessage "You've found the Jade Wand!";
	Obituary "%k drained all of %o's life.";
	Weapon.AmmoType "Crossbowammo";
	Weapon.AmmoGive 25;
	Weapon.AmmoUse 1;
	Weapon.Sisterweapon JadeWand2;
	AttackSound "weapons/jadefire";
	DamageType "Lightning";
	}
	States
	{
	Spawn:
		JADE C -1 Bright;
		Loop;
	Ready:
		JADE A 1 A_WeaponReady();
		Loop;
	DeSelect:
		JADE A 1 A_Lower();
		Loop;
	Select:
		JADE A 1 A_Raise();
		Loop;
	Fire:
		JADE A 2 Bright;
		JADE B 0 A_PlaySoundEx("weapons/jadefire","auto");
		JADE B 2 Bright A_FireCustomMissile("JadeShot",0,3,0,0);
		JADE B 2;
		Jade A 5;
		JADE A 0 A_Refire();
		Goto Ready;
}
}
class JadeWand2 : MWeapWand2 { 
	Default {
	
	+POWERED_UP;
	Weapon.Sisterweapon MWeapWand2;
	}
	States
	{
	Fire:
		JADE A 2 Bright;
		JADE B 2 Bright A_FireBullets (5, 5, 5, 12,"JadePuff");
		JADE B 2;
		JADE A 2;
		JADE A 0 A_Refire();
		Goto Ready;
}
}
class JadeShot : actor { 
	Default {
	
	Radius 3;
	Height 3;
	Speed 80;
	Damage 8;
	Scale .75;
	Alpha .5;
	PROJECTILE;
	-NOGRAVITY;
	RENDERSTYLE "Normal";
	DamageType "Lightning";
	+RIPPER;
	+THRUGHOST;
	SeeSound "weapons/jadefire";
	DeathSound "weapons/jadehit";
	}
	States
	{
	Spawn:
		IDEX A 1 Bright;
		IDEX A 0 A_PlaySoundEx("weapons/jadefire","auto");
		IDEX B 0 A_SpawnItemEx("JadeTrail",0,0,0,0,0,0,0,8);
		Loop;
	Death:
		IDEX B 0 A_SpawnItemEx("JadeLightSpawner");
		IDEX B 0 A_SpawnItemEx("JadeLightSpawner");
		IDEX B 0 A_SpawnItemEx("JadeLightSpawner");
		IDEX B 0 A_SpawnItemEx("JadeLightSpawner");
		IDEX B 0 A_SpawnItemEx("JadeLightSpawner");
		Stop;
}
}
class JadeTrail : actor { 
	Default {
	
	Radius 0;
	Height 1;
	Damage 0;
	Speed 0;
	Scale 0.5;
	PROJECTILE;
	RENDERSTYLE "Add";
	ALPHA 0.50;
	}
	States
	{
	Spawn:
		BONE IJKLMNOP 2 Bright;
		Stop;
}
}
class JadeLightSpawner : actor { 
	Default {
	
	+NoBlockMap +NoGravity +NoSector +NoInteraction +NoClip -Solid +CLIENTSIDEONLY;
	}
	States
	{
	Spawn:
	Active:
		TNT1 A 0;
		TNT1 A 0 A_JumpIf(Args[1], "Circle");
		TNT1 A 2;
		TNT1 A 0 A_SpawnItemEx ("JadeTrail", random(-Args[0], Args[0]), random(-Args[0], Args[0]), random(0, 8), (0.1)*Random(1, 3), 0, (0.1)*Random(1, 10), random(0,360), 129, Args[2]);
		TNT1 A 0 A_SpawnItemEx ("JadeTrail", random(-Args[0], Args[0]), random(-Args[0], Args[0]), random(0, 8), (0.1)*Random(1, 3), 0, (0.1)*Random(1, 10), random(0,360), 129, Args[2]);
		Stop;
	Circle:
		TNT1 A 0;
		TNT1 A 2 A_SpawnItemEx ("JadeTrail", random(-Args[0], Args[0]), 0, random(0, 8), (0.1)*Random(1, 3), 0, (0.1)*Random(1, 10), Random(0, 360), 129, Args[2]);
		Loop;
	Inactive:
		TNT1 A 1;
		Loop;
}     
}
class JadePuff : actor { 
	Default {
	
	renderstyle "Add";
	+NOBLOCKMAP;
	+NOGRAVITY;
	+PUFFONactorS;
	+PAINLESS;
	Scale .5;
	Alpha .5;
	DamageType Lightning;
	}
	States
	{
	Spawn:
		JADE DEFGHI 2 Bright;
		Stop;
	Crash:
		JADE DEFGHI 2 Bright;
		Stop;
}
}
class MWeapFrost2 : "DPT.HQ-Weapon" 26214 { 
	Default {
	
	//$Category weapons
	Obituary "%o was chilled by %k's Frost Fang";
	Radius 20;
	Height 12;
	Inventory.PickupMessage "Frost Fang";
	Weapon.AmmoType "EverIce";
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 20;
	Weapon.Sisterweapon "FrostFangPowered";
	}
  States
  {
	Ready:
		FSTF B 0 A_Jump(1, 2);
		FSTF B 1 A_WeaponReady();
		Loop;
		FSTF CCCCCCCCCC 1 A_WeaponReady();
		FSTF CCCCCCCCC 1 A_WeaponReady();
		FSTF CCCCCCCC 1 A_WeaponReady();
		Loop;
	Select:
		FSTF B 1 A_Raise();
		Loop;
	DeSelect:
		FSTF B 1 A_Lower();
		Loop;
	Fire:
		FSTF B 3 Bright;
		FSTF C 4 Bright;
		FSTF D 5 Bright;
	Hold:
		FSTF E 0 Bright A_PlayweaponSound("FrostFang/Fire1");
		FSTF E 0 Bright A_SpawnItemEx("FrostFangFog2", 16, 0, 32, 0.5, 0, frandom(-0.5, 0.5), Random(-50, 50), 128);
		FSTF E 0 Bright A_SpawnItemEx("FrostFangFog2", 16, 0, 32, 0.5, 0, frandom(-0.5, 0.5), Random(-50, 50), 128);
		FSTF E 0 Bright A_SpawnItemEx("FrostFangFog2", 16, 0, 32, 0.5, 0, frandom(-0.5, 0.5), Random(-50, 50), 128);
		FSTF E 0 Bright A_SpawnItemEx("FrostFangFog2", 16, 0, 32, 0.5, 0, frandom(-0.5, 0.5), Random(-50, 50), 128);
		FSTF E 2 Bright A_FireCustomMissile("FrostFangShard", 0, 1, Random(-5, 5), Random(-5, 5));
		FSTF D 3 Bright A_Jump(12, 3);
		FSTF C 5 Bright A_ReFire();
		FSTF B 4 Bright;
		Goto Ready;
		FSTF D 12 Bright;
		FSTF C 5 Bright A_ReFire();
		FSTF B 4 Bright;
		Goto Ready;
	Spawn:
		FSTF A -1;
		Loop;
}
}
class FrostFangPowered : MWeapFrost2 { 
	Default {
	
	Obituary "%o was horribly chilled by %k's Frost Fang";
	Weapon.AmmoUse 8;
	Weapon.Sisterweapon "MWeapFrost2";
	+WEAPON.Powered_Up;
	}
  States
  {
	Fire:
		FSTF B 3 Bright;
		FSTF C 4 Bright;
	Hold:
		FSTF D 5 Bright;
		FSTF E 0 Bright A_SpawnItemEx("FrostFangFog2", 16, 0, 32, 0.5, 0, frandom(-0.5, 0.5), Random(-50, 50), 128);
		FSTF E 0 Bright A_SpawnItemEx("FrostFangFog2", 16, 0, 32, 0.5, 0, frandom(-0.5, 0.5), Random(-50, 50), 128);
		FSTF E 0 Bright A_SpawnItemEx("FrostFangFog2", 16, 0, 32, 0.5, 0, frandom(-0.5, 0.5), Random(-50, 50), 128);
		FSTF E 0 Bright A_SpawnItemEx("FrostFangFog2", 16, 0, 32, 0.5, 0, frandom(-0.5, 0.5), Random(-50, 50), 128);
		FSTF E 0 Bright A_PlayweaponSound("FrostFang/Fire2");
		FSTF E 6 Bright A_FireCustomMissile("FrostFangBall");
		FSTF D 6 Bright;
		FSTF C 5 Bright A_ReFire();
		FSTF B 4 Bright;
		Goto Ready;
}
}
class FrostFangShard : actor { 
	Default {
	
	Speed 40;
	Radius 6;
	Height 6;
	Damage (4*Random(3, 5));
	DamageType Ice;
	Projectile;
	DeathSound "FrostFang/Hit1";
	Scale 0.75;
	RenderStyle "Translucent";
	Alpha 0.8;
	}
  States
  {
	Spawn:
		FFSD AAABBBCCC 1 Bright A_SpawnItemEx("FrostFangFog", -(MomX/1.4), -(MomY/1.4), (MomZ/1.4*-1), (MomX/1.4), (MomY/1.4), (MomZ/1.4), -Angle, 138);
		Loop;
	Death:
		FFSD DEFGH 5 Bright;
		Stop;
}
}
class FrostFangBall  : actor { 
	Default {
	
	Radius 10;
	Height 16;
	Damage (10*Random(2, 4));
	Speed 20;
	RenderStyle "Add";
	Alpha 1.0;
	Scale 2.0;
	Projectile;
	DamageType Ice;
	DeathSound "FrostFang/Hit2";
	}
  States
  {
	Spawn:
		TNT1 A 0 A_SpawnItemEx("FrostFangFog2", 0, 0, 0, Random(1, 2), 0, Random(-1, 1), Random(-30, 30), 128);
		TNT1 A 1 A_SpawnItemEx("FrostFangBallParticle", 0, 0, 0, Random(3, 4), 0, frandom(-0.5, 0.5), Random(-15, 15), 128);
		Loop;
	Death:
		FFBL C 0 Bright A_Explode(60, 128, 0);
		FFBL CDEFG 4 Bright;
		Stop;
}
}
class FrostFangBallParticle : actor { 
	Default {
	
	Radius 1;
	Height 1;
	+NoGravity;
	+NoClip;
	RenderStyle "Add";
	Alpha 0.8;
	Scale 0.6;
	}
  States
  {
	Spawn:
		FFFG A 4 A_FadeOut(0.2);
		Loop;
}
}
class FrostFangFog : actor { 
	Default {
	
	Radius 1;
	Height 1;
	+NoGravity;
	+NoClip;
	RenderStyle "Add";
	Alpha 0.2;
	XScale 0.4;
	YScale 0.2;
	}
  States
  {
	Spawn:
		FFFG A 4 A_FadeOut(0.1);
		Loop;
}
}
class FrostFangFog2 : actor { 
	Default {
	
	Radius 1;
	Height 1;
	+NoGravity;
	+NoClip;
	RenderStyle "Add";
	Alpha 0.2;
	XScale 0.6;
	YScale 0.4;
	}
  States
  {
	Spawn:
		FFFG A 4 A_FadeOut(0.03);
		Loop;
}
}
class EverIce : Ammo replaces Blasterammo { 
	Default {
	
	Inventory.PickupMessage "EverIce Chunk";
	Inventory.Amount 25;
	Inventory.MaxAmount 200;
	Ammo.BackPackAmount 25;
	Ammo.BackPackMaxAmount 400;
	Inventory.Icon "EICEI0";
	Scale 0.4;
	}
  States
  {
	Spawn:
		EICE ABCD 6;
		Loop;
}
}
// Delta-Touch & GZDoom Fix
class EverIceHefty : Ammo replaces BlasterHefty { 
	Default {
	
	Inventory.PickupMessage "EverIce Cluster";
	Inventory.Amount 50;
	Inventory.MaxAmount 200;
	Ammo.BackPackAmount 25;
	Ammo.BackPackMaxAmount 400;
	Inventory.Icon "EICEI0";
	Scale 0.4;
	}
  States
  {
	Spawn:
		EICE EFGH 6;
		Loop;
}
}
class MWeapLightning2 : "DPT.HQ-Weapon" 26215 { 
	Default {
	
	//$Category weapons
	Weapon.AmmoUse 5;
	Weapon.AmmoGive 50;
	Weapon.AmmoType "SkullRodammo";
	Inventory.PickupMessage "Apotheosis";
	Weapon.Sisterweapon "Apotheosis_Powered";
	}
  States
  {
	Ready:
		APOF BB 1 Bright A_WeaponReady();
		APOF B 0 Bright A_PlaySoundEx("Apotheosis/Loop", "SoundSlot7", 1);
		APOF CCDDEE 1 Bright A_WeaponReady();
		Loop;
	DeSelect:
		APOF A 1 A_Lower();
		APOF A 0 A_StopSoundEx("SoundSlot7");
		Loop;
	Select:
		APOF A 1 A_Raise();
		Loop;
	Fire:
		APOF A 0 Bright A_FireCustomMissile("SeekerLightning", Random(3, 6), 0, 0, 0, 0, Random(-3, 3));
		APOF A 0 Bright A_FireCustomMissile("SeekerLightning", Random(-3, -6), 0, 0, 0, 0, Random(-3, 3));
		APOF A 0 Bright A_FireCustomMissile("SeekerLightning", Random(-3, 3), 0, 0, 0, 0, Random(-2, -4));
		APOF A 0 Bright A_FireCustomMissile("SeekerLightning", Random(-3, 3), 0, 0, 0, 0, Random(2, 4));
		APOF A 1 Bright A_FireCustomMissile("SeekerLightning", 0, 1, 0, 0, 0, 0);
		APOF A 0 Bright A_PlayweaponSound("Apotheosis/Fire");
		APOF A 0 Bright A_SetBlend("LightBlue", 0.25, 18);
		APOF FGHIJKLMBCDEBCDEBCDE 2 Bright;
		APOF E 0 A_ReFire();
		Goto Ready;
	Spawn:
		APOP A -1;
		Stop;
}
}
class Apotheosis_Powered : MWeapLightning2 { 
	Default {
	
	Weapon.AmmoUse 10;
	Weapon.Sisterweapon "MWeapLightning2";
	+WEAPON.Powered_Up;
	}
  States
  {
	Fire:
		APOF A 1 Bright A_FireCustomMissile("BallLightning", 0, 1, 0, -8);
		APOF A 0 Bright A_PlayweaponSound("Apotheosis/Fire");
		APOF A 0 Bright A_SetBlend("LightBlue", 0.75, 35);
		APOF FGHIJKLMBCDEBCDEBCDE 2 Bright;
		APOF E 0 A_ReFire();
		Goto Ready;
}
}
class SeekerLightning : actor { 
	Default {
	
	Radius 5;
	Height 5;
	Speed 16;
	Damage (5*Random(2, 4));
	Renderstyle "Add";
	Scale 0.25;
	Decal DoomImpScorch;
	DeathSound "Apotheosis/SeekerHit";
	Projectile;
	+SeekerMissile;
	+ScreenSeeker;
	Obituary "%o was totally shocked by %k!";
	}
  States
  {
	Spawn:
		ZAP7 A 0 Bright;
		ZAP7 A 1 Bright A_PlaySoundEx("Apotheosis/MiniLoop", "SoundSlot7", 1);
		ZAP7 AAA 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 A 1 Bright;
		ZAP7 AAA 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 B 1 Bright;
		ZAP7 BBB 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 B 1 Bright;
		ZAP7 BBB 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 C 1 Bright;
		ZAP7 CCC 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 C 1 Bright;
		ZAP7 CCC 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 D 1 Bright;
		ZAP7 DDD 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 D 1 Bright;
		ZAP7 DDD 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 E 1 Bright;
		ZAP7 EEE 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 E 1 Bright;
		ZAP7 EEE 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
	Spawn2:
		ZAP7 A 0 Bright;
		ZAP7 A 1 Bright A_PlaySoundEx("Apotheosis/MiniLoop", "SoundSlot7", 1);
		ZAP7 AAA 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 A 1 Bright A_SeekerMissile(30, 30, SMF_LOOK | SMF_PRECISE);
		ZAP7 AAA 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 B 1 Bright;
		ZAP7 BBB 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 B 1 Bright A_SeekerMissile(30, 30, SMF_LOOK | SMF_PRECISE);
		ZAP7 BBB 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 C 1 Bright;
		ZAP7 CCC 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 C 1 Bright A_SeekerMissile(30, 30, SMF_LOOK | SMF_PRECISE);
		ZAP7 CCC 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 D 1 Bright;
		ZAP7 DDD 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 D 1 Bright A_SeekerMissile(30, 30, SMF_LOOK | SMF_PRECISE);
		ZAP7 DDD 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 E 1 Bright;
		ZAP7 EEE 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		ZAP7 E 1 Bright A_SeekerMissile(30, 30, SMF_LOOK | SMF_PRECISE);
		ZAP7 EEE 0 Bright A_SpawnItemEx("SmallerZapPuff", Random(-6, 6), 0, Random(-6, 6), 0, 0, 0, 0, 160);
		Loop;
	Death:
		ZAP7 A 0 Bright A_StopSoundEx("SoundSlot7");
		ZAP7 ABCDE 2 Bright A_FadeOut(0.1);
		Loop;
}
}
class BallLightning : actor { 
	Default {
	
	Radius 13;
	Height 8;
	Speed 10;
	Damage (5*Random(10, 15));
	Renderstyle "Add";
	Scale 0.5;
	Decal Scorch;
	Projectile;
	Obituary "%o felt %k's wrath!";
	}
  States
  {
	Spawn:
		ZAP7 A 0 Bright;
		ZAP7 A 1 Bright A_PlaySoundEx("Apotheosis/Loop", "SoundSlot7", 1, -1);
		ZAP7 AAA 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 A 1 Bright A_JumpIf(WaterLevel > 2, "Submerged");
		ZAP7 AAA 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 B 1 Bright A_JumpIf(WaterLevel > 2, "Submerged");
		ZAP7 BBB 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 B 1 Bright A_JumpIf(WaterLevel > 2, "Submerged");
		ZAP7 BBB 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 C 1 Bright A_JumpIf(WaterLevel > 2, "Submerged");
		ZAP7 C 0 Bright A_SpawnItemEx("BoltShooter", 16);
		ZAP7 CCC 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 C 1 Bright A_JumpIf(WaterLevel > 2, "Submerged");
		ZAP7 CCC 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 D 1 Bright A_JumpIf(WaterLevel > 2, "Submerged");
		ZAP7 DDD 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 D 1 Bright A_JumpIf(WaterLevel > 2, "Submerged");
		ZAP7 DDD 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 E 1 Bright A_JumpIf(WaterLevel > 2, "Submerged");
		ZAP7 EEE 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 E 1 Bright A_JumpIf(WaterLevel > 2, "Submerged");
		ZAP7 EEE 0 Bright A_SpawnItemEx("SmallZapPuff", 0, Random(-12, 12), Random(-12, 12), 0, 0, 0, 0, 160);
		ZAP7 E 0 Bright A_SpawnItemEx("BoltShooter", 16);
		Loop;
	Death:
		ZAP7 A 0 Bright A_StopSoundEx("SoundSlot7");
		ZAP7 A 0 Bright A_PlayweaponSound("Apotheosis/Impact");
		ZAP7 A 0 Bright A_Explode(75, 96, 1);
		ZAP7 AAAAA 0 Bright A_SpawnItemEx("ZapPuff", Random(-16, 16), Random(-16, 16), Random(-16, 16), 0, 0, 0, 0, 160);
	Fade:
		ZAP7 ABCDE 2 Bright A_FadeOut(0.1);
		Loop;
	Submerged:
		ZAP7 A 0 A_Stop();
		ZAP7 A 0 Bright A_StopSoundEx("SoundSlot7");
		ZAP7 A 0 Bright A_PlayweaponSound("Apotheosis/Impact");
		ZAP7 A 0 Bright A_Explode(200, 256, 1);
		ZAP7 AAAAA 0 Bright A_SpawnItemEx("ZapPuff", Random(-16, 16), Random(-16, 16), Random(-16, 16), 0, 0, 0, 0, 160);
		Goto Fade;
}
}
class BoltShooter : actor { 
	Default {
	
	Radius 2;
	Height 2;
	Speed 0;
	MaxTargetRange 256;
	+NOGRAVITY;
	+FRIENDLY;
	+NOTARGET;
	+LOOKALLAROUND;
	Obituary "%o felt %k's wrath!";
	}
  States
  {
	Spawn:
	Missile:
		TNT1 A 0;
		TNT1 A 1 A_Chase();
		TNT1 A 0 A_FaceTarget();
		TNT1 A 0 A_CustomRailgun(10, 0, None, LightBlue, 1, 1, 999);
		TNT1 A 0 A_CustomRailgun(0, 0, None, LightBlue, 1, 1, 999);
		TNT1 A 0 A_CustomRailgun(0, 0, None, White, 1, 1, 999);
		TNT1 A 0 A_CustomRailgun(0, 0, None, White, 1, 1, 999);
		Stop;
}
}
class ZapPuff : actor { 
	Default {
	
	Radius 2;
	Height 2;
	Renderstyle "Add";
	+NOINTERACTION;
	}
  States
  {
	Spawn:
		TNT1 A 1;
		ZAP1 C 0 A_Jump(255, "Puff1", "Puff2", "Puff3", "Puff4");
	Puff1:
		ZAP1 C 1 A_FadeOut(0.1);
		Loop;
	Puff2:
		ZAP1 D 1 A_FadeOut(0.1);
		Loop;
	Puff3:
		ZAP1 E 1 A_FadeOut(0.1);
		Loop;
	Puff4:
		ZAP1 F 1 A_FadeOut(0.1);
		Loop;
}
}
class SmallerZapPuff : ZapPuff { 
	Default {
	
	Scale 0.35;
	}
}
class SmallZapPuff : ZapPuff { 
	Default {
	
	Scale 0.5;
	}
}
class MWeapBloodscourge2 : "DPT.HQ-Weapon" 26216 { 
	Default {
	
	//$Category weapons
	Weapon.AmmoUse 6;
	Weapon.AmmoGive 40;
	Weapon.AmmoType1 "Cultammo";
	Weapon.AmmoType2 "Cultammo";
	Inventory.PickupMessage "The Serpent Cult staff is now yours";
	Obituary "%o was scorched by %k's Serpent Cult staff!";
	Weapon.sisterweapon "SerpentCultStaffPowered";
	}
	States
	{
	Ready:
		TNT1 A 0 A_JumpIfInventory("PowerweaponLevel2", 1, "ReadyPowered");
		CSIH A 1 A_WeaponReady();
		Loop;
	ReadyPowered:
		CSPU AAAABBBBCCCC 1 Bright A_WeaponReady();
		Goto Ready;
	DeSelect:
		CSIH A 1 A_Lower();
		Loop;
	Select:
		CSIH A 1 A_Raise();
		Loop;
	Fire:
		TNT1 A 0 A_playsound("cult/fire");
		CSIH AA 1;
		TNT1 AAAA 0 A_FireCustomMissile("CultShot1",frandom(-12,12),0,0,0,1,frandom(-4,4));
		CSIH B 4 Bright A_FireCustomMissile("CultShot1");//,frandom(-12,12),1,0,0,1,frandom(-4,4))
		CSIH CDE 3 Bright;
		CSIH FGHAA 3 Bright;
		TNT1 A 0 A_Refire();
		Goto Ready;
	Spawn:
		TSOG A -1;
		Stop;
}
}
class SerpentCultStaffPowered : MWeapBloodscourge2 { 
	Default {
	
	Weapon.sisterweapon "MWeapBloodscourge2";
	+WEAPON.POWERED_UP;
	}
	States
	{
	Fire:
		TNT1 A 0 A_playsound("cult/PowerFire");
		CSPF AAABB 1 Bright;
		TNT1 A 0 A_ZoomFactor(0.98);
		CSPF C 4 Bright A_FireCustomMissile("CultShot2");
		TNT1 A 0 A_ZoomFactor(0.99);
		CSPF DEF 3 Bright A_ZoomFactor(1);
		CSIH FGHAA 3 Bright;
		CSPF G 3 Bright;
		CSPU AAB 2 Bright;
		CSPU BCC 2 Bright A_Refire();
		Goto Ready;
}
}
class CultShot1 : actor { 
	Default {
	
	Radius 6;
	Height 16;
	Speed 35;
	Damage (Frandom(1,6));
	Projectile;
	Bouncecount 6;
	WallbounceFactor 2;
	+RANDOMIZE;
	+RIPPER;
	+HEXENBOUNCE;
	+CANBOUNCEWATER;
	RenderStyle "Add";
	scale .75;
	SeeSound "";
	DeathSound "cult/hit";
	Decal "Scorch";
	}
	States
	{
	Spawn:
		SCBL A 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL A 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL A 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL B 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL B 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL B 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL C 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL C 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL C 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL D 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL D 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBL D 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		Loop;
	Death:
		SCBL EEEEFFFGGH 2 Bright;
		Stop;
}
}
class CultShot2 : actor { 
	Default {
	
	Radius 6;
	Height 16;
	Speed 35;
	Damage 10;
	Projectile;
	Bouncecount 6;
	WallbounceFactor 2;
	+RANDOMIZE;
	+HEXENBOUNCE;
	+CANBOUNCEWATER;
	Scale 0.75;
	RenderStyle "Add";
	Alpha 1.0;
	SeeSound "";
	DeathSound "cult/hit";
	Decal "Scorch";
	}
	States
	{
	Spawn:
		SCB2 A 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 A 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 A 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 B 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 B 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 B 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 C 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 C 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 C 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 D 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 D 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 D 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 E 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 E 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 E 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 F 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 F 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		SCB2 F 1 Bright A_SpawnItemEx("CultTrail3",0,frandom(4,-4),frandom(4,-4),Random(1,-1),Random(1,-1),Random(1,-1),Random(0,360))TNT1 A 0 A_GiveInventory("MaybeFire",1);
		Loop;
	Death:
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,0,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,22.5,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,45,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,67.5,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,90,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,112.5,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,135,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,157.5,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,180,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,202.5,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,225,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,247.5,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,270,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,292.5,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,315,Random(1,-1)*frandom(0,8));
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,337.5,Random(1,-1)*frandom(0,8));
		SCB2 GHIJKLMNOPQ 2 Bright;
		Stop;
}
}
class CultShot3 : CultShot1 { 
	Default {
	
	Bouncecount 3;
	}
	States
	{
	Spawn:
		SCBP A 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP A 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP A 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP B 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP B 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP B 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP C 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP C 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP C 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP D 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP D 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		SCBP D 1 Bright A_SpawnItemEX("CultTrail1");
		TNT1 AAA 0 A_Cstaffmissileslither();
		Loop;
}
}
class CultTrail3 : actor { 
	Default {
	
	+NOCLIP;
	+NOINTERACTION;
	+NOGRAVITY;
	renderstyle "Add";
	alpha 0.75;
	Scale 0.75;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_Jump(256,"A","B","C","D","E","F");
		Loop;
	A:
		SCB2 A 1 Bright A_fadeout();
		TNT1 A 0 A_SetScale(Alpha);
		TNT1 A 0 A_Jump(256,"B","C","D","E","F");
		Goto Spawn;
	B:
		SCB2 B 1 Bright A_fadeout();
		TNT1 A 0 A_SetScale(Alpha);
		TNT1 A 0 A_Jump(256,"A","C","D","E","F");
		Goto Spawn;
	C:
		SCB2 C 1 Bright A_fadeout();
		TNT1 A 0 A_SetScale(Alpha);
		TNT1 A 0 A_Jump(256,"A","B","D","E","F");
		Goto Spawn;
	D:
		SCB2 D 1 Bright A_fadeout();
		TNT1 A 0 A_SetScale(Alpha);
		TNT1 A 0 A_Jump(256,"A","B","C","E","F");
		Goto Spawn;
	E:
		SCB2 E 1 Bright A_fadeout();
		TNT1 A 0 A_SetScale(Alpha);
		TNT1 A 0 A_Jump(256,"A","B","C","D","F");
		Goto Spawn;
	F:
		SCB2 F 1 Bright A_fadeout();
		TNT1 A 0 A_SetScale(Alpha);
		TNT1 A 0 A_Jump(256,"A","B","C","D","E");
		Goto Spawn;
}
}
class CultTrail1 : actor { 
	Default {
	
	+NOCLIP;
	+NOINTERACTION;
	+NOGRAVITY;
	renderstyle "Add";
	alpha 0.5;
	scale .5;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_Jump(256,"A","B");
	A:
		CSFT AABBCCDDEE 1 Bright;//A_fadeout(0.05)
		Stop;
	B:
		CSFT FFGGHHIIJJ 1 Bright;//A_fadeout(0.05)
		Stop;
}
}
class MaybeFire : CustomInventory { 
	Default {
	
	Inventory.MaxAmount 0;
	+Inventory.AutoActivate;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Fail;
	Use:
		TNT1 A 0 A_Jump(224,"DoNothingWE");
		TNT1 A 0 A_CustomMissile("CultShot3",0,0,Frandom(0,360),Random(1,-1)*frandom(0,8));
		Stop;
	DoNothingWE:
		TNT1 A 0;
		Stop;
}
}
class Cultammo : Ammo { 
	Default {
	
	Inventory.PickupMessage "A small sphere of cult energy.";
	Inventory.Amount 30;
	Inventory.MaxAmount 333;
	Ammo.BackPackAmount 40;
	Ammo.BackPackMaxAmount 666;
	Inventory.Icon "COTLC0";
	renderstyle "Add";
	alpha 0.9;
	}
	States
	{
	Spawn:
		COTL ABC 4 Bright;
		Loop;
}
}
// Delta-Touch & GZDoom Fix
class LargeCultammo : Ammo { 
	Default {
	
	Inventory.PickupMessage "A Large sphere of cult energy.";
	Inventory.Amount 60;
	Inventory.MaxAmount 333;
	Ammo.BackPackAmount 90;
	Ammo.BackPackMaxAmount 666;
	Inventory.Icon "COTSC0";
	renderstyle "Add";
	alpha 0.9;
	}
	States
	{
	Spawn:
		COTS ABC 4 Bright;
		Loop;
}
}
class mindBeam  : actor { 
	Default {
	
	Obituary "%o was 'sploded by %k's brain!";
	Radius 32;
	Height 8;
	speed 100;
	damage 1;
	Projectile;
	seesound "";
	DamageType Disintegrate;
	-BLOODSPLATTER;
	+BLOODLESSIMPACT;
	+NODAMAGETHRUST;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Loop;
	Death:
		TNT1 A 1;
		Stop;
}
}
class MWeapFists : "DPT.HQ-Weapon" 26217 { 
	Default {
	
	//$Category weapons
	Obituary "%o head 'sploded by %k's brain!";
	Weapon.kickback 100;
	+WEAPON.MELEEweapon;
	}
	States
	{
	Spawn:
		PHAS A -1;
		Loop;
	Ready:
		PHAG A 1 A_WeaponReady();
		Loop;
	DeSelect:
		PHAG A 1 A_Lower();
		Loop;
	Select:
		PHAG A 1 A_Raise();
		Loop;
	Fire:
		PHAG AABB 3;
		PHAG A 1 A_playsound("force");
		PHAG C 1 A_FireCustomMissile("mindBeam", 0, 0, 0, 0);
		Goto HOLD;
	Hold:
		PHAG CDEFDCFE 5;
		PHAG DEC 1 A_FireCustomMissile("mindBeam", 0, 0, 0, 0);
		PHAG CFE 1 A_FireCustomMissile("mindBeam", 0, 0, 0, 0);
		PHAG EDF 3();
		PHAG F 1 A_playsound("force");
		PHAG E 1 a_REFIRE();
		Goto Ready;
}
}
class MWeapShotgun : "DPT.HQ-Weapon" 26218 { 
	Default {
	
	//$Category weapons
	scale .4;
	Inventory.PickupMessage "I can fire shotgun shells... with my MIND!";
	Weapon.AmmoType1 "Shell";
	Weapon.AmmoGive 10;
	Weapon.AmmoUse 1;
	Inventory.pickupsound "misc/w_pkup";
	decal BulletChip;
	Attacksound "HSGH";
	Scale 0.5;
	Weapon.kickback 1500;
	}
	States
	{
	Spawn:
		HNTS A 4;
		Loop;
	Select:
		PKSH AA 0 A_raise();
		Q2SH A 1 A_raise();
		Goto Select+1;
	deSelect:
		PKSH AA 0 A_lower();
		Q2SH A 1 A_lower();
		Loop;
	Ready:
		Q2SH AB 2;
		Q2SH B 1 A_Playsound(falla);
		Q2SH CDEFGH 3 A_WeaponReady();
		Goto Hold;
	Hold:   
		Q2SH E 1 A_Playsound(strt);
		Q2SH EFGH 3 A_WeaponReady();
		Loop;
	fire:
		Q2SF A 1 A_playsound(lift);
		Q2SF ABCDE 3;
		Q2SF FF 1 Bright A_FireBullets(23,23,20,2,"BulletPuff",1,1000);
		Q2SF FFGGHH 1 Bright;
		Q2SF JJ 2;
		Q2SF K 1 A_FireCustomMissile("ShotShellCasing",45+random(-8,6),0,2,3);
		Q2SF K 1 A_FireCustomMissile("ShotShellCasing",315+random(-8,6),0,2,3);
		Q2SF LZ 2;
		Goto Ready;
}
}
class ShotShellCasing : actor { 
	Default {
	
	Scale 0.2;
	Radius 3;
	Height 3;
	Speed 5;
	Mass 5;
	+NOBLOCKMAP +DROPOFF +MISSILE +NOTELEPORT +FLOORCLIP;
	+NOCLIP;
	DeathSound "weapons/casing2";
	DropItem ShotShellCasingOnFloor;
	}
    States
    {
	Spawn:
		CAS2 B 3();
		CAS2 CDEFGHAB 3 A_ChangeFlag(NOCLIP,0);
		Goto Spawn+1;
	Death:
		TNT1 A 10 A_Fall();
		Stop;
}
}
class ShotShellCasingOnFloor : actor { 
	Default {
	
	Scale 0.2;
	Health 5000;
	Radius 1;
	Height 1;
	Speed 0;
	PainChance 0;
	Mass 5;
	+CANPASS +FLOORCLIP;
	}
    States
    {
	Spawn:
		CAS2 K 0;
		CAS2 K 0 A_Jump(128,2);
		CAS2 I 500;
		Stop;
		CAS2 J 500;
		Stop;
	Death:
		CAS2 K 0;
		CAS2 K 0 A_Jump(128,2);
		CAS2 I 500;
		Stop;
		CAS2 J 500;
		Stop;
}
}
class MWeapSufferStaff : "DPT.HQ-Weapon" 26219 { //2005
	Default {
	
	//$Category weapons
	Inventory.PickupSound "misc/w_pkup";
	Inventory.PickupMessage "You got the Staff Of Suffering!";
	+FLOATBOB;
	}
	States
	{
	Spawn:
		NSTF D -1;
		Stop;
	Ready:      
		NSTF A 0 A_JumpIfInventory("AuraON",1,2);
		NSTF A 16 A_WeaponReady();
		Goto Ready;
		NSTF A 0 HealThing(1);
		Goto Ready+1;
	DeSelect:
		NSTF A 1 A_Lower();
		Loop;
	Select:
		NSTF A 1 A_Raise();
		Loop;
	Fire:   
		NSTF B 0();
		NSTF C 0 A_FireCustomMissile("RailDecalThing",0,0,0,4);
		NSTF C 0 A_RailAttack(200,2,2,none,"FF 00 00");
		NSTF C 0 A_RailAttack(200,-2,2,none,"FF FF 00");
		NSTF C 0 A_RailAttack(200,0,-2,none,"00 FF 00");
		NSTF C 0 A_RailAttack(200,0,4,none,"00 FF 00");
		NSTF C 4;
		NSTF B 16;
		Goto Ready;
	AltFire: 
		NSTF B 0();
		NSTF C 0 A_FireCustomMissile("RailDecalThing",0,0,0,4);
		NSTF C 0 A_FireCustomMissile("PLB",5,2);
		NSTF C 0 A_FireCustomMissile("PLB",-5,2);
		NSTF C 0 A_FireCustomMissile("PLB",1,5);
		NSTF C 0 A_FireCustomMissile("PLB",1,-5);
		NSTF C 4;
		NSTF B 16;
		Goto Ready;
}
}
class PLB : actor { 
	Default {
	
	Radius 13;
	Height 8;
	Speed 50;
	Damage 250;
	Projectile;
	+RIPPER;
	+RANDOMIZE;
	RenderStyle "Add";
	Alpha 0.75;
	SeeSound "weapons/plasmaf";
	DeathSound "weapons/plasmax";
	Obituary "$OB_MPPLASMARIFLE";
	}
	States
	{
	Spawn:
		PLSS AB 6 Bright;
		Loop;
	Death:
		PLSE ABCDE 4 Bright;
		Stop;
}
}
class Curing_Cannon : "DPT.HQ-Weapon" 26342 { 
	Default {
	
	Inventory.PickupMessage "CURING CANNON";
	VisibleToPlayerclass "Healer";
	Weapon.AmmoUse1 1;
	Weapon.AmmoGive1 96;
	Weapon.AmmoType1 "Cell";
	Weapon.AmmoUse2 1;
	Weapon.AmmoType2 "Cell";
	//Weapon.UpSound "weaponSelect"
	//$Category weapons
	}
	States
	{
	Ready:
		REP4 A 0;
		REP4 A 1 A_WeaponReady();
		Loop;
	Spawn:
		PIST A -1;
		Stop;
	Fire:
		REP4 A 0 A_JumpIfTargetInLOS("AltFire");
		Goto Ready;
	AltFire:
		REP4 A 4;
		REP4 BC 4 Bright A_FireCustomMissile("HealthMissile",0,1,0,0);
		REP4 B 0 A_PlaySound("Healing");
		REP4 A 2 A_Refire();
		Goto Ready;
	Select:
		REP4 A 0 A_Raise();
		REP4 A 1 A_Raise();
		Loop;
	DeSelect:
		REP4 A 0 A_PlaySoundEx("misc/null", "Item");
		REP4 AA 1 A_Lower();
		Goto Deselect +2;
	Spawn:
		REP4 X -1;
		Stop;
}
}
class HealthMissile  : actor { 
	Default {
	
	Radius 4;
	Speed 12;
	Damage -1;
	PROJECTILE;
	+NOTIMEFREEZE;
	+MISSILE;
	Scale 0.1;
	RenderStyle "Translucent";
	Alpha 0.75;
	}
	States
	{
	Spawn: 
		HEAL A 20;
		Goto Death;
	Death:
		HEAL A 1 A_SpawnItemEx("HealthRestoring",0);
		Stop;
}
}
class HealthRestoring : PowerupGiver { 
	Default {
	
	Radius 11;
	Height 10;
	Inventory.Amount 1;
	Powerup.Duration 15;
	Inventory.PickupMessage "";
	Inventory.PickupSound "LOL";// ??? WTF? No sound here... Mda uzh... // WORKER
	Powerup.Type IronFeet;
	Powerup.Color Red 0.8;
	+Inventory.AUTOACTIVATE;
	+Inventory.ALWAYSPICKUP;
	}
	States
	{
	Spawn:
		TNT1 A 4;
		Stop;
}
}
class RepairTool : weapon 6544 { 
	Default {
	
	//$Category weapons
	Weapon.Kickback 0;
	Inventory.PickupMessage "You got the Repair Tool (Slot 0)";
	Obituary "$OB_MPCHAINSAW";
	+WEAPON.MELEEweapon;
	+NOBLOOD;
	}
	States
	{
	Ready:
		REPT A 4 A_WeaponReady();
		Loop;
	DeSelect:
		REPT A 1 A_Lower();
		Loop;
	Select:
		REPT A 1 A_Raise();
		Loop;
	Fire:
		REPT A 0 A_JumpIfTargetInLOS("AltFire");
		Goto Ready;
	AltFire:
		REPT A 4;
		REPT A 0 A_FireCustomMissile("RepairMissile");
		REPT B 0 A_PlaySound("Healing");
		REPT BC 1 Bright;
		REPT A 1;
		REPT B 0 A_ReFire();
		Goto Ready;
	Spawn:
		REPT Z 1;
		REPT Z -1;
		Stop;
}
}
class RepairMissile : actor { 
	Default {
	
	XScale 0.3;
	YScale 0.24;
	DeathSound "";
	Radius 13;
	Height 8;
	Speed 25;
	Damage (random (8, 8));
	Projectile;
	+RANDOMIZE;
	RenderStyle "Add";
	Species "VehicleSpecial";
	DamageType Repair;
	Decal "BulletChip";
	+THRUSPECIES;
	+NOBLOOD;
	+NOBLOODDECALS;
	Alpha 0.75;
	}
	States
	{
	Spawn:
		BOLT A 2 Bright;
		BOLT B 2 Bright;
		BOLT C 2 Bright;
		Loop;
	Death:
		TNT1 A 30 A_SpawnItemEx ("RepairToolRicochet", 1,0,8, 0,0,0, 0, SXF_NOCHECKPOSITION);
		Stop;
}
}
class RepairToolRicochet: BulletPuff { 
	Default {
	
	Scale .5;
	Alpha 1;
	Renderstyle "Add";
	DeathSound "fusion/hit";
	+NOINTERACTION;
	+PUFFONactorS;
	+NOGRAVITY;
	+ALWAYSPUFF;
	+CLIENTSIDEONLY;
	+NOBLOCKMAP;
	+BLOODLESSIMPACT;
	+FORCEXYBILLBOARD;
	+NOBLOOD;
	Obituary "%o ate bullet shrapnel.";
	DamageType "Shrapnel";
	Speed 0;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_SpawnItem ("BlueFlareSmall", 0);
		TNT1 A 0 A_Jump(256,"Spawn1","Spawn2","Spawn3");
	Spawn1:
		TNT1 AA 0 A_SpawnItem ("BlueFlareSmall", 0);
		SAFP A 2 Bright;
		SAFP B 2 Bright A_Quake(1,6,0,75, "");
		SAFP C 2 Bright;
		SAFP D 2 Bright;
		SAFP E 2 Bright;
		SAFP F 2 Bright;
		SAFP G 2 Bright;
		SAFP H 2 Bright;
		SAFP I 2 Bright;
		Stop;
	Spawn2:
		TNT1 AA 0 A_SpawnItem ("BlueFlareSmall", 0);
		SBFP A 2 Bright;
		SBFP B 2 Bright A_Quake(1,6,0,75, "");
		SBFP C 2 Bright;
		SBFP D 2 Bright;
		SBFP E 2 Bright;
		SBFP F 2 Bright;
		SBFP G 2 Bright;
		SBFP H 2 Bright;
		SBFP I 2 Bright;
		Stop;
	Spawn3:
		TNT1 AA 0 A_SpawnItem ("BlueFlareSmall", 0);
		SCFP A 2 Bright;
		SCFP B 2 Bright A_Quake(1,6,0,75, "");
		SCFP C 2 Bright;
		SCFP D 2 Bright;
		SCFP E 2 Bright;
		SCFP F 2 Bright;
		SCFP G 2 Bright;
		SCFP H 2 Bright;
		Stop;
}
}
class Healing_Cannon : "DPT.HQ-Weapon" 26343 { 
	Default {
	
	VisibleToPlayerclass "Healer";
	Radius 20;
	Height 20;
	Weapon.KickBack 3;
	Weapon.AmmoType1 "CELL";
	Weapon.AmmoGive1 150;
	Weapon.AmmoUse1 30;
	Weapon.AmmoType2 "CELL";
	Weapon.AmmoUse2 10;
	Weapon.UpSound "plats/pt1_mid";
	Inventory.PickupMessage "HEALING CANNON";
	//$Category weapons
	}
	States
	{
	Ready:
		CHLY A 5 A_WeaponReady();
		Loop;
	Select:
		CHLY A 0 A_Raise();
		CHLY A 1 A_Raise();
		Loop;
	DeSelect:
		CHLY A 0 A_PlaySoundEx("misc/null", "Item");
		CHLY AA 1 A_Lower();
		Goto Deselect +2;
	Fire:
		CHLY B 2 Bright;
		CHLY C 2 Bright;
		CHLY D 2 Bright;
		CHLY E 4 Bright;
		CHLY C 0 A_GiveInventory("Flash",1);
		CHLY F 8 A_FireBullets(52,52,65,30,"Hellishpuff",1);
		CHLY A 12();
		Goto Ready;
	AltFire:
		CHLY B 2 Bright;
		CHLY C 2 Bright;
		CHLY D 2 Bright;
		CHLY E 3 Bright;
		CHLY C 0 A_GiveInventory("Flash",1);
		CHLY F 5 Bright A_FireCustomMissile("WakeMissile",0,1,0,0);
		CHLY A 12();
		Goto Ready;
	Spawn:
		CHLY X -1;
		Stop;
}
}
class hellishpuff : bulletpuff { 
	Default {
	
	VSpeed 0;
	DamageType "HellishStrike";
	}
	States
	{
	Spawn:
		TNT1 A 1();
		Stop;
}
}
class WakeMissile : actor {
	Default {
/*actor WakeMissile 
 
	Scale 0.25
	Radius 4
	Height 4
	Speed 7
	PROJECTILE
	+FRIENDLY
	+NOGRAVITY
	+NOCLIP
	}
	States
	{
	Spawn:
		HEAL A 2 A_VileChase
		Loop
	Death:
		TNT1 A 1
		Stop
	Heal:
		TNT1 A 1
		Stop
	}
}*/
class Flash : powerupgiver { 
	Default {
	
	Inventory.MaxAmount 1;
	Powerup.Duration 14;
	Powerup.color "0f 0f 0f", 0.2;
	Powerup.type "ironfeet";
	+Inventory.AUTOACTIVATE;
	+Inventory.ALWAYSPICKUP;
	}
}
class LittleArchvile_Spawner : "DPT.HQ-Weapon" 26344 { 
	Default {
	
	Inventory.PickupMessage "LITTLE ARCHVILE SpawnER";
	VisibleToPlayerclass "Healer";
	Weapon.UpSound "GNTPOW";
	+WEAPON.NOAUTOFIRE;
	+Inventory.UNDROPPABLE;
	+FLOATBOB;
	//$Category weapons
	}
	States
	{
	Ready:
		ICHN ABCD 9 Bright A_WeaponReady();
		Loop;
	Select:
		ICHN A 0 A_Raise();
		ICHN A 1 A_Raise();
		Loop;
	DeSelect:
		ICHN A 0 A_Lower();
		ICHN A 1 A_Lower();
		Loop;
	Fire:
		ICHN E 3 Bright;
		ICHN F 3 Bright DamageThing(16);
		ICHN G 3 Bright A_FireCustomMissile("LittleTornadoDemonSpawnerModule",random(-1,1),0,0,0);
		ICHN H 3 Bright;
		ICHN I 2();
		ICHN I 1 OffSet(0,6);
		ICHN I 1 OffSet(0,12);
		ICHN I 1 OffSet(0,14);
		ICHN I 1 OffSet(0,17);
		ICHN I 1 OffSet(0,19);
		Goto Select;
	Spawn:
		BOOK A -1;
		Stop;
}
}
class TurningMissile  : actor { 
	Default {
	
	PROJECTILE;
	DamageType "Morpher";
	Speed 25;
	seesound "SORATK";
	Damage 1;
	}
	States
	{
	Spawn:
		CPFX ABCD 3 Bright;
		Loop;
	Death:
		CPFX EFGHIJKLMNO 2 Bright;
		Stop;
}
}
class ArchVile1 : archvile { //replaces archvile
	Default {
	
	Scale 0.35;
	Speed 15;
	PainChance 255;
	}
	States
	{
	Pain.Morpher:
		ARE2 A 1 A_ChangeFlag("NOPAIN",1);
		TNT1 A 60();
		ARE2 A 1 A_SpawnItemEx("LittleTornadoDemon",0);
		Stop;
	Death.Morpher:
		Goto Pain.Morpher;
}
}
class LittleTornadoDemon 14099 : actor { 
	Default {
	
	Speed 20;
	FastSpeed 40;
	Height 56;
	Radius 16;
	Health 1000;
	Scale 0.25;
	+FRIENDLY;
	+FLOORCLIP;
	+LOOKALLAROUND;
	+NOPAIN;
	RenderStyle "Translucent";
	Alpha 0.666;
	BloodColor "White";
	PainChance 0;
	MeleeDamage 6;
	}
	States
	{
	Spawn:
		ARE2 ABCDE 3 A_Look();
		Loop;
	See:
		ARE2 ABCDE 0 A_FastChase();
		ARE2 ABCDE 0 A_FastChase();
		ARE2 ABCDE 3 A_FastChase();
		Loop;
	Melee:
		ARE2 A 2 A_MeleeAttack();
		ARE2 B 2 A_MeleeAttack();
		ARE2 C 2 A_MeleeAttack();
		ARE2 D 2 A_MeleeAttack();
		ARE2 E 2 A_MeleeAttack();
		Goto See;
	XDeath:
	Death:
		ARE2 ABCDEABCDE 3 A_FadeOut(0.1);
		Stop;
}
}
class LittleTornadoDemonSpawnerModule : actor { 
	Default {
	
	PROJECTILE;
	-NOGRAVITY;
	Gravity 0.36;
	Speed 17;
	Scale 0.75;
	seesound "SORATK";
	}
	States
	{
	Spawn:
		CPFX ABCD 3 Bright;
		Loop;
	Death:
		CPFX E 0 A_SpawnItemEx("ArchVile1",0);
		CPFX EFGHIJKLMNO 2 Bright;
		Stop;
}
}
class Healthpacks : Ammo { 
	Default {
	
	Inventory.MaxAmount 20;
	+Inventory.IGNORESKILL;
	}
}
class MedikitPack : "DPT.HQ-Weapon" 26345 { 
	Default {
	
	Inventory.PickupMessage "MEDIKIT";
	VisibleToPlayerclass "Healer";
	Weapon.AmmoType1 "Medkitammo";
	Weapon.AmmoType2 "Medkitammo";
	Weapon.AmmoUse1 1;
	Scale 0.15;
	Weapon.AmmoUse2 1;
	AttackSound "knife/attack";
	Weapon.UpSound "plats/pt1_mid";
	+WEAPON.NOAUTOFIRE;
	+WEAPON.Ammo_OPTIONAL;
	//$Category weapons
	}
	States
	{
	Ready:
		AIDA A 1 A_WeaponReady();
		Loop;
	Select:
		AIDA A 0 A_Raise();
		AIDA A 1 A_Raise();
		Loop;
	DeSelect:
		AIDA A 0 A_PlaySoundEx("misc/null", "Item");
		AIDA AA 1 A_Lower();
		Goto Deselect +2;
	Fire:
		TNT1 A 3;
		TNT1 A 0 A_FireCustomMissile("MedkitSpawn",0);
		TNT1 A 3;
		Goto Ready;
	Spawn:
		MEDI A -1;
		Stop;
}
}
class Medkitammo : Ammo { 
	Default {
	
	Inventory.Amount 1;
	Inventory.MaxAmount 6;
	Ammo.BackPackAmount 1;
	Ammo.BackPackMaxAmount 6;
	}
	States
	{
	Spawn:
		MEDI A -1;
		Stop;
}
}
class SpecialMedkit : Medikit { 
	Default {
	
	Inventory.Amount 50;
	}
}
class MedkitSpawn : actor { 
	Default {
	
	Obituary "%o caught %k's medkit lol.";
	Radius 8;
	Height 8;
	Speed 15;
	Damage 10;
	Projectile;
	-NOGRAVITY;
	+PUFFONactorS;
	+RANDOMIZE;
	SeeSound "knife/attack";// WHAT? OPAT? NET SAUNDA? WTF?
	}
	States
	{
	Spawn:
		MEDI A 1;
		Loop;
	Death:
		TNT1 A 0 A_SpawnItem("SpecialMedkit");
		Stop;
}
}
// Benellus
class Magnetsaw : "DPT.HQ-Weapon" 26346 { 
	Default {
	
	+WEAPON.Meleeweapon;
	+ammo_Optional;//Stops it from switching away.
	+Alt_ammo_Optional;
	Weapon.AmmoType "Overheat";
	Weapon.AmmoType2 "Overheat";
	Weapon.Kickback 0;
	Inventory.PickupMessage "Magnetsaw!";
	Weapon.UpSound "weapons/MagnetsawUp";
	Weapon.ReadySound "weapons/MagnetsawReady";
	AttackSound "weapons/MagnetsawHit";
	//$Category weapons
	}
	States
	{
	Spawn:
		MAGS E -1;
		Stop;
	Ready:
		MAGS CD 4 A_WeaponReady();
		TNT1 A 0 A_TakeInventory("Overheat",5);//Slowly cools down when not in use.
		Loop;
	DeSelect:
		MAGS C 1 A_Lower();
		TNT1 A 0 A_TakeInventory("FireLimit",9);//Resets "timer" on alt fire.
		Loop;
	Select:
		MAGS C 1 A_Raise();
		Loop;
	Fire:
		TNT1 A 0 A_JumpIfInventory("Overheat",100,"Overheat");
		TNT1 A 0 A_Recoil(-5);//Negative recoil causes forward movement.
		TNT1 A 0 A_PlaySoundEx("weapons/MagnetsawAttack","weapon");
		MAGS AB 2 A_CustomPunch(10,1,0,"BulletPuff",64);
		TNT1 A 0 A_GiveInventory("Overheat",1);//Slowly warm up.
		TNT1 A 0 A_ReFire();
		Goto Ready;
	AltFire:
		TNT1 A 0 A_JumpIfInventory("Overheat",100,"Overheat");
		TNT1 A 0 A_JumpIfInventory("FireLimit",1,2);//Fires projectile every so often.
		TNT1 A 0 A_FireCustomMissile("MagnetSawLore");
		TNT1 A 0 A_PlaySoundEx("weapons/MagnetsawAttack","weapon");
		MAGS AB 2 A_CustomPunch(10,1,0,"BulletPuff",64);
		TNT1 A 0 A_GiveInventory("FireLimit",1);
		TNT1 A 0 A_GiveInventory("Overheat",1);
		TNT1 A 0 A_JumpIfInventory("FireLimit",4,2);//Resets "timer" after using so much.
		TNT1 A 0 A_ReFire();
		Goto Ready;
		TNT1 A 0 A_TakeInventory("FireLimit",4);
		TNT1 A 0 A_ReFire();
		Goto Ready;
	Overheat:
		MAGS CD 4 Offset(0, 50);
		TNT1 A 0 A_TakeInventory("Overheat",5);
		TNT1 A 0 A_JumpIfInventory("Overheat",1,"Overheat");
		Goto Ready;
}
}
class MagnetSawLore : LoreShot { 
	Default {
	
Translation "192:207=96:111"
	Radius 13;
	Height 8;
	Speed 50;
	Damage (1);//Won't pull at zero damage.
	Projectile;
	-NoBlockMap;
	-Shootable;
	+Reflective;
	+NoBlood;
	+NoIceDeath;
	+DontGib;
	+Painless;
	RenderStyle "Fuzzy";
	Alpha .75;
	DeathSound "weapons/plasmax";
	}
	States
	{
Spawn:
	PLSS A 1 Bright;//Stops melee attack from touching projectile on creation.
	TNT1 A 0 A_ChangeFlag("Shootable", 1);
	PLSS A 5 Bright;
	PLSS B 6 Bright;
	Goto Spawn+4;
	PLSS AB 6 Bright;
	Goto Spawn+4;
Death:
	TNT1 A 0 A_ChangeFlag("Shootable", 0);//Stops reflection during death animation.
	PLSE ABCDE 4 Bright;
	Stop;
}
}
class Overheat : Ammo { 
	Default {
 
	+IgnoreSkill
	Inventory.MaxAmount 100
	Inventory.PickupMessage "Not supposed to be picked up."
	Inventory.Icon STTPRCNT
	}
	States
	{
	Spawn:
		TNT1 A -1
		Stop
	}
}
//Used by the Magnetsaw's alt fire to better control its functions.
class FireLimit : Inventory { 
	Default {
 
	Inventory.MaxAmount 4
	}
}
class ScatterPistol : "DPT.HQ-Weapon" 26347 { 
	Default {
 
   Inventory.PickupSound "misc/w_pkup"
   Inventory.PickupMessage "You got the Scatter Pistol!"
   Weapon.AmmoType1 "Clip"
   Weapon.AmmoType2 "Clip"
   Weapon.AmmoGive 15
   Weapon.AmmoUse1 1
   Weapon.AmmoUse2 1
	//$Category weapons
	}
   States
   {
   Spawn:
      SPPP A -1
      Loop
   Ready:
      SPRP A 1 A_WeaponReady
      Loop
   DeSelect:
      SPRP A 1 A_Lower
      Loop  
   Select:
      SPRP A 1 A_Raise
      Loop 
  Fire:
      TNT1 A 0
	  TNT1 A 0 A_PlaySound("SPRPSHOT")
	  SPRP E 1 Bright 
      TNT1 A 0 A_FireCustomMissile("ScatterPShot", 0, 1, 0, 0, random(-3,3), 0)
	  TNT1 A 0 A_GunFlash
	  SPRP F 1 Bright
	  SPRP G 1
	  TNT1 A 0 A_CheckReload
	  TNT1 A 0 A_PlaySound("SPRPSHOT")
	  SPRP E 1 Bright 
	  TNT1 A 0 A_FireCustomMissile("ScatterPShot", random(-3,3), 1, 0, 0, random(-3,3), 0)
	  TNT1 A 0 A_GunFlash
	  SPRP F 1 Bright
	  SPRP G 1
	  TNT1 A 0 A_CheckReload
	  TNT1 A 0 A_PlaySound("SPRPSHOT")
	  SPRP E 1 Bright 
	  TNT1 A 0 A_FireCustomMissile("ScatterPShot", random(-2,4), 1, 0, 0, random(-3,3), 0)
	  TNT1 A 0 A_GunFlash
	  SPRP F 1 Bright
	  SPRP G 1	  
	  SPRP D 4
	  SPRP G 3
	  SPRP CBA 3
	  SPRP A 6
	  SPRP A 1 A_ReFire
      Goto Ready  	  
  AltFire:
	  TNT1 A 0
	  TNT1 A 0 A_PlaySound("SPRPSHOT")
	  SPRP E 1 Bright 
	  TNT1 A 0 A_FireCustomMissile("ScatterPShot", 0, 1, 0, 0, 0, 0)
	  TNT1 A 0 A_GunFlash
	  SPRP F 1 Bright
	  SPRP G 1
	  SPRP D 3
	  SPRP G 2
	  SPRP CBA 2
	  SPRP A 2
	  SPRP A 1 A_ReFire
      Goto Ready  
   Flash:
      TNT1 A 1 Bright A_Light1
	  TNT1 A 1 Bright A_Light0
      Stop
   }
}
class ScatterPShot : FastProjectile { 
	Default {
 
   Speed 50
   Radius 4
   Height 4
   Damage (3*random(2,4))
   Scale 0.25
   PROJECTILE
   +Bright
   RenderStyle "Add"
   MissileHeight 8
   MissileType "ScatterPShotTrail"
   SeeSound "NDLSHOT"
	}
   States
   {
   Spawn:
      SPPJ A 1
	  TNT1 A 0 A_SpawnItemEx("ScatterShotGlow", 0, 0, 0, 0, 0, 0, 0, 32)
      Loop
   Death:
      TNT1 A 0
	  TNT1 A 0 A_PlaySound("SPRPIMPT")
	  TNT1 A 0 A_SetScale(0.20)
	  TNT1 AAAA 0 A_CustomMissile("ScatterSpark",0,0,random(0,360),CMF_AIMDIRECTION,random(0,12))
      SPRI ABCDE 1
      Stop
   }
}
class ScatterSpark : actor { 
	Default {
 
   Speed 15
   Radius 4
   Height 4
   Scale 0.15
   Gravity 0.3
   PROJECTILE
   +Bright
   -NOGRAVITY
   +DROPOFF 
classHRUactorS : actor { 
	Default {
		RenderStyle "Add";
	}
	States
	{
		Spawn:
			SPPJ A 1;
			TNT1 A 0 A_SpawnItemEx("ScatterShotGlowSmall", 0, 0, 0, 0, 0, 0, 0, 32);
			TNT1 A 0 A_SpawnItemEx("ScatterShotXDMG", 0, 0, 0, 0, 0, 0, 0, 32);
			Loop;
		Death:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("SPRPIMPT",5,0.12,0);
			TNT1 A 0 A_SetScale(0.08);
			SPRI ABCDE 1;
			Stop;
	}
}
class ScatterShotXDMG : actor { 
	Default {
		
		Speed 2;
		Radius 6;
		Height 7;
		Damage (1*random(1,2));
		PROJECTILE;
		+NODAMAGETHRUST;
	}
	States
	{
		Spawn:
			TNT1 A 1;
			Stop;
		Death:
			TNT1 A 0;
			Stop;
	}
}
//AESTHETIC EFFECTS
class ScatterShotGlow : actor { 
	Default {
		
		+NOINTERACTION;
		+THRUactorS;
		RenderStyle "Add";
		Alpha 0.4;
		Scale 0.25;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			SPGL A 1 Bright;
			Stop;
	}
}
class ScatterShotGlowSmall : ScatterShotGlow { 
	Default {
		
		Scale 0.1;
	}
}
class ScatterPShotTrail : actor { 
	Default {
		
		Radius 6;
		Height 8;
		Scale 0.06;
		RenderStyle "Add";
		Alpha 0.4;
		+NOINTERACTION;
		+THRUactorS;
	}
	States
	{
		Spawn:
			NDTL A 1 A_FadeOut (0.1);
			Loop;
	}
}
class Shredder : "DPT.HQ-Weapon" 26348 { 
	Default {
		
		//$Category weapons
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "Cell";
		Inventory.PickupMessage "SHREDDER";
		Obituary "%o shredded by %k's Shredder shotgun.";
	}
	States
	{
		Ready:
			7HRD A 0 A_PlaySound ("SHRDREDY");
			7HRD A 1 A_WeaponReady();
			7HRD A 1 A_WeaponReady();
			7HRD A 1 A_WeaponReady();
			7HRD B 1 A_WeaponReady();
			7HRD B 1 A_WeaponReady();
			7HRD B 1 A_WeaponReady();
			7HRD C 1 A_WeaponReady();
			7HRD C 1 A_WeaponReady();
			7HRD C 1 A_WeaponReady();
			7HRD D 1 A_WeaponReady();
			7HRD D 1 A_WeaponReady();
			7HRD D 1 A_WeaponReady();
			Loop;
		DeSelect:
			7HRD A 1 A_Lower();
			Loop;
		Select:
			7HRD A 1 A_Raise();
			Loop;
		Fire:
			7HRD A 1;
			SHRF A 0 A_FireBullets (5.6, 0, 14, 3, "PlasmaticPuff");
			SHRF A 0 A_PlaySound ("SHRDFIRE", CHAN_weapon);
			SHRF AB 7;
			7HRD D 3;
			7HRD E 4 A_PlaySound("SHRDRELD");
			7HRD F 2;
			7HRD E 4;
			7HRD D 3;
			7HRD A 7 A_ReFire();
			Goto Ready;
		Spawn:
			7HRD Z -1;
			Stop;
	}
}
class PlasmaticPuff : BulletPuff { 
	Default {
		
		Scale 0.35;
		RenderStyle "Add";
		Alpha 0.75;
	}
	States
	{
		// Intentional fall-through
		//Melee:
		Spawn:
			PLSE ABCDE 4 Bright;
			Stop;
	}
}
/*
actor Quadvolgue : "DPT.HQ-Weapon" 24530
{
	//$Category weapons/
	//$Title Quadvolgue/
	//$Sprite SSHGX0/
	Inventory.PickupMessage "You've got the ''Quadvolgue'' shotgun! Sometimes you need way more gun. (3)"
	Obituary "%o was blown away and smeared on wall by %k's quad shotgun."
	Weapon.UpSound "Quadshot/Up"
	Weapon.AmmoType "Shell"
	Weapon.AmmoUse 4
	Weapon.AmmoGive 16
	Weapon.AmmoType2 "Shell"
	Weapon.AmmoUse2 16
	Weapon.Kickback 200
	+NOALERT
	States
	{
	Spawn: 
		SSHG X -1
		Stop
	Ready:
		SSHG A 1 A_WeaponReady
		TNT1 A 0 A_JumpIfInventory("RO_GotoReload", 1, "Reload")
		Loop
	Select:
		SSHG A 1 A_Raise
		SSHG A 0 A_Raise
		Loop
	DeSelect:
		SSHG A 0 A_ZoomFactor(1)
		SSHG A 1 A_Lower
		SSHG A 0 A_Lower
		Loop
	Fire:
		SSHG F 0 Bright A_GunFlash
		SSHG F 0 Bright A_AlertMonsters
		SSHG F 0 Bright A_JumpIfInventory("QuadshotRecoilMode",1,"SupressedRecoilFire")
		SSHG F 0 Bright A_ChangeVelocity (Cos(Pitch) * -29, 0, Sin(Pitch) * 29,CVF_RELATIVE)
		SSHG F 0 Bright A_Quake(6,12,0,32,none)
		Goto ToastyOnSides
	SupressedRecoilFire:
		SSHG F 0 Bright A_ChangeVelocity (Cos(Pitch) * -3, 0, Sin(Pitch) * 3,CVF_RELATIVE)
		SSHG F 0 Bright A_Quake(2,6,0,32,none)
	ToastyOnSides:
		SSHG F 0 Bright A_PlaySound("Quadshot/Fire",1,0.6)
		SSHG F 0 Bright A_GiveInventory("ErasusCasing",4)
		SSHG F 0 Bright A_JumpIfInventory("QuadUpgrade",1,"QuadFire")
		SSHG F 0 Bright A_FireBullets(12.5, 3.75, 60, 40, "ErasusPuff")
		Goto SweetButtercheesusOMine
	QuadFire:
		SSHG A 0 A_SetBlend("Blue",0.05,16)
		SSHG A 0 A_PlaySoundEx("weapons/QuadShot","Auto")
		SSHG A 0 A_FireBullets(12.5, 3.75, 60, 80, "QuadPuff")
	SweetButtercheesusOMine:	
		//SSHG F 0 Bright A_FireCustomMissile("PointBlankBlast",0,0,0,0)/
		SSHG F 0 Bright A_SetAngle(Angle-6)
		SSHG F 0 Bright A_SetPitch(Pitch-4)
		SSHG F 1 Bright A_ZoomFactor(0.95)
		SSHG F 0 Bright A_SetAngle(Angle-3)
		SSHG F 0 Bright A_SetPitch(Pitch-2)
		SSHF B 1 A_ZoomFactor(0.91)
		SSHG F 0 Bright A_SetAngle(Angle-3)
		SSHG F 0 Bright A_SetPitch(Pitch-2)
		SSHF C 1 A_ZoomFactor(0.85)
		SSHG F 0 Bright A_SetAngle(Angle-3)
		SSHG F 0 Bright A_SetPitch(Pitch-2)
		SSHF D 1 A_ZoomFactor(0.82)
		SSHG F 0 Bright A_SetAngle(Angle-1.5)
		SSHG F 0 Bright A_SetPitch(Pitch-1)
		SSHF E 1 A_ZoomFactor(0.8)
		SSHG F 0 Bright A_SetAngle(Angle-1.5)
		SSHG F 0 Bright A_SetPitch(Pitch-1)
		SSHF F 1 A_ZoomFactor(0.82)
		SSHG F 0 Bright A_SetAngle(Angle-1.5)
		SSHG F 0 Bright A_SetPitch(Pitch-1)
		SSHF G 1 A_ZoomFactor(0.84)
		SSHG F 0 Bright A_SetAngle(Angle-1.5)
		SSHG F 0 Bright A_SetPitch(Pitch-1)
		SSHF H 1 A_ZoomFactor(0.87)
		SSHG F 0 Bright A_SetAngle(Angle-0.75)
		SSHG F 0 Bright A_SetPitch(Pitch-0.5)
		SSHF I 1 A_ZoomFactor(0.9)
		SSHG F 0 Bright A_SetAngle(Angle-0.75)
		SSHG F 0 Bright A_SetPitch(Pitch-0.5)
		SSHF J 1 A_ZoomFactor(0.92)
		SSHG F 0 Bright A_SetAngle(Angle-0.375)
		SSHG F 0 Bright A_SetPitch(Pitch-0.25)
		SSHF K 1 A_ZoomFactor(0.94)
		SSHF L 1 A_ZoomFactor(0.96)
		SSHF M 1 A_ZoomFactor(0.97)
		SSHF N 1 A_ZoomFactor(0.98)
		SSHG A 1 A_ZoomFactor(0.99)
		SSHG A 1 A_ZoomFactor(1)
		SSHG A 1 A_CheckReload 
		SSHN ABDEG 1
		SSHO ABDEIK 1
		SSHO M 1 A_PlaySound("Quadshot/Open",5,0.7)
		SSHO NOQRTUWX 1
		SSHL A 3
		SSHL BCDE 1
		SSHL F 1 A_PlaySound("Quadshot/Load",6,0.6)
		SSHL GHIJ 1
		SSHL K 2
		SSHL LMNO 1
		SSHL P 1 A_PlaySound("Quadshot/Load",5,0.6)
		SSHL QRSTU 1
		SSHL V 2
		SSHC ABDE 1
		SSHO R 0 A_PlaySound("Quadshot/Close",6,0.7)
		SSHO RQONKI 1
		SSHN GFDCB 1
		SSHG A 2
		SSHG A 3 A_ReFire
		Goto Ready
	AltFire:
		SSHN ABCDEFG 1
		SSHO ABCDEFGHIJKLMNOPQR 1
		TNT1 A 15
		TNT1 A 0 A_PlaySound("Quadshot/Deploy",5,0.65)
		SSH4 MLKJIHGFEDCB 1
		SSH4 A 15
		SSH4 A 0 A_ReFire
		Goto UnleashTheRobogopher
	AltHold:
		SSH4 A 5 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		SSH4 A 0 A_ReFire
	UnleashTheRobogopher:
		SSF4 A 2 Bright
		SSF4 A 0 A_GunFlash
		SSF4 A 0 A_AlertMonsters
		SSF4 A 0 A_JumpIfInventory("QuadshotRecoilMode",1,"SupressedRecoilAltFire")
		SSF4 A 0 A_ChangeVelocity (Cos(Pitch) * -116, 0, Sin(Pitch) * 116,CVF_RELATIVE)
		SSF4 A 0  A_Quake(9,18,0,64,none)
		Goto HolyDoodooEarthquake
	SupressedRecoilAltFire:
		SSF4 A 0 A_ChangeVelocity (Cos(Pitch) * -12, 0, Sin(Pitch) * 12,CVF_RELATIVE)
		SSF4 A 0  A_Quake(3,6,0,18,none)
	HolyDoodooEarthquake:
		SSF4 A 0 A_PlaySound("Quadshot/Fire",1,1.0)
		SSF4 A 0 A_PlaySound("Quadshot/Alt",6,1.0)
		SSF4 A 0 A_GiveInventory("ErasusCasing",16)
		//SSF4 A 0 A_FireCustomMissile("PointBlankSuperDuperHiperBlast",0,0,0,0)/
		SSF4 A 0 A_JumpIfInventory("QuadUpgrade",1,"QuadAltFire")
		SSF4 A 0 A_FireBullets(25, 7.5, 240, 40, "ErasusPuff")
		Goto LoadeeHuhOnAPogostick
	QuadAltFire:
		SSHG A 0 A_SetBlend("Blue",0.05,16)
		SSHG A 0 A_PlaySoundEx("weapons/QuadShot","Auto")
		SSHG A 0 A_FireBullets(25, 7.5, 240, 80, "QuadPuff")
	LoadeeHuhOnAPogostick:
		SSH4 B 1 A_ZoomFactor(0.9)
		SSH4 B 0 A_SetPitch(Pitch-6)
		SSH4 D 1 A_ZoomFactor(0.8)
		SSH4 D 0 A_SetPitch(Pitch-5)
		SSH4 F 1 A_ZoomFactor(0.7)
		SSH4 F 0 A_SetPitch(Pitch-4)
		SSH4 H 1 A_ZoomFactor(0.71)
		SSH4 H 0 A_SetPitch(Pitch-1)
		SSH4 J 1 A_ZoomFactor(0.72)
		SSH4 H 0 A_SetPitch(Pitch-0.5)
		SSH4 L 1 A_ZoomFactor(0.73)
		SSH4 M 1 A_ZoomFactor(0.74)
		TNT1 A 1
		TNT1 A 1 A_ZoomFactor(0.75)
		TNT1 A 1 A_ZoomFactor(0.775)
		TNT1 A 1 A_ZoomFactor(0.8)
		TNT1 A 1 A_ZoomFactor(0.825)
		TNT1 A 1 A_ZoomFactor(0.85)
		TNT1 A 1 A_ZoomFactor(0.875)
		SSHO R 1 A_ZoomFactor(0.885)
		SSHO Q 1 A_ZoomFactor(0.895)
		SSHO P 1 A_ZoomFactor(0.9)
		SSHO O 1 A_ZoomFactor(0.91)
		SSHO N 1 A_ZoomFactor(0.92)
		SSHO M 1 A_ZoomFactor(0.93)
		SSHO L 1 A_ZoomFactor(0.94)
		SSHO K 1 A_ZoomFactor(0.95)
		SSHO J 1 A_ZoomFactor(0.96)
		SSHO I 1 A_ZoomFactor(0.97)
		SSHO H 1 A_ZoomFactor(0.98)
		SSHO G 1 A_ZoomFactor(0.99)
		SSHO F 1 A_ZoomFactor(1	)
		SSHO EDCBA 1
		SSHN GFEDCBA 1
		SSHG A 4 A_CheckReload 
		Goto Ready
	Reload:
		SSHG A 0 A_JumpIfInventory("QuadshotRecoilMode",1,"UnReload")
		SSHG A 0 A_Print("Recoil launch suppresion on.")
		SSHG A 0 A_GiveInventory("QuadshotRecoilMode",1)
		SSHG A 0 A_PlaySound("Quadshot/Mode",5,0.8)
		SSHG A 4
		SSHG A 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		SSHG A 4 A_WeaponReady(WRF_NOSWITCH)
		Goto Ready
	UnReload:
		SSHG A 0 A_Print("Recoil launch suppresion off.")
		SSHG A 0 A_TakeInventory("QuadshotRecoilMode",1)
		SSHG A 0 A_PlaySound("Quadshot/Mode",5,0.8)
		SSHG A 4
		SSHG A 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		SSHG A 4 A_WeaponReady(WRF_NOSWITCH)
		Goto Ready
	Flash:
		TNT1 A 3 Bright
		TNT1 A 2 Bright
		Goto LightDone 
	}
}
*/
class ErasusPuff : BulletPuff { 
	Default {
	}
}
class RO_GotoReload : Inventory {Inventory.MaxAmount 1} { 
	Default {
	}
}
class RO_GotoZoom : Inventory {Inventory.MaxAmount 1} { 
	Default {
	}
}
class QuadshotRecoilMode : Inventory { Inventory.MaxAmount 1 } { 
	Default {
	actor PointBlankBlast;
	
	Radius 11;
	Height 8;
	Speed 60;
	Damage 3000;
	Projectile;
	Obituary "%o was mutilated by %k's quad shotgun's point-blank shot.";
	}
  States
  {
	Spawn:
		TNT1 A 2;
		Stop;
	Death:
		Stop;
}
}
class PointBlankSuperDuperHiperBlast : actor { 
	Default {
	
	Radius 11;
	Height 8;
	Speed 60;
	Damage 12000;
	Projectile;
	Obituary "%o was more than mutilated by %k's 4x4 shotgun's point-blank shot.";
	}
  States
  {
	Spawn:
		TNT1 A 2;
		Stop;
	Death:
		Stop;
}
}
class Riflecheck : Inventory  { 
	Default {
	
	Inventory.MaxAmount 30;
	Inventory.Amount 1;
	}
}
class Reload : Inventory  { 
	Default {
	
	Inventory.MaxAmount 1;
	Inventory.Amount 1;
	}
}
class Spread : Ammo { 
	Default {
	
	Inventory.MaxAmount 5;
	Ammo.BackPackMaxAmount 5;
	}
}
class ammoCount : Ammo { 
	Default {
	
	Inventory.Amount 20;
	Inventory.MaxAmount 300;
	Ammo.BackPackAmount 20;
	Ammo.BackPackMaxAmount 600;
	+COUNTITEM;
	+Inventory.AUTOACTIVATE;
	+Inventory.ALWAYSPICKUP;
	+Inventory.FANCYPICKUPSOUND;
	}
	States
	{
	Spawn:
		CLIP A -1;
		Loop;
}
}
class FireFlash : actor { 
	Default {
	
	Speed 0;
	Projectile;
	+RANDOMIZE;
	+NOCLIP;
	+CLIENTSIDEONLY;
	RenderStyle "Add";
	Alpha 1;
	scale 0.25;
	}
	States
	{
	Spawn:
		FLSH ABC 2 Bright;
		Stop;
}
}
class SmokeSpawnerM16 : actor { 
	Default {
	
	Speed 20;
	+MISSILE;
	+NOBLOCKMAP;
	+NOGRAVITY;
	+DROPOFF;
	+NOTELEPORT;
	+FORCEXYBILLBOARD;
	+NOTDMATCH;
	+CLIENTSIDEONLY;
	+GHOST;
	Radius 1;
	Height 1;
	Mass 1;
	Damage 0;
	+NOCLIP;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		TNT1 A 0 Thing_ChangeTID(0,390);
		TNT1 A 0 A_SpawnItem("FireFlash",0,0);
		Stop;
}
}
class NoGibPuff : BulletPuff { //replaces BulletPuff
	Default {
	
	+NOEXTREMEDEATH;
	}
}
class M16 : "DPT.HQ-Weapon" { 
	Default {
	
	Obituary "%k > M16 > %o";
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 30;
	Weapon.AmmoType1 "ammoCount";
	Weapon.UpSound "misc/w_pkup";
	}
	States
	{
	Ready:
		ASSU A 1 A_WeaponReady();
		ASSU A 0 A_TakeInventory("Spread",1);
		ASSU A 0 A_JumpIfInventory("Reload",1,"Reload");
		Goto Ready;
	DeSelect:
		ASSU A 0 A_Lower();
		ASSU A 1 A_Lower();
		Loop;
	Select:
		ASSU A 0 A_Raise();
		ASSU A 1 A_Raise();
		Loop;
	Fire:
		ASSU A 0 A_JumpIfInventory("Riflecheck",1,"Firing");
		Goto Reload;
	Firing:
		ASSU A 0 A_TakeInventory("Riflecheck",1);
		ASSU A 0 A_GiveInventory("Spread",1);
		ASSU A 0 A_JumpIfInventory("Spread",5,"Fire5");
		ASSU A 0 A_JumpIfInventory("Spread",4,"Fire4");
		ASSU A 0 A_JumpIfInventory("Spread",3,"Fire3");
		ASSU A 0 A_JumpIfInventory("Spread",2,"Fire2");
		ASSU A 0 A_JumpIfInventory("Spread",1,"Fire1");
		Goto Fire;
	Fire5:
		ASSU A 0 A_FireBullets (10, 10, -1, 13, "NoGibPuff");
		ASSU A 0 A_SetPitch(pitch-4.5);
		Goto PostFire;
	Fire4:
		ASSU A 0 A_FireBullets (8, 8, -1, 13, "NoGibPuff");
		ASSU A 0 A_SetPitch(pitch-4.5);
		Goto PostFire;
	Fire3:
		ASSU A 0 A_FireBullets (4, 4, -1, 13, "NoGibPuff");
		ASSU A 0 A_SetPitch(pitch-4.5);
		Goto PostFire;
	Fire2:
		ASSU A 0 A_FireBullets (2, 2, -1, 13, "NoGibPuff");
		ASSU A 0 A_SetPitch(pitch-4.5);
		Goto PostFire;
	Fire1:
		ASSU A 0 A_FireBullets (1, 1, -1, 13, "NoGibPuff");
		ASSU A 0 A_SetPitch(pitch-4.5);
		Goto PostFire;
	PostFire:
		ASSU A 0 A_PlayweaponSound("m16/Fire");
		ASSU A 0 A_FireCustomMissile("SmokeSpawnerM16",0,0,6,-3);
		ASSU BB 1 A_SetPitch(pitch+1);
		ASSU CC 1 A_SetPitch(pitch+1);
		ASSU B 2 A_ReFire();
		Goto Ready;
	Reload:
		ASSU EFG 2;
		ASSU A 0 A_PlaySound("m16/out");
		ASSU HIJ 2;
		ASSU J 25;
		ASSU A 0 A_PlaySound("m16/in");
		ASSU IHGFEAKL 3;
		ASSU A 0 A_PlaySound("m16/cock");
		ASSU MNONMLK 3;
		ASSU A 0 A_GiveInventory("Riflecheck",30);
		ASSU A 0 A_TakeInventory("Reload",1);
		Goto Ready;
}
}
class Deviation : "DPT.HQ-Weapon" 26349 { 
	Default {
	
	Inventory.PickupSound "misc/w_pkup";
	Inventory.PickupMessage "You got the ''Deviation'' Dumb Missile Launcher!";
	Weapon.UpSound "weapons/gemiup";
	Weapon.AmmoType "Rocketammo";
	Weapon.AmmoGive 6;
	Weapon.AmmoUse 1;
	Scale 0.85;
	//$Category weapons
	}
   States
   {
	Spawn:
		RNPR A -1;
		Loop;
	Ready: 
		RPRL A 1 A_WeaponReady();
		Loop;
	DeSelect: 
		RPRL A 1 A_Lower();
		Loop;
	Select: 
		RPRL A 1 A_Raise();
		Loop;
	Fire:
		RPRL A 0 A_PlaySoundEx("weapons/gemifire","Auto");
		RPRL A 0 A_GunFlash();
		RPRL BC 1 Bright;
		RPRL C 0 A_FireCustomMissile("DumbRocket",random(3,-6),1,15,random(5,-5));
		RPRL DEF 1 Bright;
		RPRL A 3;
		Goto Ready;
	Flash:
		TNT1 A 5 A_Light2();
		TNT1 A 3 A_Light1();
		TNT1 A 0 A_Light0();
		Stop;
}
}
class DumbRocket : Rocket { 
	Default {
	
	Speed 30;
	-RANDOMIZE;
	-ROCKETTRAIL;
	SeeSound "";
	}
 States
 {
	Spawn:
		TNT1 A 0 A_SeekerMissile(2,2,SMF_LOOK,128,10);
		TNT1 A 0 A_ChangeVelocity (1, frandom(-3, 3), frandom(-2, 2), 1);
		MISL A 1 Bright A_SpawnItemEx("DumbTrail", 0, random(2,-2), random(2,-2), 0, 0, 0, 0, 128, 0);
		Loop;
	Death:
		TNT1 A 0 A_Explode();
		TNT1 AAAAAAAAAA 0 Bright A_SpawnItemEx("Smoke", 0, 0, 0, random(2,-2), random(2,-2), 1+random(1,-3), 0, 128, 0);
		TNT1 AAAA 0 Bright A_SpawnItemEx("Boomy", 0, random(2,-2), random(2,-2), 0, 0, 1, 0, 128, 0);
		TNT1 A 1;
		Stop;
}
}
class Smoke : actor { 
	Default {
	
	Scale 0.5;
	Alpha 0.55;
	RenderStyle "Add";
	+NOCLIP;
	+NOGRAVITY;
	}
    States
    {
	Spawn:
		SMOK ABCDEFGHIJKLMNOPQ 1 Bright;
		Stop;
}
}
class Boomy : actor { 
	Default {
	
	Scale 1;
	Alpha 0.75;
	RenderStyle "Add";
	+NOCLIP;
	+NOGRAVITY;
	}
    States
    {
	Spawn:
		TNT1 A 0 A_Jump(255,"Spawn1","Spawn2");
	Spawn1:    
		EXP1 ABCDEFGHIJKLMNOP 1 Bright;
		Stop;
	Spawn2:    
		EXP2 ABCDEFGHIJKLMNOP 1 Bright;
		Stop;
}
}
class DumbTrail : Smoke { 
	Default {
	
	Scale 0.175;
	Alpha 0.3;
	}
}
class Karasawa : "DPT.HQ-Weapon" 26350 { 
	Default {
	
	Inventory.PickupSound "Misc/W_PkUp";
	Inventory.PickupMessage "You got the 'Karasawa' High-Density Plasma Rifle!";
	Obituary "%o was fried by %k's Karasawa!";
	Weapon.AmmoType "Cell";// KSawaCell
	Weapon.AmmoGive 15;
	Weapon.AmmoUse 1;
	Weapon.KickBack 1000;
	//$Category weapons
	}
  States
  {
	Spawn:
		KSWP A -1;
		Loop;
	Select:
		KSAW C 1 A_Raise();
		Loop;
	DeSelect:
		KSAW C 1 A_Lower();
		Loop;
	Ready:
		KSAW A 0 A_PlaySound("weapons/KarasawaIdle");
		KSAW ABCB 4 A_WeaponReady();
		Loop;
	Fire:
		KSAW A 0 A_PlayweaponSound("weapons/KarasawaFire");
		KSAW D 1 Bright A_FireCustomMissile("KsawBolt", 0, 1, 0, 0);
		KSAW E 1;
		KSAW FGH 2 Bright A_Light2();
		KSAW I 0 A_PlaySoundEx("weapons/KarasawaCharge", "SoundSlot7", 0);
		KSAW IA 4 A_Light1();
		KSAW JKLMN 4;
		KSAW A 0 A_Light0();
		KSAW N 6;
		Goto Ready;
}
}
class KSawaCell : Ammo { 
	Default {
	
	Radius 8;
	Height 8;
	Inventory.PickupMessage "Picked up a High-Density Plasma Battery";
	Inventory.Icon "KWASC0";
	Inventory.Amount 10;
	Inventory.MaxAmount 40;
	Ammo.BackPackAmount 5;
	Ammo.BackPackMaxAmount 80;
	}
  States
  {
	Spawn:
		KWAS ABCD 4;
		Loop;
}
}
// Delta-Touch & GZDoom Fix
class KSawaCellPack : Ammo { 
	Default {
	
	Radius 16;
	Height 8;
	Inventory.PickupMessage "Picked up a High-Density Plasma Pack.";
	Inventory.Icon "KWASC0";
	Inventory.Amount 20;
	Inventory.MaxAmount 40;
	Ammo.BackPackAmount 5;
	Ammo.BackPackMaxAmount 80;
	}
  States
  {
	Spawn:
		KWAL ABCD 4;
		Loop;
}
}
class KsawBolt : actor { 
	Default {
	
	Projectile;
	+Ripper;
	+BloodSplatter;
	+StrifeDamage;
	+HexenBounce;
	+CanBounceWater;
	+SkyExplode;
	BounceFactor 1.2;
	Radius 6;
	Height 4;
	Speed 80;
	Damage 12;
	Alpha 1.0;
	XScale 1.5;
	YScale 0.4;
	RenderStyle "Add";
	SeeSound "";
	DeathSound "weapons/KarasawaHit";
	}
  States
  {
	Spawn:
		KWBB A 0 Bright A_PlaySound("KsawBoltFly");
		KWBB ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCD 1 Bright A_SpawnItemEx("BoltBlur", 0, 0, 0, 1, 0, 0, 180, 128);
	Death:
		KWBD ABCDEF 2 Bright;
		Stop;
}
}
class BoltBlur : actor { 
	Default {
	
	Height 2;
	Radius 6;
	Damage 0;
	Speed 0.2;
	RenderStyle "Add";
	Alpha 0.9;
	XScale 1.3;
	YScale 0.3;
	+NoGravity;
	+DropOff;
	+NoTeleport;
	}
  States
  {
	Spawn:
		KWBR AB 2 Bright A_FadeOut(0.3);
		Loop;
}
}
class BHGen : "DPT.HQ-Weapon" 26351 { 
	Default {
	
	Weapon.AmmoUse 50;
	Weapon.AmmoGive 100;
	Weapon.AmmoType "Cell";
	+WEAPON.NOAUTOAIM;
	Inventory.PickupMessage "You got the Black Hole Generator!";
	Obituary "%o got disintegrated by %k's Black Hole Generator.";
	Tag "Black Hole Generator";
	//$Category weapons
	}
	States
	{
	Spawn:
		DCAN A -1;
		Stop;
	Select:
		DMAT A 1 A_Raise();
		Loop;
	DeSelect:
		DMAT A 1 A_Lower();
		Loop;
	Ready:
		DMAT A 1 A_WeaponReady();
		Loop;
	Fire:
		DMAT A 30 A_PlayweaponSound("DMC/Charge");
		DMAT A 10 Bright;
		TNT1 A 0 A_PlayweaponSound("DMC/Fire");
		TNT1 A 0 A_GunFlash();
		DMAT B 4 Bright A_FireCustomMissile("DMBall",0,1,0,0);
		DMAT CD 4 Bright;
		DMAT A 10;
		Goto Ready;
	Flash:
		TNT1 A 4 A_Light2();
		TNT1 A 3 A_Light1();
		TNT1 A 0 A_Light0();
		Stop;
}
}
class DMBall : actor { 
	Default {
	
	Radius 13;
	Height 8;
	Speed 17;
	Damage 10;
	Projectile;
	+RIPPER;
	+FORCEXYBILLBOARD;
	+NODAMAGETHRUST;
	+FORCERADIUSDMG;
	Renderstyle "Translucent";
	Alpha 0.75;
	DeathSound "DMBall/Impact";
	Decal BHoleDecal;
	}
	States
	{
	Spawn:
		VOIP ABCDEF 2 Bright A_SpawnItem("DMBTrail",0,0,0);
		VOIP AA 1 Bright A_RadiusThrust(-220,130);
		TNT1 A 0 A_Explode(10,90,0);
		TNT1 A 0 A_SpawnItem("DMBTrail",0,0,0);
		VOIP BB 1 Bright A_RadiusThrust(-220,150);
		TNT1 A 0 A_Explode(10,90,0);
		TNT1 A 0 A_SpawnItem("DMBTrail",0,0,0);
		VOIP CC 1 Bright A_RadiusThrust(-220,150);
		TNT1 A 0 A_Explode(10,90,0);
		TNT1 A 0 A_SpawnItem("DMBTrail",0,0,0);
		VOIP DD 1 Bright A_RadiusThrust(-220,150);
		TNT1 A 0 A_Explode(10,90,0);
		TNT1 A 0 A_SpawnItem("DMBTrail",0,0,0);
		VOIP EE 1 Bright A_RadiusThrust(-220,150);
		TNT1 A 0 A_Explode(10,90,0);
		TNT1 A 0 A_SpawnItem("DMBTrail",0,0,0);
		VOIP FF 1 Bright A_RadiusThrust(-220,150);
		TNT1 A 0 A_Explode(10,90,0);
		TNT1 A 0 A_SpawnItem("DMBTrail",0,0,0);
		Goto Spawn+6;
	Death:
		TNT1 A 0 A_SpawnItem("BlackHole",0,0,0);
		TNT1 A 0 A_SetScale(1.2);
		VORX ABCDEFGH 2 Bright;
		Stop;
}
}
class DMBTrail : actor { 
	Default {
	
	+NOGRAVITY;
	+FORCEXYBILLBOARD;
	RenderStyle "Translucent";
	Alpha 0.70;
	Scale 0.7;
	}
	States
	{
	Spawn:
		VORX ABCDEFGH 2 Bright A_FadeOut(0.1);
		Stop;
}
}
class BlackHole : actor { 
	Default {
	
	Radius 20;
	Height 20;
	Speed 0;
	Projectile;
	+NOCLIP;
	+NODAMAGETHRUST;
	+FORCEXYBILLBOARD;
	+FORCERADIUSDMG;
	RenderStyle "Translucent";
	Alpha 0.85;
	Scale 1.5;
	ReactionTime 30;
	Obituary "%o got absorved by the darkness.";
	}
	States
	{
	Spawn:
		TNT1 A 0 A_CountDown();
		TNT1 A 0 A_PlaySoundEx("BHole/Suck","Voice",1);
		BHOL A 1 Light("BHOLE_1") A_RadiusThrust(-230,250);
		TNT1 A 0 A_Explode(15,100);
		BHOL B 1 Light("BHOLE_1") A_RadiusThrust(-230,250);
		TNT1 A 0 A_Explode(15,100);
		BHOL C 1 Light("BHOLE_1") A_RadiusThrust(-230,250);
		TNT1 A 0 A_Explode(15,100);
		BHOL D 1 Light("BHOLE_1") A_RadiusThrust(-230,250);
		TNT1 A 0 A_Explode(15,100);
		BHOL E 1 Light("BHOLE_1") A_RadiusThrust(-230,250);
		TNT1 A 0 A_Explode(15,100);
		BHOL F 1 Light("BHOLE_1") A_RadiusThrust(-230,250);
		TNT1 A 0 A_Explode(15,100);
		BHOL G 1 Light("BHOLE_1") A_RadiusThrust(-230,250);
		TNT1 A 0 A_Explode(15,100);
		BHOL H 1 Light("BHOLE_1") A_RadiusThrust(-230,250);
		TNT1 A 0 A_Explode(15,100);
		BHOL I 1 Light("BHOLE_1") A_RadiusThrust(-230,250);
		TNT1 A 0 A_Explode(15,100);
		Loop;
	Death:
		TNT1 A 0 A_StopSoundEx("Voice");
		TNT1 A 0 A_SpawnItem("BHSmoke",0,0,0);
		TNT1 A 0 A_SpawnItem("BHExplosion",0,0,0);
		TNT1 A 0 A_PlaySound("BHole/Explosion");
		BHOL A 1 Light("BHOLE_2") A_FadeOut(0.08);
		BHOL B 1 Light("BHOLE_3") A_FadeOut(0.08);
		BHOL C 1 Light("BHOLE_4") A_FadeOut(0.08);
		BHOL D 1 Light("BHOLE_5") A_FadeOut(0.08);
		BHOL E 1 Light("BHOLE_6") A_FadeOut(0.08);
		BHOL F 1 Light("BHOLE_7") A_FadeOut(0.08);
		BHOL G 1 Light("BHOLE_8") A_FadeOut(0.08);
		BHOL H 1 Light("BHOLE_9") A_FadeOut(0.08);
		BHOL I 1 Light("BHOLE_10") A_FadeOut(0.08);
		Stop;
}
}
class BHSmoke : DMBTrail { 
	Default {
	
	Scale 2.2;
	+NOCLIP;
	+NOGRAVITY;
	+FORCEXYBILLBOARD;
	}
	States
	{
	Spawn:
		BHXP ABCDEFGHIJKLMNO 2 A_FadeOut(0.03);
		Stop;
}
}
class BHExplosion : actor { 
	Default {
	
	+NOCLIP;
	+NOGRAVITY;
	+FORCEXYBILLBOARD;
	}
	States
	{
	Spawn:
		DBX3 A 1 Light("BHEXP_1") Bright A_SetScale(1.2);
		TNT1 A 0 A_FadeOut(0.13);
		DBX3 A 1 Light("BHEXP_2") Bright A_SetScale(1.4);
		TNT1 A 0 A_FadeOut(0.13);
		DBX3 A 1 Light("BHEXP_3") Bright A_SetScale(1.6);
		TNT1 A 0 A_FadeOut(0.13);
		DBX3 A 1 Light("BHEXP_4") Bright A_SetScale(1.8);
		TNT1 A 0 A_FadeOut(0.13);
		DBX3 A 1 Light("BHEXP_5") Bright A_SetScale(2.0);
		TNT1 A 0 A_FadeOut(0.13);
		DBX3 A 1 Light("BHEXP_6") Bright A_SetScale(2.2);
		TNT1 A 0 A_FadeOut(0.13);
		DBX3 A 1 Light("BHEXP_7") Bright A_SetScale(2.4);
		TNT1 A 0 A_FadeOut(0.13);
		DBX3 A 1 Bright A_SetScale(2.6);
		TNT1 A 0 A_FadeOut(0.13);
		DBX3 A 1 Bright A_SetScale(2.8);
		TNT1 A 0 A_FadeOut(0.13);
		DBX3 A 1 Bright A_SetScale(3.0);
		TNT1 A 0 A_FadeOut(0.13);
		Stop;
}
}
/*
actor Benelluss : SuperShotgun
{
  Weapon.AmmoUse 0
  Weapon.AmmoGive 0
  Weapon.AmmoType "Shell"
  Weapon.AmmoUse2 0
  Weapon.AmmoType2 "Shell"
  Inventory.PickupMessage "Benellus"
  Obituary "$OB_MPSSHOTGUN"
  Tag "Benellus"
  +WEAPON.Ammo_OPTIONAL
  +WEAPON.DONTBOB
  -Weapon.NOAUTOFIRE
  decal BulletChip
  States
  {
  SSG1start:
	BEN1 BCDEAAAAAAAAAAAA 1
	Stop
  SSG2start:
	BEN2 EDCBAAAAAAAAAAAA 1
	Stop
  SSG3start:
	BEN3 EDCBAAAAAAAAAAAA 1
	Stop
  SSG4start:
	BEN4 EDCBAAAAAAAAAAAA 1
	Stop
  SSG5start:
	BEN5 EDCBAAAAAAAAAAAA 1
	Stop
  SSG6start:
	BEN6 BCDEAAAAAAAAAAAA 1
	Stop
  Ready:
	TNT1 A 0 A_GiveInventory("IAMNOTReadyHURRRR",1)
	TNT1 A 0 A_GiveInventory("Infrared2",1)
	TNT1 A 15
	TNT1 A 0 A_Overlay(-7,"SSG6start")
 	TNT1 A 0 A_Overlay(-5,"SSG5start")
 	TNT1 A 0 A_Overlay(-3,"SSG4start")
	TNT1 A 0 A_Overlay(2,"SSG3start")
	TNT1 A 0 A_Overlay(4,"SSG2start")
	TNT1 A 0 A_Overlay(6,"SSG1start")
	TNT1 A 5
	//TNT1 A 0 a_zoomfactor(1.3)/
	TNT1 A 0 A_Overlay(-7,"SSG6")
 	TNT1 A 0 A_Overlay(-5,"SSG5")
 	TNT1 A 0 A_Overlay(-3,"SSG4")
	TNT1 A 0 A_Overlay(2,"SSG3")
	TNT1 A 0 A_Overlay(4,"SSG2")
	TNT1 A 0 A_Overlay(6,"SSG1")
  ReadyMain:
    TNT1 A 0 A_JumpIf(CountInv("SSGSequence") >= 5,"Reset")
	TNT1 A 5
	TNT1 A 0 A_GiveInventory("SSGSequence",1)
	Goto ReadyMain
  Reset:
	TNT1 A 5
	TNT1 A 0 A_TakeInventory("SSGSequence",5)
	Goto ReadyMain
  SSG1:
	BEN1 A 0// A_OverlayOffset(6,32.0,0.0)/
	BEN1 A 0 A_JumpIf(CountInv("IAMNOTReadyHURRRR") <= 0, 2)
	BEN1 A 0 A_JumpIf(CountInv("SSGSequence") == 0, "SSG1Fire")
	BEN1 A 1// A_OverlayOffset(6,32.0,0.0)/
	Loop
  SSG1Fire:
    BEN1 A random(0,7)
    BEN1 A 0 A_FireBullets (20.0, 10.0, 8, 8, "BulletShotguns")
    BEN1 A 0 A_PlaySound ("weapons/sshotf", CHAN_weapon)
	BEN1 A 0 A_Overlay(7,"SSG1Gunflash")
	BEN1 ZYX 1
	BEN1 YWA 2
    Goto SSG1
  SSG1Gunflash:
	BEN1 Z 0// A_OverlayOffset(7,32.0,0.0)/
	BEN1 Z 0 A_Light1
	BEN1 Z 1 Bright
	BEN1 Z 0 A_Light0
	BEN1 YX 1
	BEN1 YWA 2
	BEN1 Y 0 A_Light0
	Stop
  SSG2:
	BEN2 A 0 A_JumpIf(CountInv("IAMNOTReadyHURRRR") <= 0, 2)
	BEN2 A 0 A_JumpIf(CountInv("SSGSequence") == 1, "SSG2Fire")
	BEN2 A 1// A_OverlayOffset(4,64.0,8.0)/
	Loop
  SSG2Fire:
    BEN2 A random(0,7)
    BEN2 A 0 A_FireBullets (20.0, 10.0, 25, 4, "BulletShotguns")
    BEN2 A 0 A_PlaySound ("weapons/sshotf", CHAN_5)
	BEN2 A 0 A_Overlay(5,"SSG2Gunflash")
	BEN2 ZYXYWA 1
    Goto SSG2
  SSG2Gunflash:
	BEN2 Z 0// A_OverlayOffset(7,32.0,0.0)/
	BEN2 Z 0 A_Light1
	BEN2 Z 1 Bright
	BEN2 Z 0 A_Light0
	BEN2 YXYWA 1 Bright
	BEN2 Y 0 A_Light0
	Stop
  SSG3:
	BEN3 A 0 A_JumpIf(CountInv("IAMNOTReadyHURRRR") <= 0, 2)
	BEN3 A 0 A_JumpIf(CountInv("SSGSequence") == 2, "SSG3Fire")
	BEN3 A 1// A_OverlayOffset(2,96.0,16.0)/
	Loop
  SSG3Fire:
    BEN3 A random(0,7)
    BEN3 A 0 A_FireBullets (20.0, 10.0, 25, 4, "BulletShotguns")
    BEN3 A 0 A_PlaySound ("weapons/sshotf", CHAN_6)
	BEN3 A 0 A_Overlay(3,"SSG3Gunflash")
	BEN3 ZYXYWA 1
    Goto SSG3
  SSG3Gunflash:
	BEN3 Z 0// A_OverlayOffset(7,32.0,0.0)/
	BEN3 Z 0 A_Light1
	BEN3 Z 1 Bright
	BEN3 Z 0 A_Light0
	BEN3 YXYWA 1 Bright
	BEN3 Y 0 A_Light0
	Stop
  SSG4:
	BEN4 A 0 A_JumpIf(CountInv("IAMNOTReadyHURRRR") <= 0, 2)
	BEN4 A 0 A_JumpIf(CountInv("SSGSequence") == 3, "SSG4Fire")
	BEN4 A 1// A_OverlayOffset(-3,-32.0,0.0)/
	Loop
  SSG4Fire:
    BEN4 A random(0,7)
    BEN4 A 0 A_FireBullets (20.0, 10.0, 25, 4, "BulletShotguns")
    BEN4 A 0 A_PlaySound ("weapons/sshotf", CHAN_weapon)
	BEN4 A 0 A_Overlay(-2,"SSG4Gunflash")
	BEN4 ZYXYWA 1
    Goto SSG4
  SSG4Gunflash:
	BEN4 Z 0// A_OverlayOffset(7,32.0,0.0)/
	BEN4 Z 0 A_Light1
	BEN4 Z 1 Bright
	BEN4 Z 0 A_Light0
	BEN4 YXYWA 1 Bright
	BEN4 Y 0 A_Light0
	Stop
  SSG5:
	BEN5 A 0 A_JumpIf(CountInv("IAMNOTReadyHURRRR") <= 0, 2)
	BEN5 A 0 A_JumpIf(CountInv("SSGSequence") == 4, "SSG5Fire")
	BEN5 A 1// A_OverlayOffset(-5,-64.0,8.0)/
	Loop
  SSG5Fire:
    BEN5 A random(0,7)
    BEN5 A 0 A_FireBullets (20.0, 10.0, 25, 4, "BulletShotguns")
    BEN5 A 0 A_PlaySound ("weapons/sshotf", CHAN_5)
	BEN5 A 0 A_Overlay(-4,"SSG5Gunflash")
	BEN5 ZYXYWA 1
    Goto SSG5
  SSG5Gunflash:
	BEN5 Z 0// A_OverlayOffset(7,32.0,0.0)/
	BEN5 Z 0 A_Light1
	BEN5 Z 1 Bright
	BEN5 Z 0 A_Light0
	BEN5 YXYWA 1 Bright
	BEN5 Y 0 A_Light0
	Stop
  SSG6:
	BEN6 A 0 A_JumpIf(CountInv("IAMNOTReadyHURRRR") <= 0, 2)
	BEN6 A 0 A_JumpIf(CountInv("SSGSequence") == 5, "SSG6Fire")
	BEN6 A 1// A_OverlayOffset(-7,-96.0,16.0)/
	Loop
  SSG6Fire:
    BEN6 A random(0,7)
    BEN6 A 0 A_FireBullets (20.0, 10.0, 25, 4, "BulletShotguns")
    BEN6 A 0 A_PlaySound ("weapons/sshotf", CHAN_6)
	BEN6 A 0 A_Overlay(-6,"SSG6Gunflash")
	BEN6 ZYX 1
	BEN6 YWA 2
    Goto SSG6
  SSG6Gunflash:
	BEN6 Z 0// A_OverlayOffset(7,32.0,0.0)/
	BEN6 Z 0 A_Light1
	BEN6 Z 1 Bright
	BEN6 Z 0 A_Light0
	BEN6 YX 1
	BEN6 YWA 2
	BEN6 Y 0 A_Light0
	Stop
  }
}
actor BulletShotguns
{
	+NOBLOCKMAP
	+NOGRAVITY
	+ALLOWPARTICLES
	+RANDOMIZE
	RenderStyle "Translucent"
	Alpha 0.5
	VSpeed 1
	Mass 5
	scale 2.0
	States
	{
	Spawn:
		PUFF A 2 Bright A_Scream
		PUFF B 2 Bright A_SpawnItemEX("shotthrowz", 0, 0, 0, random (4, 12), 0, random (4, 12), random(0, 360))
		PUFF C 2 Bright
		Stop
	}
}
actor Shotyes : Inventory { Inventory.MaxAmount 1 }
actor Shotthrowz
{
	PROJECTILE
	BounceType doom
	BounceCount 3
	-NOGRAVITY
	alpha 1
	renderstyle "Normal"
	//Gravity .125/
	DeathSound "SHOTDUM"
	Speed 8
	Damage 0
	+BLOODLESSIMPACT
	+RIPPER
	mass 50
	scale 0.35
	Radius 13
	Height 13
	States
	{
	Spawn:
		SOTG A 0 A_Jump(128,"Tranz")
		SOTG A 0 A_Jump(128,"See2")
		Goto See
	Tranz:
		TNT1 A 1 A_SpawnItemEX("Shotthrowz2", 0, 0, 0, random (4, 12), 0, random (4, 12), random(0, 360))
		Stop
	See:	
		SOTG A 0 A_Jump(128,"Tranz")
		SOTG ABCD 2
	See2:
		SOTG A 0 A_GiveInventory("Shotyes",1)
		SOTG EFGH 2
		Goto see+1
	Death:
		MISL B 1 A_JumpIfInventory("Shotyes",1,"RealDeath")
		Stop
	RealDeath:
		MISL B 5 Bright A_Scream
		MISL C 4 Bright
		MISL D 3 Bright
		Stop
	}
}
actor Shotthrowz2 : Shotthrowz
{
	BounceCount 3
	scale 0.50
	gravity .200
	Speed 6
	States
	{
	Spawn:
		SOTH A 0 A_Jump(128,"See2")
		Goto See
	See:	
		SOTH ABCD 2
	See2:
		SOTH A 0 A_GiveInventory("Shotyes",1)
		SOTH EFGH 2
		Goto See+1
	Death:
		MISL B 1 A_JumpIfInventory("Shotyes",1,"RealDeath")
		Stop
	RealDeath:
		MISL B 5 Bright A_Scream
		MISL C 4 Bright
		MISL D 3 Bright
		Stop
	}
}
*/
class MultiProjectileweapon : "DPT.HQ-Weapon" 25006 { 
	Default {
	
	Inventory.PickupMessage "You got the M6000 Multi-Projectile weapon!";
	Inventory.PickupSound "misc/w_pkup";
	Weapon.Kickback 175;
	Weapon.AmmoType "Cell";
	Weapon.AmmoGive 60;
	Weapon.AmmoUse 10;
	//$Category weapons
	}
   States
   {
	Spawn:
		MULT A -1;
		Loop;
	Ready: 
		MPWG A 1 A_WeaponReady();
		Loop;
	DeSelect: 
		MPWG A 1 A_Lower();
		Loop;
	Select: 
		MPWG A 1 A_Raise();
		Loop;
	Fire: 
		MPWG A 0 A_JumpIfInventory("ProjectileweaponCharge",2,21);
		MPWG A 0 A_JumpIfInventory("ProjectileweaponCharge",1,9);
		MPWG C 0 A_PlaySound("weapons/charge1");
		MPWG C 10 A_GiveInventory("ProjectileweaponCharge",1);
		MPWG C 0 A_Refire();
		MPWF A 0 Bright A_FireCustomMissile("MultiProjectile1",0,1,0,0);
		MPWF A 5 Bright A_Light1();
		MPWF B 5 Bright A_Light2();
		MPWG B 0 A_TakeInventory("ProjectileweaponCharge",999);
		MPWG B 5 A_Light0();
		Goto Ready;
		MPWG D 0 A_PlaySound("weapons/charge2");
		MPWG D 10 A_GiveInventory("ProjectileweaponCharge",1);
		MPWG D 0 A_Refire();
		MPWF E 0 Bright A_FireCustomMissile("MultiProjectile2",-25,1,0,0);
		MPWF E 0 Bright A_FireCustomMissile("MultiProjectile2",0,1,0,0);
		MPWF E 0 Bright A_FireCustomMissile("MultiProjectile2",25,1,0,0);
		MPWF E 4 Bright A_Light2();
		MPWF D 4 Bright A_Light2();
		MPWF C 8 Bright A_Light1();
		MPWG B 0 A_TakeInventory("ProjectileweaponCharge",999);
		MPWG B 6 A_Light0();
		Goto Ready;
		MPWG F 0 A_PlaySound("weapons/charge3");
		MPWG E 15();
		MPWG E 0 Bright A_FireCustomMissile("MultiProjectile3",0,1,0,0);
		MPWF HHHH 0 Bright A_FireBullets(4,4,2,15,"MultiPuff",1);
		MPWF H 8 Bright A_Light2();
		MPWF G 8 Bright;
		MPWF F 8 Bright A_Light1();
		MPWG B 0 A_TakeInventory("ProjectileweaponCharge",999);
		MPWG B 10 A_Light0();
		MPWG A 10;
		Goto Ready;
} 
}
class ProjectileweaponCharge : Ammo { 
	Default {
	
	Inventory.MaxAmount 3;
	Ammo.BackPackAmount 0;
	Ammo.BackPackMaxAmount 3;
	}
}
class MultiProjectile1 : PlasmaBall { 
	Default {
	
	Damage 15;
	Scale 2.0;
	ExplosionDamage 112;
	ExplosionRadius 112;
	SeeSound "weapons/mtifire1";
	}
   States
   {
	Spawn:
		APLS AB 1 Bright;
		Loop;
	Death:
		APBX A 2 Bright A_Explode();
		APBX BCDE 2 Bright;
		Stop;
}
}
class MultiProjectile2 : MultiProjectile1 { 
	Default {
	
	Damage 18;
	ExplosionDamage 64;
	ExplosionRadius 64;
	+SEEKERMISSILE;
	SeeSound "weapons/mtifire2";
	}
   States
   {
	Spawn:
		YPLS AB 1 Bright A_SeekerMissile(4,6);
		Loop;
	Death:
		YPLE A 2 Bright A_Explode();
		YPLE BCDE 2 Bright;
		Stop;
}
}
class MultiProjectile3 : BFGBall { 
	Default {
	
	Translation 2;
	ExplosionDamage 330;
	ExplosionRadius 330;
	DONTHURTSHOOTER;
	Scale 1.15;
	SeeSound "weapons/mtifire3";
	}
   States
   {
	Spawn:
		BFS1 AB 2 Bright;
		Loop;
	Death:
		BFE1 AB 3 Bright;
		BFE1 C 3 Bright A_Explode();
		BFE1 BA 3 Bright;
		RFOG ABCDEF 3 Bright;
		Stop;
}
}
// LazyPanda
class DOOM42k16SSG : "DPT.HQ-Weapon" 26237 { 
	Default {
	
	//$Category weapons
	Weapon.AmmoUse 2;
	Weapon.AmmoGive 8;
	Weapon.AmmoType "Shell";
	Inventory.PickupMessage "You got the super shotgun!";
	Obituary "%o was splattered by %k's super shotgun.";
	}
	States
	{
	Ready:
		DW4A A 1 A_WeaponReady();
		Loop;
	DeSelect:
		DW4A A 1 A_Lower();
		Loop;
	Select:
		DW4A A 1 A_Raise();
		Loop;
	Fire:
		DW4A A 2();
		DW4A B 2 A_FireShotgun2();
		DW4A C 2;
		DW4A D 2 A_CheckReload();
		DW4A E 2;
		DW4A F 2 A_OpenShotgun2();
		DW4A GHIJ 2;
		DW4A K 2 A_LoadShotgun2();
		DW4A LMN 2;
		DW4A O 2 A_CloseShotgun2();
		DW4A PQ 2;
		DW4A A 2 A_ReFire();
		Goto Ready;
	Spawn:
		WPPK D -1;
		Stop;
}
}
// MOBS
class SkulMissile : Rocket { 
	Default {
	
	speed 25;
	damage 30;
	+SEEKERMISSILE;
	-ROCKETTRAIL;
	seesound "skull/melee";
	deathsound "skull/death";
	scale 0.7;
	}
	States
	{
	Spawn:
		SKUL CD 8 Bright;
		Loop;
}
}
class DoomExplosion : actor { 
	Default {
	
	Scale 0.5;
	Radius 11;
	Height 8;
	DeathSound "weapons/rocklx";
	}
	States
	{
	Spawn:
		TNT1 A 0 A_Die();
		Stop;
	Death:
		MISL B 8 Bright;
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
}
}
class ChainGuyGun : "DPT.HQ-Weapon" { 
	Default {
	
	Obituary "%o was perforated by %k.";
	ATTACKSOUND "weapons/shotgf";
	Weapon.kickback 100;
	Weapon.AmmoUse 0;
	+WEAPON.NOALERT;
	+WEAPON.Ammo_OPTIONAL;
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Ready:
		CHGG A 1 A_WeaponReady();
		Loop;
	DeSelect:
		CHGG A 1 A_Lower();
		Loop;
	Select:
		CHGG A 1 A_Raise();
		Loop;
	Fire:
		CHGG A 0 A_PlaySound ("weapons/shotgf", CHAN_weapon);
		CHGG A 0 A_GunFlash();
		CHGG A 4 A_FireBullets(5.6, 0, 7, 5, "BulletPuff");
		CHGG B 0 A_PlaySound ("weapons/shotgf", CHAN_weapon);
		CHGG B 0 A_GunFlash("Flash2");
		CHGG B 4 A_FireBullets(5.6, 0, 7, 5, "BulletPuff");
		CHGG B 0 A_ReFire();
		Goto Ready;
	Flash:
		CHGF A 4 Bright A_Light1();
		Goto LightDone;
	Flash2:
		CHGF B 4 Bright A_Light2();
		Goto LightDone;
	Spawn:
		MGUN A -1;
		Stop;
}
}
class CacoBaller : "DPT.HQ-Weapon" { 
	Default {
	
	Obituary "%o was smitten by %k.";
	HITObituary "%o got too close to &k.";
	Weapon.kickback 60;
	attacksound "caco/pain";
	+WEAPON.NOALERT;
	+ammo_Optional;
	+Alt_ammo_Optional;
	+WEAPON.DONTBOB;
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Spawn:
		CACO A 0 Thing_Remove (0);
		Stop;
	Select:
		CACO A 1 A_Raise();
		Goto Ready;
	Ready:
		CACO A 6 A_WeaponReady();
		CACO A 0 HealThing(1);
		Loop;
	DeSelect:
		CACO A 1 A_Lower();
		Loop;
	Fire:
		CACO A 0 A_JumpIfCloser (130,"Melee");
		CACO ABC 3;
		CACO A 0 A_SetBlend ("BLUE",0.35,25);
		CACO A 0 A_FireCustomMissile ("Cacodemonball2",0,0,0,5);
		CACO C 9;
		CACO CBA 3;
		Goto Ready;
	Melee:
		CACO A 4;
		CACO B 4 A_CustomPunch (8,0,1,"FBulletPuff",80);
		CACO C 4;
		Goto Ready;
}
}
class CacodemonBall2 : actor { 
	Default {
	
	Radius 6;
	Height 8;
	Speed 22;
	Damage 12;
	RenderStyle "Add";
	seesound "caco/attack";
	deathsound "caco/shotx";
	DamageType "CacoDamage";
	PROJECTILE;
	+RANDOMIZE;
	+SEEKERMISSILE;
	+SCREENSEEKER;
	}
	States
	{
	Spawn:
		BAL2 AB 2 Bright;
		BAL2 AB 2 Bright A_SeekerMissile(30,60,SMF_PRECISE,256,10);
		BAL2 A 0 A_SpawnItem("TracerSmoke",0);
		Loop;
	Death:
		BAL2 CDE 3 Bright;
		Stop;
}
}
class DemonMouth : "DPT.HQ-Weapon" { 
	Default {
	
	Obituary "%o was bit by %k.";
	Weapon.kickback 60;
	+ammo_OPTIONAL;
	+WEAPON.NOALERT;
	+WEAPON.DONTBOB;
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Spawn:
		TNT1 A 0 Thing_Remove (0);
		Stop;
	Select:
		DMNW A 1 A_Raise();
		Goto Ready;
	Ready:
		DMNW A 3 A_WeaponReady();
		DMNW A 0 HealThing(10);
		DMNW A 0 A_JumpIfInventory ("Mskull",0,3);
		DMNW A 3 A_WeaponReady();
		DMNW A 0 A_JumpIfInventory ("Mskull",3,1);
		Loop;
		DMNW A 0 HealThing(1);
		DMNW A 0 A_SpawnItemEx ("MDemonTraceRun",-10,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		Goto Ready;
	DeSelect:
		DMNW A -1;
		Loop;
	Fire:
		DMNW A 0 A_JumpIfInventory ("Mskull",0,"AdFire");
		DMNW A 0 A_PlaySoundEx ("demon/melee","weapon");
		DMNW A 8 A_CustomPunch (15,0,0,"FBulletPuff",60);
		DMNW A 7 A_CustomPunch (15,0,0,"FBulletPuff",60);
		DMNW A 6 A_CustomPunch (15,0,0,"FBulletPuff",60);
		Goto Ready;
	AdFire:
		DMNW A 0 A_PlaySoundEx ("demon/melee","weapon");
		DMNW A 7 A_CustomPunch (15,0,0,"FBulletPuff",60);
		DMNW A 6 A_CustomPunch (15,0,0,"FBulletPuff",60);
		DMNW A 5 A_CustomPunch (15,0,0,"FBulletPuff",60);
		Goto Ready;
}
}
class MDemonTraceRun : actor { 
	Default {
	
	+NOBLOCKMAP;
	+NOGRAVITY;
	+NOTELEPORT;
	RenderStyle "Translucent";
	Alpha 0.20;
	}
	States
	{	
	Spawn:
		SARG ABCD 2;
		Stop;
}
}
class SpectreMouth : "DPT.HQ-Weapon" { 
	Default {
	
	Obituary "%o was bit by %k.";
	Weapon.kickback 60;
	+ammo_optional;
	+WEAPON.NOALERT;
	+WEAPON.DONTBOB;
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Spawn:
		TNT1 A 0 Thing_Remove (0);
		Stop;
	Select:
		DMNW A 1 A_Raise();
		Goto Ready;
	Ready:
		DMNW A 2 A_WeaponReady();
		TNT1 A 0 A_JumpIfInventory ("Mskull",0,3);
		DMNW A 1 A_WeaponReady();
		TNT1 A 0 A_JumpIfInventory ("Mskull",3,1);
		Loop;
		DMNW A 0 HealThing(1);
		DMNW A 0 A_SpawnItemEx ("MSpectreTraceRun",-20,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		Goto Ready;
	DeSelect:
		DMNW A -1;
		Loop;
	Fire:
		DMNW A 0 A_JumpIfInventory ("Mskull",0,"AdFire");
		DMNW A 0 A_PlaySoundEx ("demon/melee","weapon");
		DMNW A 8 A_CustomPunch (15,0,0,"FBulletPuff",60);
		DMNW A 7 A_CustomPunch (15,0,0,"FBulletPuff",60);
		DMNW A 6 A_CustomPunch (15,0,0,"FBulletPuff",60)();
		Goto Ready;
	AdFire:
		DMNW A 0 A_PlaySoundEx ("demon/melee","weapon");
		DMNW A 7 A_CustomPunch (15,0,0,"FBulletPuff",60);
		DMNW A 6 A_CustomPunch (15,0,0,"FBulletPuff",60);
		DMNW A 5 A_CustomPunch (15,0,0,"FBulletPuff",60)();
		Goto Ready;
}
}
class MSpectreTraceRun : actor { 
	Default {
	
	+NOBLOCKMAP;
	+NOGRAVITY;
	+NOTELEPORT;
	RenderStyle Opt"Fuzzy";
	Alpha 0.5;
	}
	States
	{	
	Spawn:
		SARG AB 2;
		Stop;
}
}
class ImpBaller : "DPT.HQ-Weapon" { 
	Default {
	
	Obituary "%o was burned by %k.";
	hitObituary "%o was slashed by %k.";
	Weapon.kickback 60;
	attacksound "imp/melee";
	Weapon.AmmoUse 0;
	+WEAPON.NOALERT;
	+WEAPON.Ammo_OPTIONAL;
	+WEAPON.CHEATNOTweapon;
	}
	States
	{
	Spawn:
		TNT1 A 0 Thing_Remove (0);
		Stop;
	Select:
		CLAW A 1 A_Raise();
		Goto Ready;
	Ready:
		CLAW A 7 A_WeaponReady();
		TNT1 A 0 A_JumpIfInventory ("Mskull",0,3);
		CLAW A 7 A_WeaponReady();
		TNT1 A 0 A_JumpIfInventory ("Mskull",3,1);
		Loop;
		TNT1 A 0 HealThing(1);
		Goto Ready;
	DeSelect:
		CLAW A 1 A_Lower();
		Loop;
	Fire:
		CLAW A 0 A_JumpIfCloser (130,"Melee");//60
		CLAW B 5 Bright;
		CLAW C 5 Bright;
		CLAW D 5 Bright A_FireCustomMissile ("PDoomImpBall",0,0,5,10);
		CLAW E 5;
		Goto Ready;
	Melee:
		CLAW A 5;
		CLAW B 6 A_CustomPunch (8,0,1,"FBulletPuff");
		CLAW E 6;
		Goto Ready;
}
}
class PDoomImpBall : DoomImpBall { 
	Default {
	
	damage 6;
	speed 30;
	DamageType "ImpBallDamage";
	}
}
class ZombieRifle : "DPT.HQ-Weapon" { 
	Default {
	
	Weapon.kickback 100;
	attacksound "weapons/pistol";
	Obituary "%o was killed by %k.";
	+NOEXTREMEDEATH;
	+WEAPON.NOALERT;
	+WEAPON.Ammo_OPTIONAL;
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Ready:
		POGN A 7 A_WeaponReady();
		POGN A 0 A_JumpIfInventory ("Mskull",0,3);
		POGN A 7 A_WeaponReady();
		POGN A 0 A_JumpIfInventory ("Mskull",3,1);
		Loop;
		POGN A 0 HealThing(1);
		Goto Ready;
	Select:
		POGN A 1 A_Raise();
		Loop;
	DeSelect:
		POGN A 1 A_Lower();
		Loop;
	Fire:
		POGN A 3 A_GunFlash();
		POGN B 3 Bright A_FireBullets (1.5,1.0,1,8,"FBulletPuff",1);
		POGN C 3 Bright;
		POGN A 0 A_Refire();
		POGN A 5;
		Goto Ready;
	Flash:
		TNT1 A 3 A_Light0();
		TNT1 A 3 A_Light1();
		TNT1 A 3 A_Light2();
		TNT1 A 0 A_Light0();
		Stop;
}
}
class ZombieShotGun : "DPT.HQ-Weapon" { 
	Default {
	
	Obituary "%o chewed on %k's boomstick.";
	attacksound "weapons/shotgf";
	Weapon.kickback 60;
	Weapon.AmmoUse 0;
	+WEAPON.NOALERT;
	+WEAPON.Ammo_OPTIONAL;
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Ready:
		STG2 A 6 A_WeaponReady();
		TNT1 A 0 A_JumpIfInventory ("Mskull",0,3);
		STG2 A 6 A_WeaponReady();
		TNT1 A 0 A_JumpIfInventory ("Mskull",3,1);
		Loop;
		TNT1 A 0 HealThing(1);
		Goto Ready;
	DeSelect: 
		STG2 A 1 A_Lower();
		Loop;
	Select:
		STG2 A 1 A_Raise();
		Goto Ready;
	Fire:
		STG2 A 0 A_FireBullets (4.5,1.3,7,5,"FBulletPuff");
		STG2 A 9 A_GunFlash();
		STG2 BC 6;
		STG2 D 3;
		STG2 CB 6;
		STG2 A 3 A_ReFire();
		Goto Ready;
	Flash:
		SHTF A 3 Bright A_Light1();
		SHTF B 3 Bright A_Light2();
		SHTF B 0 Bright A_Light0();
		Stop;
	Spawn:
		TNT1 A 1 Thing_Remove (0);
		Stop;
}
}
class MLostSoulWeap : "DPT.HQ-Weapon" { 
	Default {
	
	Obituary "%o was spooked by %k.";
	Weapon.kickback 30;
	+WEAPON.NOALERT;
	+ammo_Optional;
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Spawn:
		TNT1 A 1 Thing_Remove (0);
		Stop;
	Select:
		TNT1 A 1 A_Raise();
		Loop;
	Ready:
		TNT1 A 6 A_WeaponReady();
		TNT1 A 0 HealThing(1)();
		Loop;
	DeSelect:
		TNT1 A 1 A_Lower();
		Loop;
	Fire:
		TNT1 A 1 A_JumpIfCloser (80,"Melee");
		TNT1 A 1 A_Recoil (-5);
		TNT1 A 1 A_JumpIfCloser (80,"Melee");
		TNT1 A 1 A_Recoil (-5);
		TNT1 A 1 A_JumpIfCloser (80,"Melee");
		TNT1 A 1 A_Recoil (-5);
		TNT1 A 1 A_JumpIfCloser (80,"Melee");
		Goto Ready;
	Melee:
		TNT1 A 1 A_PlaySoundEx ("skull/melee","Body");
		TNT1 A 1 A_CustomPunch (3,0,1,"FBulletPuff");
		TNT1 A 1 A_CustomPunch (2,0,1,"FBulletPuff");
		TNT1 A 1 A_CustomPunch (1,0,1,"FBulletPuff");
		TNT1 A 16;
		Goto Ready;
}
}
class PainElementWeap : "DPT.HQ-Weapon" { 
	Default {
	
	Weapon.kickback 30;
	+WEAPON.NOALERT;
	+ammo_Optional;
	+Alt_ammo_Optional;
	+WEAPON.DONTBOB;
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Spawn:
		PEWE A 0 Thing_Remove (0);
		Stop;
	Select:
		PEWE A 1 A_Raise();
		Goto Ready;
	Ready:
		PEWE A 6 A_WeaponReady();
		PEWE A 0 HealThing(2);
		Loop;
	DeSelect:
		PEWE A 1 A_Lower();
		Loop;
	Fire:
		PEWE A 0 A_JumpIfCloser (120,"Melee");
		PEWE ABC 4 A_SetBlend ("GOLD",0.40,25);
		PEWE C 12 A_FireCustomMissile ("SoulProj",0,0,0,-20);
		PEWE CBA 4;
		Goto Ready;
	Melee:
		PEWE A 4;
		PEWE B 5 A_CustomPunch (8,0,1,"FBulletPuff");
		PEWE C 6;
		Goto Ready;
}
}
class SoulProj : actor { 
	Default {
	
	radius 15;
	height 38;
	speed 20;
	damage 8;
	renderstyle "SoulTrans";
	seesound "skull/melee";
	DeathSound "skull/death";
	DamageType "ZombiesDamage";
	PROJECTILE;
	+RANDOMIZE;
	+DONTREFLECT;
	+SKYEXPLODE;
	}
	States
	{
	Spawn:
		SKUL CD 4 Bright;
		Loop;
	Death:
		SKUL F 6 Bright A_Explode (18,128,0,0);
		SKUL G 6 Bright A_Scream();
		SKUL H 6 Bright;
		SKUL I 6 Bright A_NoBlocking();
		SKUL J 6;
		SKUL K 6;
		Stop;
}
}
class RevenantGun : "DPT.HQ-Weapon" { 
	Default {
	
	Obituary "%o couldn't evade %k fireball.";
	hitObituary "%o was punched by %k.";
	Weapon.kickback 60;
	attacksound "skeleton/melee";
	+ammo_OPTIONAL;
	+WEAPON.NOALERT;
	+WEAPON.CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	}
	States
	{
	Spawn:
		TNT1 A 0 Thing_Remove (0);
		Stop;
	Select:
		REVP A 1 A_Raise();
		Goto Ready;
	Ready:
		REVP A 8 A_WeaponReady();
		REVP A 0 HealThing(5)();
		Loop;
	DeSelect:
		REVP A 1 A_Lower();
		Loop;
	Fire:      
		REVP A 0 A_JumpIfCloser (130,"Melee");//90
		REVP A 0 A_JumpIfInventory ("PM_AltFireX",1,"AltFireX");
		REVP A 0 A_JumpIfInventory ("PM_AltFireY",1,"AltFireY");
		REVP A 0 A_JumpIfInventory ("Mskull",0,"MasterShot");
		REVP A 0 A_JumpIfInventory ("SKELCH2",1,"RightGunShot");
		REVP I 8 Bright;
		REVP K 8 Bright A_FireCustomMissile ("HomingMissile",0,0,-8,16,1);
		REVP L 8 Bright;
		REVP A 4 A_GiveInventory ("SKELCH2",1);
		Goto Ready;
	AltFireX:
		REVP I 8 Bright;
		REVP K 8 Bright A_FireCustomMissile ("PCybRocket3",0,0,-8,16,1);
		REVP L 16 Bright;
		Goto Ready;
	AltFireY:
		REVP I 8 Bright;
		REVP K 0 A_PlaySoundEx ("weapons/mgren","weapon");
		REVP K 8 Bright A_FireCustomMissile ("MRevenantGrenadePuppet",0,0,-8,16,1);
		REVP L 16 Bright;
		Goto Ready;
	RightGunShot:
		REVP M 8 Bright;
		REVP N 8 Bright A_FireCustomMissile ("HomingMissile",0,0,8,16,1);
		REVP O 8 Bright;
		REVP A 0 SetPlayerProperty (0, 0, 0);
		REVP A 4 A_TakeInventory ("SKELCH2",1);
		Goto Ready;
	MasterShot:
		REVP A 0 SetPlayerProperty (0, 1, 0);
		REVP A 0 A_GunFlash();
		REVP I 11 Bright A_TakeInventory ("SKELCH",1);
		REVP K 0 Bright A_FireCustomMissile ("HomingMissile",0,0,11,16,1);
		REVP K 11 Bright A_FireCustomMissile ("HomingMissile",0,0,-11,16,1);
		REVP L 11 Bright;
		REVP A 0 SetPlayerProperty (0, 0, 0);
		REVP A 6 A_TakeInventory ("SKELCH2",1);
		Goto Ready;
	Melee:
		REVP B 2();
		REVP C 4 A_GiveInventory ("SKELCH",1);
		REVP D 4 A_PlaySound ("SKELLPUNCH");
		REVP E 3 A_CustomPunch (12,0,0,"FBulletPuff",110);
		REVP FG 3();
		Goto Ready;
	Flash: 
		REVP M 11 Bright;
		REVP N 11 Bright;
		REVP O 11 Bright;
		Stop;
}
}
class SKELCH3 : Inventory { 
	Default {
	
	Inventory.Amount 1;
	Inventory.MaxAmount 1;
	}
	States
	{
	Spawn:
		TNT1 A -1;
		Stop;
}
}
class SKELCH2 : Inventory { 
	Default {
	
	Inventory.Amount 1;
	Inventory.MaxAmount 1;
	}
	States
	{
	Spawn:
		TNT1 A -1;
		Stop;
}
}
class SKELCH : Inventory { 
	Default {
	
	Inventory.Amount 1;
	Inventory.MaxAmount 1;
	}
	States
	{
	Spawn:
		TNT1 A -1;
		Stop;
}
}
class HomingMissile : actor { 
	Default {
	
	radius 12;
	height 8;
	speed 16;
	damage 11;
	renderstyle "Add";
	scale 1;
	seesound "skeleton/attack";
	deathsound "skeleton/tracex";
	DamageType "SkelDamage";
	PROJECTILE;
	+SEEKERMISSILE;
	+SCREENSEEKER;
	}
	States
	{
	Spawn:
		FATB AB 2 Bright A_SeekerMissile(30,60,SMF_PRECISE,256,10);//45,90 //SMF_LOOK removed
		FATB A 0 A_SpawnItem("TracerSmoke",0);
		Loop;
	Death:
		FBXP A 8 Bright;
		FBXP B 6 Bright;
		FBXP C 4 Bright;
		Stop;
}
}
class TracerSmoke : actor { 
	Default {
	
	renderstyle "Translucent";
	alpha 0.5;
	+NOBLOCKMAP;
	+NOGRAVITY;
	}
	States
	{
	Spawn:
		PUFF BCBCD 3;
		Stop;
}
}
class MRevenantGrenadePuppet : Grenade { 
	Default {
	
	Radius 8;
	Height 8;
	Speed 25;
	Damage 20;
	Projectile;
	BounceCount 9;
	Scale 1.5;
	-NOGRAVITY;
	-NOTELEPORT;
	+TELESTOMP;
	+DOOMBOUNCE;
	+DEHEXPLOSION;
	+ROCKETTRAIL;
	+EXPLODEONDEATH;
	+CANBOUNCEWATER;
	SeeSound "weapons/mgrenbounce";
	DeathSound "weapon/grenadeexplode";//weapons/rocklx
	Obituary "$OB_GRENADE";
	DamageType "RevenantGrenDamage";
	}
	States
	{
	Spawn:
		GRN2 ABCDEFGHIJK 3 ();
		Loop;
	Death:
		MISL B 8 Bright A_Explode();
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
}
}
class ArPlasmaGun : "DPT.HQ-Weapon" { 
	Default {
	
	+CHEATNOTweapon;
	//$Category weapons
	Inventory.PickupMessage "$GOTPLASMA";
	}
	States
	{
	Ready:
		PLSG A 1 A_WeaponReady();
		Loop;
	DeSelect:
		PLSG A 1 A_Lower();
		Loop;
	Select:
		PLSG A 1 A_Raise();
		Loop;
	Fire:
		PLSG A 1 A_FirePlasma();
		PLSG A 10 A_ReFire();
		Goto Ready;
	Flash:
		PLSF A 2 Bright A_Light1();
		Goto LightDone;
		PLSF B 2 Bright A_Light1();
		Goto LightDone;
	Spawn:
		PLAS A -1;
		Stop;
}
}
class Plasma : ArachnotronPlasma { 
	Default {
	
	SPEED 45;
	}
}
class BigFuckingGun9000 : "DPT.HQ-Weapon" { 
	Default {
	
	//$Category weapons
	+WEAPON.NOAUTOFIRE;
	}
	States
	{
	Ready:
		BFGG A 1 A_WeaponReady();
		Loop;
	DeSelect:
		BFGG A 1 A_Lower();
		Loop;
	Select:
		BFGG A 1 A_Raise();
		Loop;
	Fire:
		BFGG B 10 Bright A_BFGSound();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 0 A_CheckReload();
		BFGG A 0 A_FireCustomMissile("2704Ball1", random(30,-30)/4.0, 1, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_FireCustomMissile("2704Ball2", random(30,-30)/4.0, 0, 0, 0, 0, random(36,-36)/4.0);
		BFGG A 0 A_AlertMonsters();
		BFGG A 1 A_GunFlash();
		BFGG A 2 A_ReFire();
		BFGG B 18 Bright;
		Goto Ready;
	Flash:
		BFGF A 11 Bright A_Light1();
		BFGF B 6 Bright A_Light2();
		Goto LightDone;
	Spawn:
		BFUG A -1;
		Stop;
}
}
class 2704Ball1 : PlasmaBall { 
	Default {
	
	Damage 4;
	BounceType "classic";
	BounceFactor 1.0;
	Obituary "$OB_MPBFG_MBF";// "%o was burned by %k's BFG."
	}
	States
	{
	Spawn:
		PLS1 AB 6 Bright;
		Loop;
	Death:
		PLS1 CDEFG 4 Bright;
		Stop;
}
}
class 2704Ball2 : 2704Ball1 { 
	Default {
	
	}
	States
	{
	Spawn:
		PLS2 AB 6 Bright;
		Loop;
	Death:
		PLS2 CDE 4 Bright;
		Stop;
}
}
// Ovlab
class SMG : "DPT.HQ-Weapon" { 
	Default {
	
	//$Category weapons
	Scale 0.4;
	decal BulletChip;
	Inventory.PickupSound "misc/w_pkup";
	Inventory.PickupMessage "You got a SMG!!";
	Weapon.AmmoType "Clip";
	Weapon.AmmoGive 10;
	Weapon.AmmoUse 1;
	Weapon.Kickback 150;
	AttackSound "SMGFIRE";
	}
	States
	{
	Spawn:
		SMG0 A 1;
		Loop;
	Select:
		SMG1 A 1 A_RAISE();
		NULL AA 0 A_RAISE();
		Loop;
	DeSelect:
		SMG1 A 1 A_LOWER();
		NULL AA 0 A_LOWER();
		Loop;
	Ready:
		SMG1 A 1 A_WeaponReady();
		Loop;
	Fire:
		SMG1 B 1 Bright A_FireBullets(0,0,1,5,"BulletPuff",1);
		SMG1 C 1 Bright;
		SMG1 A 2;
		Goto Ready;
}
}
class DoubleSMG : "DPT.HQ-Weapon" { 
	Default {
	
	//$Category weapons
	Scale 0.4;
	decal BulletChip;
	Inventory.PickupSound "misc/w_pkup";
	Inventory.PickupMessage "You got a SMG!!";
	Weapon.AmmoType "Clip";
	Weapon.AmmoGive 10;
	Weapon.AmmoUse 1;
	Weapon.Kickback 150;
	AttackSound "SMGFIRE";
	}
	States
	{
	Spawn:
		SMG0 A 1;
		Loop;
	Select:
		SMG2 A 1 A_RAISE();
		NULL AA 0 A_RAISE();
		Loop;
	DeSelect:
		SMG2 A 1 A_LOWER();
		NULL AA 0 A_LOWER();
		Loop;
	Ready:
		SMG2 A 1 A_WeaponReady();
		Loop;
	Fire:
		SMG2 B 1 Bright A_FireBullets(0,0,1,5,"BulletPuff",1);
		SMG2 CA 1 Bright;
		SMG2 D 1 Bright A_FireBullets(0,0,1,5,"BulletPuff",1);
		SMG2 EA 1 Bright;
		Goto Ready;
}
}   
class SMGGenerator : CustomInventory 26235 { 
	Default {
	
	+FLOORCLIP;
	+AUTOACTIVATE;
	Scale 0.4;
	Inventory.MaxAmount 2;
	Inventory.PickupSound "misc/w_pkup";
	Inventory.PickupMessage "You got a SMG";
	}
	States 
	{ 
	Spawn: 
		SMG0 A -1();
		Loop;
	Pickup: 
		TNT1 A 0 A_JumpIfInventory("DoubleSMG", 1, 8);
		TNT1 A 0 A_JumpIfInventory("SMG", 1, 4);
		TNT1 A 0 A_JumpIfInventory("SMGGenerator", 2, 6);
		TNT1 A 0 A_GiveInventory("SMG", 1);
		TNT1 A 0 A_Selectweapon("SMG");
		Stop;
		TNT1 A 0 A_TakeInventory("SMG", 1);
		TNT1 A 0 A_GiveInventory("DoubleSMG", 1);
		TNT1 A 0 A_Selectweapon("DoubleSMG");
		Stop;
		TNT1 A 0 A_TakeInventory("SMGGenerator", 1);
		TNT1 A 0 A_GiveInventory("Clip", 12);
		Stop;
} 
}
class Rifle : "DPT.HQ-Weapon" 26236 { 
	Default {
	
	//$Category weapons
	Weapon.AmmoType "Rifleammo";
	Weapon.AmmoGive 10;
	Weapon.AmmoUse 1;
	Inventory.PickupMessage "You got the Rifle";
	Inventory.PickupSound "misc/w_pkup";
	Weapon.Kickback 150;
	Decal BulletChip;
	}
	States
	{
	Spawn:
		RIFL A -1;
		Loop;
	Select:
		RIFG A 1 A_Raise();
		Loop;
	DeSelect:
		RIFG A 1 A_Lower();
		Loop;
	Ready:
		RIFG A 1 A_WeaponReady();
		Loop;
	Fire:
		RIFG A 0 A_GunFlash();
		RIFG A 0 A_PlayweaponSound("weapons/RifleFire");
		RIFG A 0 A_FireBullets(0, 0, 9, 5, "BlankPuff", 0);
		RIFG A 4 A_FireBullets(0, 0, 1, 5, "BulletPuff", 1);
		RIFG BCDCB 2;
		RIFG A 3;
		Goto Ready;
	Flash:
		RIFF A 2 Bright A_Light1();
		RIFF B 2 Bright A_Light2();
		TNT1 A 0 A_Light0();
		Stop;
}
}
class Rifleammo : Ammo { 
	Default {
	
	Inventory.Amount 5;
	Inventory.MaxAmount 75;
	Ammo.BackPackAmount 5;
	Ammo.BackPackMaxAmount 150;
	Inventory.Icon RIFAB0;
	Inventory.PickupMessage "Picked up some rifle cartridges";
	Inventory.PickupSound "misc/i_pkup";
	}
	States
	{
	Spawn:
		RIFA A -1;
		Loop;
}
}
// Delta-Touch & GZDoom Fix
class RifleBox : Ammo { 
	Default {
	
	Inventory.Amount 25;
	Inventory.MaxAmount 75;
	Ammo.BackPackAmount 5;
	Ammo.BackPackMaxAmount 150;
	Inventory.Icon RIFAB0;
	Inventory.PickupMessage "Picked up a box of rifle cartridges";
	Inventory.PickupSound "misc/i_pkup";
	}
	States
	{
	Spawn:
		RIFP A -1;
		Loop;
}
}
class BlankPuff : actor { 
	Default {
	
	+NoClip;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Stop  ();
}
}
class TrollSSD : "DPT.HQ-Weapon" 26239 { 
	Default {
	
	//$Category weapons
	+CHEATNOTweapon;
	+Inventory.UNDROPPABLE;
	Inventory.PickupMessage "$GOTSHOTGUN2";
	Obituary "$OB_MPSSHOTGUN";
	}
	States
	{
	Ready:
		SHT2 A 1 A_WeaponReady();
		Loop;
	DeSelect:
		SHT2 A 1 A_Lower();
		Loop;
	Select:
		SHT2 A 1 A_Raise();
		Loop;
	Fire:
		SHT2 A 0  A_FireBullets (11.2, 7.1, 20, 5, "TrollSSD_Puff");
		SHT2 A 0 A_PlaySound ("weapons/sshotf", CHAN_weapon);
		SHT2 A 2 A_GunFlash();
		SHT2 A 0 A_ReFire();
		Goto Deselect;
	Flash:
		SHT2 I 1 Bright A_Light1();
		SHT2 J 1 Bright A_Light2();
		Goto LightDone;
	Spawn:
		SGN2 A 70;
		/*FCAN C 0 A_CustomMissile("PlasmaBallDvaPoDvestiZoechka",0,0,0,2,5)
				FCAN C 0 A_CustomMissile("PlasmaBallDvaPoDvestiZoechka",0,0,128,2,5)
				FCAN C 0 A_CustomMissile("PlasmaBallDvaPoDvestiZoechka",0,0,64,2,5)
				FCAN C 0 A_CustomMissile("PlasmaBallDvaPoDvestiZoechka",0,0,192,2,5)
				FCAN C 0 A_CustomMissile("PlasmaBallDvaPoDvestiZoechka",0,0,32,2,5)
				FCAN C 0 A_CustomMissile("PlasmaBallDvaPoDvestiZoechka",0,0,160,2,5)
				FCAN C 0 A_CustomMissile("PlasmaBallDvaPoDvestiZoechka",0,0,96,2,5)
				FCAN C 0 A_CustomMissile("PlasmaBallDvaPoDvestiZoechka",0,0,224,2,5)*/
		Loop;
}
}
class TrollSSD_Puff : BulletPuff { 
	Default {
class PlasmaBallDvaPoDvestiZoechka : PlasmaBall { 
	Default {
		
		Radius 8;
		Speed 20;
		mass 40;
		bouncecount 5;
		-NOGRAVITY;
		-LOWGRAVITY;
		+DOOMBOUNCE;
	}
}
// Oppressor1338
class STFBFG9000 : BFG9000 26256 { 
	Default {
		
		//$Category weapons
		Weapon.UpSound "weapons/bfgup";
	}
	States
	{
		Select:
			BFGG A 0 A_Raise();
			BFGG A 1 A_Raise();
			Loop;
		DeSelect:
			BFGG A 0 A_Lower();
			BFGG A 1 A_Lower();
			Loop;
		Fire:
		Hold:
			BFGG A 20 A_PlaySound("weapons/bfgf");
			BFGG B 10 Bright A_GunFlash();
			BFGG B 5 Bright A_FireCustomMissile("BFGBall");
			Goto AfterFire;
		AfterFire:
			BFGG C 0 A_PlaySound("weapons/repstm");
			BFGG CCCCC 2 A_FireCustomMissile("BFGSmoke",-60+random(-4,4),0,0,0);
			BFGG A 2 A_ReFire();
			BFGG A 0 A_ReFire();
			Goto Ready;
	}
}
class BFGSmoke : actor { 
	Default {
		
		+NOCLIP;
		+MISSILE;
		+NOGRAVITY;
		RENDERSTYLE "Add";
		ALPHA 0.7;
		Scale 0.5;
		Speed 2;
	}
	States
	{
		Spawn:
			SMK2 FABCDE 4;
			Stop;
	}
}
class Powercube : "DPT.HQ-Weapon" 26257 { 
	Default {
		
		//$Category weapons
		//$Sprite CUBXA0
		Weapon.AmmoType1 "Rocketammo";// Cubeammo
		Weapon.AmmoUse1 0;
		Weapon.AmmoGive 100;
		Weapon.AmmoType2 "Rocketammo";// Cubeammo
		Weapon.AmmoUse2 1;
		Weapon.Kickback 50;
		Weapon.UpSound "Cube/Up";
		Inventory.PickupSound "Cube/Pickup";
		Inventory.PickupMessage "Picked up the ''Powercube'', descendant of raveocalypse! Looks like an ordinary energy cell, but it definitely isn't a one! (1)";
		Obituary "%o got caught into a %k's portable lightning storm, caused by %k's ''Powercube''.";
		+WEAPON.NOAUTOFIRE;
		+ammo_OPTIONAL;
		+ALT_ammo_OPTIONAL;
		+FLOAT;
		+FLOATBOB;
	}
	States
	{
		Spawn:
			CUBX ABCDEFGH 2;
			Loop;
		Ready:
			CUBG A 1 A_WeaponReady();
			TNT1 A 0 A_JumpIfInventory("RO_GotoReload", 1, "Reload");
			Loop;
		DeSelect:
			CUBG A 0 A_StopSound(6);
			CUBG A 0 A_StopSound(5);
			CUBG A 1 A_Lower();
			CUBG A 0 A_Lower();
			Loop;
		Select:
			CUBG A 1 A_Raise();
			CUBG A 0 A_Raise();
			Loop;
		Fire:
			CUBG A 0 A_JumpIfNoammo("Ready");
			CUBG BCDEFGH 1;
			CUBG A 0 A_GiveInventory("Cubeammo",1);
			CUBG IJ 1;
			CUBG A 0 A_PlaySound("Cube/Start",5,0.6);
			CUBG A 0 A_PlaySound("Cube/Loop",6,0.8,1);
		Hold:
			CUBF A 0 A_JumpIfNoammo("SuperPootisMan2");
			CUBF A 0 A_Quake (2, 12, 0, 3, none);
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.98);
			CUBF A 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),1,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.9775);
			CUBF B 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.975);
			CUBF C 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.9725);
			CUBF D 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.975);
			CUBF E 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.9775);
			CUBF F 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_GiveInventory("Cubeammo",1);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.98);
			CUBF A 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),1,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.9775);
			CUBF B 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.975);
			CUBF C 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.9725);
			CUBF D 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.975);
			CUBF E 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_SetBlend("Green",0.05,1);
			CUBF A 0 A_Recoil(0.2);
			CUBF A 0 A_SetAngle(Angle+frandom(0.7,-0.7));
			CUBF A 0 A_SetPitch(Pitch+frandom(0.7,-0.7));
			CUBF A 0 A_ZoomFactor(0.9775);
			CUBF F 1 Bright A_FireCustomMissile("CubeLightning",0.1*random(40,-40),0,15,0,0,0.1*random(40,-40));
			CUBF A 0 A_ReFire();
			Goto SuperPootisMan;
		SuperPootisMan2:
			CUBG A 0 A_ClearReFire();
		SuperPootisMan:
			CUBF A 0 A_SetBlend("Green",0.05,10);
			CUBF A 0 A_Quake (2, 5, 0, 3, none);
			CUBG A 0 A_PlaySound("Cube/End",6,0.8);
			CUBG J 1 A_ZoomFactor(0.98);
			CUBG J 1 A_ZoomFactor(0.985);
			CUBG J 1 A_ZoomFactor(0.99);
			CUBG J 1 A_ZoomFactor(0.995);
			CUBG J 1 A_ZoomFactor(1);
			CUBG IHGFEDCBA 1;
			Goto Ready;
		AltFire:
			CUBG A 0 A_JumpIfNoammo("Ready");
			CUBG BCDEFGH 1;
			CUBG A 0 A_GiveInventory("Cubeammo",1);
			CUBG IJ 1;
			CUBG A 0 A_PlaySound("Cube/Chaccaron",5,1.0,1);
			CUBG A 0 A_PlaySound("Cube/Loop",6,0.5,1);
		AltHold:
			CUBF A 0 A_JumpIfNoammo("SupersitooPMan2");
			CUBF A 0 A_Quake (4, 6, 0, 3, none);
			CUBF A 0 A_SetBlend("Green",0.2,1);
			CUBF A 0 A_Recoil(0.4);
			CUBF A 0 A_SetAngle(Angle+frandom(1.0,-1.0));
			CUBF A 0 A_SetPitch(Pitch+frandom(1.0,-1.0));
			CUBF A 0 A_ZoomFactor(0.98);
			CUBF A 0 A_FireCustomMissile("WTFRocketRed",frandom(15.000,-15.000),1,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallRed",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketGreen",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallGreen",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketYellow",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallYellow",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketBlue",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBall",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 1 Bright;
			CUBF A 0 A_SetBlend("Yellow",0.2,1);
			CUBF A 0 A_Recoil(0.4);
			CUBF A 0 A_SetAngle(Angle+frandom(1.0,-1.0));
			CUBF A 0 A_SetPitch(Pitch+frandom(1.0,-1.0));
			CUBF A 0 A_ZoomFactor(0.9775);
			CUBF A 0 A_FireCustomMissile("WTFRocketRed",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallRed",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketGreen",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallGreen",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketYellow",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallYellow",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketBlue",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBall",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF B 1 Bright;
			CUBF A 0 A_SetBlend("Cyan",0.2,1);
			CUBF A 0 A_Recoil(0.4);
			CUBF A 0 A_SetAngle(Angle+frandom(1.0,-1.0));
			CUBF A 0 A_SetPitch(Pitch+frandom(1.0,-1.0));
			CUBF A 0 A_ZoomFactor(0.975);
			CUBF A 0 A_FireCustomMissile("WTFRocketRed",frandom(15.000,-15.000),1,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallRed",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketGreen",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallGreen",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketYellow",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallYellow",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketBlue",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBall",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF C 1 Bright;
			CUBF A 0 A_SetBlend("Orange",0.2,1);
			CUBF A 0 A_Recoil(0.4);
			CUBF A 0 A_SetAngle(Angle+frandom(1.0,-1.0));
			CUBF A 0 A_SetPitch(Pitch+frandom(1.0,-1.0));
			CUBF A 0 A_ZoomFactor(0.9725);
			CUBF A 0 A_FireCustomMissile("WTFRocketRed",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallRed",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketGreen",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallGreen",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketYellow",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallYellow",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketBlue",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBall",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF D 1 Bright;
			CUBF A 0 A_SetBlend("Blue",0.2,1);
			CUBF A 0 A_Recoil(0.4);
			CUBF A 0 A_SetAngle(Angle+frandom(1.0,-1.0));
			CUBF A 0 A_SetPitch(Pitch+frandom(1.0,-1.0));
			CUBF A 0 A_ZoomFactor(0.975);
			CUBF A 0 A_FireCustomMissile("WTFRocketRed",frandom(15.000,-15.000),1,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallRed",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketGreen",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallGreen",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketYellow",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallYellow",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketBlue",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBall",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF E 1 Bright;
			CUBF A 0 A_SetBlend("Red",0.2,1);
			CUBF A 0 A_Recoil(0.4);
			CUBF A 0 A_SetAngle(Angle+frandom(1.0,-1.0));
			CUBF A 0 A_SetPitch(Pitch+frandom(1.0,-1.0));
			CUBF A 0 A_ZoomFactor(0.9775);
			CUBF A 0 A_FireCustomMissile("WTFRocketRed",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallRed",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketGreen",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallGreen",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketYellow",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBallYellow",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFRocketBlue",frandom(15.000,-15.000),0,0,0,0,frandom(15.000,-15.000));
			CUBF A 0 A_FireCustomMissile("WTFPlasmaBall",frandom(15.000,-15.000),0,0,0,0,frandom(5.000,-15.000));
			CUBF F 1 Bright;
			CUBF A 0 A_ReFire();
			Goto SupersitooPMan;
		SupersitooPMan2:
			CUBG A 0 A_ClearReFire();
		SupersitooPMan:
			CUBF A 0 A_StopSound(5);
			CUBF A 0 A_SetBlend("Green",0.05,10);
			CUBF A 0 A_Quake (2, 5, 0, 3, none);
			CUBG A 0 A_PlaySound("Cube/End",6,0.6);
			CUBG J 1 A_ZoomFactor(0.98);
			CUBG J 1 A_ZoomFactor(0.985);
			CUBG J 1 A_ZoomFactor(0.99);
			CUBG J 1 A_ZoomFactor(0.995);
			CUBG J 1 A_ZoomFactor(1);
			CUBG IHGFEDCBA 1;
			Goto Ready;
		Reload:
			CUBG A 0 A_JumpIfInventory("ErasusCasing",100,"FuckYes");
			CUBG A 0 A_Print("You need at least 100 shell casings to activate this!");
			CUBG A 0 A_PlaySound("weapons/MegaShellNope",1);
			CUBG A 20 A_WeaponReady();
			Goto Ready;
		FuckYes:
			CUBG A 0 A_PlaySound("Cube/Power",5);
			CUBG A 0 A_TakeInventory("ErasusCasing",100);
			CUBG A 0 A_Jump(255,"Infiniteammo","Invicibility","DoubleDamage","Protection","Fear");
		Infiniteammo:
			CUBG A 0 A_Print("Temporary infinite ammo granted.");
			CUBG A 0 A_GiveInventory("CubeInfiniteammo",1);
			CUBG A 0 A_SetBlend("70 0 99",0.4,35);
			Goto Cooldown;
		Invicibility:
			CUBG A 0 A_Print("Temporary invicibility granted.");
			CUBG A 0 A_GiveInventory("CubeInvicibility",1);
			CUBG A 0 A_SetBlend("Orange",0.4,35);
			Goto Cooldown;
		DoubleDamage:
			CUBG A 0 A_Print("Temporary double damage granted.");
			CUBG A 0 A_GiveInventory("CubeDamage",1);
			CUBG A 0 A_SetBlend("Red",0.4,35);
			Goto Cooldown;
		Protection:
			CUBG A 0 A_Print("Temporary damage reduction granted.");
			CUBG A 0 A_GiveInventory("CubeProtection",1);
			CUBG A 0 A_SetBlend("Cyan",0.4,35);
			Goto Cooldown;
		Fear:
			CUBG A 0 A_Print("Temporary fear-inducing granted.");
			CUBG A 0 A_GiveInventory("CubeFear",1);
			CUBG A 0 A_SetBlend("Yellow",0.4,35);
			Goto Cooldown;
		Cooldown:
			CUBG A 35;
			Goto Ready;
	}
}
class Cubeammo : Ammo { 
	Default {
		
		Inventory.Amount 1;
		Inventory.MaxAmount 100;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 100;
		Inventory.Icon "CUBXA0";
	}
}
class CubeLightning : FastProjectile { 
	Default {
		
		Speed 50;
		Radius 11;
		Height 6;
		Damage 1;
		Renderstyle "Add";
		//ReactionTime 5
		+RIPPER;
		+CANNOTPUSH;
		+BLOODLESSIMPACT;
		DamageType Fire;
		MissileType "CubeLightningTrailSpawner";
	}
	States
	{
		Spawn:
			TNT1 A 2;
		Looplet:
			TNT1 A 0();//A_Countdown
			TNT1 A 1 A_ChangeVelocity (frandom(-22,22), frandom(-22, 22), frandom(-10, 10), 0);
			TNT1 A 1 A_ChangeVelocity (frandom(-22,22), frandom(-22, 22), frandom(-10, 10), 0);
			TNT1 A 1 A_ChangeVelocity (frandom(-22,22), frandom(-22, 22), frandom(-10, 10), 0);
			Stop;
		Ded:
			TNT1 A 1;
			Stop;
	}
}
class CubeLightningTrailSpawner : actor { 
	Default {
		
		+NOINTERACTION;
		+CLIENTSIDEONLY;
		+NOGRAVITY;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 2 A_SpawnItemEx("CubeLightningTrail",frandom(2.0,-2.0),frandom(2.0,-2.0),4+frandom(2.0,-2.0),0,0,0,0,0,0);
			Stop;
	}
}
class CubeLightningTrail : actor { 
	Default {
		
		RenderStyle "Add";
		Scale 0.07;
		Alpha 0.8;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
		+NOGRAVITY;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			CUBS ABCDE 2 Bright A_FadeOut(0.1);
		Trolololo:
			TNT1 A 0 A_SetScale(ScaleX -0.01, ScaleY -0.01);
			CUBS F 1 Bright A_FadeOut(0.08);
			Loop;
	}
}
//Alt-Fire
class WTFRocket : Rocket { 
	Default {
		
		Speed 25;
		SeeSound "weapons/rocklf2";
		DeathSound "weapons/rocklx2";
		Obituary  "%o was smeared by %k's gibberish rainbow missile wave.";
		-ROCKETTRAIL;
	}
	States
	{
		Spawn:
			MISL A 1;
			Loop;
		Death:
			MISL B 6 Bright A_Explode(100,128,0);
			MISL C 4 Bright;
			MISL D 2 Bright;
			Stop;
	}
}
class WTFPlasmaBall : PlasmaBall { 
	Default {
		
		Speed 25;
		SeeSound "weapons/plasmaf2";
		DeathSound "weapons/plasmax2";
		Obituary "%o was melted by %k's gibberish rainbow plasma ball wave.";
	}
	States
	{
		Spawn:
			PLSS AB 5 Bright;
			Loop;
		Death:
			PLSE ABCDE 3 Bright;
			Stop;
	}
}
class WTFRocketRed : WTFRocket { 
	Default {
		
Translation "64:79=176:191", "128:151=176:191"
	}
}
class WTFRocketGreen : WTFRocket { 
	Default {
 
	Translation "64:79=112:127", "128:151=112:127"
	}
}
class WTFRocketBlue : WTFRocket { 
	Default {
 
	Translation "64:79=192:207", "128:151=192:207"
	}
}
class WTFRocketYellow : WTFRocket { 
	Default {
 
	Translation "144:151=160:167", "128:135=224:231", "136:143=160:167"
	}
}
class WTFPlasmaBallRed : WTFPlasmaBall { 
	Default {
 
	Translation "192:207=176:191"
	}
}
class WTFPlasmaBallGreen : WTFPlasmaBall { 
	Default {
 
	Translation "192:207=112:127"
	}
}
class WTFPlasmaBallYellow : WTFPlasmaBall { 
	Default {
 
	Translation "192:199=224:231", "200:207=160:167"
	}
}
//Reload
class CubeInfiniteammo : PowerupGiver { 
	Default {
 
	Inventory.PickupMessage "I AM FULL OF SANDWICH, AND I AM COMING FOR YOU!"
	Powerup.Duration -30
	powerup.type "Infiniteammo"
	+Inventory.ALWAYSPICKUP
	+Inventory.AUTOACTIVATE
	+Inventory.ADDITIVETIME
	powerup.color "70 0 99" 0.03
	}
	States
	{
	Spawn:
		TNT1 A -1
		Stop
	}
}
class CubeInvicibility : PowerupGiver { 
	Default {
 
	Inventory.PickupMessage "HAHAHAHAAA!! I AM BULLETPROOOOOOF!!"
	Powerup.Duration -30
	powerup.type "Invulnerable"
	+Inventory.ALWAYSPICKUP
	+Inventory.AUTOACTIVATE
	+Inventory.ADDITIVETIME
	powerup.color Orange 0.03
	}
	States
	{
	Spawn:
		TNT1 A -1
		Stop
	}
}
class PowerCubeDamage : PowerDamage { 
	Default {
 
classgeFactor "normal", 2.0 : actor { 
	Default {
		Inventory.Icon "TNT1A0";
	}
}
class CubeDamage : PowerupGiver { 
	Default {
		
		Inventory.PickupMessage "IT'S TIME TO RUN, COWARDS!";
		Powerup.Duration -30;
		powerup.type "CubeDamage";
		+Inventory.ALWAYSPICKUP;
		+Inventory.AUTOACTIVATE;
		+Inventory.ADDITIVETIME;
		powerup.color Red 0.03;
	}
	States
	{
		Spawn:
			TNT1 A -1;
			Stop;
	}
}
class PowerCubeProtect : PowerProtection { 
	Default {
		
		DamageFactor "normal", 0.5;
		Inventory.Icon "TNT1A0";
	}
}
class CubeProtection : PowerupGiver { 
	Default {
		
		Inventory.PickupMessage "YOU ARE NO MATCH FOR MEE!!";
		Powerup.Duration -30;
		powerup.type "CubeProtect";
		+Inventory.ALWAYSPICKUP;
		+Inventory.AUTOACTIVATE;
		+Inventory.ADDITIVETIME;
		powerup.color Cyan 0.03;
	}
	States
	{
		Spawn:
			TNT1 A -1;
			Stop;
	}
}
class CubeFear : PowerupGiver { 
	Default {
		
		Inventory.PickupMessage "FEAR ME, COWAAAARDS!!";
		Powerup.Duration -30;
		powerup.type "Frightener";
		+Inventory.ALWAYSPICKUP;
		+Inventory.AUTOACTIVATE;
		+Inventory.ADDITIVETIME;
		powerup.color Yellow 0.03;
	}
	States
	{
		Spawn:
			TNT1 A -1;
			Stop;
	}
}
// ETC
class Railgun : "DPT.HQ-Weapon" 5012 { //replaces Chainsaw
	Default {
		
		Weapon.AmmoUse 10;
		Weapon.AmmoGive 40;
		Weapon.AmmoType "Cell";
		Weapon.UpSound "weapons/railup";
		Weapon.ReadySound "";
		Inventory.PickupMessage "You got the railgun!";
		Obituary "%o was railed by %k.";
		decal "RailScorchLower";
	}
	States
	{
		Ready:
			BRLG A 1 A_WeaponReady();
			Loop;
		DeSelect:
			BRLG A 1 A_Lower();
			Loop;
		Select:
			BRLG A 1 A_Raise();
			Loop;
		Fire:
			BRLG B 0 A_RailAttack ( 200, 0, 10, "00 00 FF", "FF FF FF", 0, 0);
			BRLG B 5 A_Light1();
			BRLG A 45 A_Light0();
			BRLG A 0 A_ReFire();
			Goto Ready;
		Spawn:
			BRLW A -1;
			Stop;
	}
}
class Basketball : "DPT.HQ-Weapon" 26255 { 
	Default {
		
		//$Category weapons
		Weapon.AmmoUse 1;
		Scale 0.3;
		Weapon.AmmoGive 40;
		Weapon.AmmoType "Rocketammo";
		Inventory.pickupsound "misc/i_pkup";
		Inventory.PickupMessage "You got the Basketball!";
	}
	States
	{
		Ready:
			BBAL A 1 A_WeaponReady();
			Loop;
		DeSelect:
			BBAL A 1 A_Lower();
			Loop;
		Select:
			BBAL A 1 A_Raise();
			Loop;
		Fire:
			BBAL A 1 Offset (0, 33);
			BBAL A 1 Offset (0, 39);
			BBAL A 1 Offset (0, 45);
			BBAL A 1 Offset (0, 43);
			BBAL A 1 Offset (0, 47);
			BBAL A 1 Offset (0, 49);
			BBAL A 1 Offset (0, 51);
			BBAL A 1 Offset (0, 53);
			BBAL A 1 Offset (0, 55);
			BBAL A 1 Offset (0, 57);
			BBAL A 1 Offset (0, 59);
			BBAL A 1 Offset (0, 61);
			BBAL A 20 Offset (0, 63);
			BBAL A 1 Offset (0, 53);
			BBAL A 1 Offset (0, 49);
			BBAL A 1 Offset (0, 43);
			BBAL A 1 Offset (0, 33);
			BBAL A 20 Offset (0, 125) A_FireCustomMissile("Basketball1",0,1,0,-8);
			BBAL A 1 Offset (0, 125) A_CheckReload();
			BBAL A 1 Offset (0, 112);
			BBAL A 1 Offset (0, 96);
			BBAL A 1 Offset (0, 80);
			BBAL A 1 Offset (0, 64);
			BBAL A 1 Offset (0, 48);
			BBAL A 1 Offset (0, 33);
			BBAL A 1   ();
			BBAL A 1 A_ReFire();
			Goto Ready;
		Flash:
			NULL "]" 1;
			Goto LightDone;
			Stop;
		Spawn:
			BBAL B -1;
			Stop;
	}
}
class Basketball1 : actor { 
	Default {
		
		PROJECTILE;
		+RANDOMIZE;
		-NOGRAVITY;
		+DOOMBOUNCE;
		+PUSHABLE;
		+BOUNCEONactorS;
		+CANBOUNCEWATER;
		+FLOORCLIP;
		Scale 0.3;
		+FORCEXYBILLBOARD;
		Radius 13;
		Height 8;
		Speed 30;
		Mass 1;
		Damage 60;
		reactiontime 20;
		RenderStyle "Normal";
		SeeSound "DSBBALL";
		DeathSound "DSBBALL";
		Obituary "%o caught %k's Basketball";
	}
	States
	{
		Spawn:
			BBAL BCD 4;
			BBAL A 0 A_Countdown();
			Goto Spawn+1;
		Death:
			BBAL B 1;
			Stop;
	}
}
// Zendos
class ImpalerXBow : "DPT.HQ-Weapon" 26260 { 
	Default {
		
		//$Category weapons
		Inventory.PickupMessage "Impaler Crossbow";
		Weapon.AmmoGive 15;
		Weapon.AmmoType ImpalerBolts;
		Weapon.AmmoUse 1;
		Weapon.UpSound "weapon/XBowLoad";
		Weapon.KickBack 20;
	}
	States
	{
		Spawn:
			CBOW Z -1;
			Stop;
		Select:
			CBOW E 1 A_Raise();
			Loop;
		DeSelect:
			CBOW E 1 A_Lower();
			Loop;
		Ready:
			CBOW E 0 A_JumpIfNoammo("FakeReady");
			CBOW EF 5;
		RealReady:
			CBOW A 1 A_WeaponReady();
			Loop;
		FakeReady:
			CBOW E 1 A_WeaponReady();
			Loop;
		Fire:
			CBOW B 6 A_FireCustomMissile("ImpalerMissile",0,1);
			CBOW B 0 A_Recoil(1);
			CBOW C 8 A_PlaySound("weapon/XBowLoad", CHAN_weapon);
			CBOW D 5;
			CBOW E 5 A_CheckReload();
			CBOW F 5;
			CBOW A 12;
			Goto RealReady;
	}
}
class ImpalerMissile : FastProjectile { 
	Default {
		
		PROJECTILE;
		+STRIFEDAMAGE;
		+BLOODSPLATTER;
		+NOEXTREMEDEATH;
		Radius 4;
		Height 8;
		Damage 25;
		Speed 80;
		SeeSound "weapon/XBowFire";
	}
	States
	{
		Spawn:
			ARRW A 1;
			Loop;
		Death:
		Crash:
			NLPJ B 3 A_PlaySound("weapon/XBowHit");
			NLPJ CDEFG 3;
			Stop;
		XDeath:
			TNT1 A 10 A_PlaySound("weapon/XBowSplatter");
			Stop;
	}
}
class ImpalerBolts : Ammo { 
	Default {
		
		Inventory.PickupMessage "Steel bolts";
		Inventory.Amount 10;
		Inventory.MaxAmount 40;
		Inventory.Icon "CBWAA0";
		Ammo.BackPackAmount 5;
		Ammo.BackPackMaxAmount 80;
	}
	States
	{
		Spawn:
			CBWA A -1;
			Stop;
	}
}
// Benellus weps #2
class DUMP3IA7 : DUMP3weapon { //replaces Pistol // I guess just so IDKFA and all that don't give you the vanilla pistol
	Default {
		
		/*Weapon.BobRangeX 0.65
			Weapon.BobRangeY 0.35
			Weapon.BobStyle Alpha
			Weapon.BobSpeed 2.25*/
		//Weapon.AmmoUse 0
		//Weapon.AmmoType "Clip"
		+WEAPON.NOALERT;
		+WEAPON.NOAUTOFIRE;
		+Inventory.UNDROPPABLE;
		Tag "IA-7 - [TerminusEst13]";
		Decal "BulletChip";
	}
	States
	{
		Ready:
			IAPS A 1 A_WeaponReady();//(WRF_ALLOWZOOM)
			Loop;
		Select:
			TNT1 A 0 A_Raise();
			IAPS A 1 A_Raise();
			Loop;
		DeSelect:
			TNT1 A 0 A_Lower();
			IAPS A 1 A_Lower();
			Loop;
		Fire:
			IAPS A 1 A_PlayweaponSound("weapons/pistolfire");
			TNT1 A 0 A_AlertMonsters();
			TNT1 A 0();//A_JumpIf(CallACS("dump3_gunsmoke") == 0, 2) // skip the gunsmoke if disabled
			TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,0,7);
			TNT1 A 0();//A_JumpIf(CallACS("dump3_casings") == 0, 2) // skip the casings if disabled
			TNT1 A 0 A_FireCustomMissile ("DUMP39mmCasingSpawner2", 0,0,3,-3, 0);
			TNT1 A 0();//A_JumpIf(CallACS("dump3_safewristspistol") == 1, "AntiClickFire") // different firing style for those who hate clicking
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",150,"Fire15");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",140,"Fire14");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",130,"Fire13");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",120,"Fire12");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",110,"Fire11");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",100,"Fire10");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",90,"Fire9");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",80,"Fire8");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",70,"Fire7");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",60,"Fire6");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",50,"Fire5");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",40,"Fire4");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",30,"Fire3");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",20,"Fire2");
			TNT1 A 0 A_JumpIfInventory("DUMP3PistolFiringCount",10,"Fire1");
		Fire0:
			TNT1 A 0 A_FireBullets(0,0,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire1:
			TNT1 A 0 A_FireBullets(1,0.33,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire2:
			TNT1 A 0 A_FireBullets(1.5,0.66,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire3:
			TNT1 A 0 A_FireBullets(2,1,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire4:
			TNT1 A 0 A_FireBullets(2.5,1.33,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire5:
			TNT1 A 0 A_FireBullets(3,1.66,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire6:
			TNT1 A 0 A_FireBullets(3.5,2,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire7:
			TNT1 A 0 A_FireBullets(4,2.33,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire8:
			TNT1 A 0 A_FireBullets(4.5,2.66,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire9:
			TNT1 A 0 A_FireBullets(5,3,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire10:
			TNT1 A 0 A_FireBullets(5.5,3.33,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire11:
			TNT1 A 0 A_FireBullets(6,3.66,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire12:
			TNT1 A 0 A_FireBullets(6.5,4,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire13:
			TNT1 A 0 A_FireBullets(7,4.33,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire14:
			TNT1 A 0 A_FireBullets(7.5,4.66,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		Fire15:
			TNT1 A 0 A_FireBullets(8,5,-1,random(4,8),"DUMP3BulletPuff",FBF_NORANDOM);
			Goto FireFinish;
		FireFinish:
			TNT1 A 0 A_GiveInventory("DUMP3PistolFiringCount",10);
			TNT1 A 0 A_Light2();
			TNT1 A 0 Radius_Quake(1,3,0,1,0);
			//		TNT1 A 0 A_JumpIf(CallACS("dump3_velocityrecoil") == 0, 2) // skip the recoil if disabled
			//		TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -0.2, 0, Sin(Pitch) * 0.2, 1)
			TNT1 A 0 A_SetPitch(pitch-(0.3));
			IAPS B 1 Bright offset(0,36) A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH);
			TNT1 A 0 A_Light1();
			TNT1 A 0 A_SetPitch(pitch+(0.1));
			IAPS C 1 offset(0,38) A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH);
			TNT1 A 0 A_Light0();
			TNT1 A 0 A_SetPitch(pitch+(0.2));
			IAPS D 1 offset(0,40) A_WeaponReady();
			IAPS E 1 offset(0,38) A_WeaponReady();
			IAPS E 1 offset(0,36) A_WeaponReady();
			IAPS A 6 offset(0,32) A_WeaponReady();
			TNT1 A 0 A_Refire("Hold");
			TNT1 A 0 A_ClearRefire();
			Goto Ready;
		Hold:
			TNT1 A 0 A_GiveInventory("DUMP3PistolFiringCount",10);
			Goto Fire;
		AntiClickFire:
			TNT1 A 0 A_FireBullets(3,3,-1,5,"DUMP3BulletPuff",FBF_NORANDOM);
			TNT1 A 0 A_GiveInventory("DUMP3PistolFiringCount",10);
			TNT1 A 0 A_Light2();
			TNT1 A 0 Radius_Quake(1,3,0,1,0);
			//		TNT1 A 0 A_JumpIf(CallACS("dump3_velocityrecoil") == 0, 2) // skip the recoil if disabled
			//		TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -0.2, 0, Sin(Pitch) * 0.2, 1)
			TNT1 A 0 A_SetPitch(pitch-(0.3));
			IAPS B 1 Bright offset(0,36) A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH);
			TNT1 A 0 A_Light1();
			TNT1 A 0 A_SetPitch(pitch+(0.1));
			IAPS C 1 offset(0,38) A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH);
			TNT1 A 0 A_Light0();
			TNT1 A 0 A_SetPitch(pitch+(0.2));
			IAPS D 1 offset(0,40);
			IAPS E 1 offset(0,38);
			IAPS E 1 offset(0,36);
			IAPS A 6 offset(0,32) A_WeaponReady (WRF_NOPRIMARY);
			Goto Ready;
		AltFire:
			TNT1 A 0 A_PlaySoundEx("knife/swing","soundslot5",0,0);
			5NIF A 1;
			5NIF B 1;
			5NIF C 1;
			TNT1 A 0 A_JumpIfInventory("PowerStrength",1, "BerserkKnife");
			5NIF D 1 A_CustomPunch(5*random(7,13),1,0,"DUMP3KnifePuff",90);
			5NIF E 1;
			5NIF F 1;
			TNT1 AAAAAAAAAAAA 0 A_Lower();
			TNT1 A 5;
			Goto Select;
		BerserkKnife:
			5NIF D 1 A_CustomPunch(25*random(7,13),1,0,"DUMP3BerserkKnifePuff",90);
			5NIF E 1;
			5NIF F 1;
			TNT1 AAAAAAAAAAAA 0 A_Lower();
			TNT1 A 5;
			Goto Select;
		DropGunPickup: // You can't drop the pistol you geothermal giraffe
			"####" "#" 0 A_Jump(256,1,3,5,7,9);
			"####" "#" 0 A_Print("You cannot drop this Weapon.");
			"####" "#" 0 A_Jump(256, "Ready");
			Goto Ready;
			"####" "#" 0 A_Print("You can't drop this gun.");
			"####" "#" 0 A_Jump(256, "Ready");
			Goto Ready;
			"####" "#" 0 A_Print("Stop trying to drop this gun.");
			"####" "#" 0 A_Jump(256, "Ready");
			Goto Ready;
			"####" "#" 0 A_Print("The pistol is actually good for once, Stop it.");
			"####" "#" 0 A_Jump(256, "Ready");
			Goto Ready;
			"####" "#" 0 A_Print("stahp");
			"####" "#" 0 A_Jump(256, "Ready");
			Goto Ready;
	}
}
class DUMP3PistolFiringCount : DUMP3Counter { Inventory.MaxAmount 150 } { 
	Default {
	actor DUMP3KnifePuff : BulletPuff
		
		+PUFFONactorS;
		+NOEXTREMEDEATH;
		attacksound "knife/impactwall";
		seesound    "knife/impactflesh"();
		meleesound  "knife/impactflesh";
		deathsound  "knife/impactwall";
	}
	States
	{
	Spawn:
	Crash:
		PUFF CD 4;
		Stop;
	Melee:
		TNT1 A 8();// Did this so it doesn't generate smoke on enemies
		Stop;
}
}
class DUMP3BerserkKnifePuff : DUMP3KnifePuff { 
	Default {
	
	-NOEXTREMEDEATH;
	}
}
class DUMP3ShiningHeartHammer : DUMP3weapon { 
	Default {
	
	/*Weapon.BobRangeX 0.9
		Weapon.BobRangeY 1.5
		Weapon.BobStyle InverseAlpha
		Weapon.BobSpeed 0.9*/
	Tag "Shining Heart Hammer - [TerminusEst13]";
	Inventory.PickupSound "hammer/pickup";
	Inventory.PickupMessage "You got the Shining Heart Hammer!";
	Obituary "%k broke %o's heart.";
	XScale 0.225;
	YScale 0.2;
	+WEAPON.MELEEweapon;
	}
	States
	{
	Ready:
		TNT1 A 0 A_TakeInventory("DUMP3HammerHit",1);
		SJLH A 1 A_WeaponReady();//(WRF_ALLOWZOOM)
		Loop;
	DeSelect:
		TNT1 A 0 A_TakeInventory("DUMP3HammerHit",1);
		TNT1 A 0 A_Lower();
		SJLH A 1 A_Lower();
		Loop;
	Select:
		TNT1 A 0 A_Raise();
		SJLH A 1 A_Raise();
		Loop;
	Fire:
		SJLH AABCDEFFGGG 1;
		TNT1 A 0 A_PlayweaponSound("hammer/swing");
		SJLH H 1;
		TNT1 A 0 A_JumpIfInventory("PowerStrength",1,"FireBerserk");
		SJLH H 1 A_FireCustomMissile("DUMP3HammerAttack");
		SJLH I 1;
		SJL2 JKLM 1 A_JumpIfInventory("DUMP3HammerHit",1,"FireHit");
		TNT1 A 5;
		SJL2 NO 2;
		SJLH A 2;
		Goto Ready;
	FireBerserk:
		SJLH H 1 A_FireCustomMissile("DUMP3HammerAttackBerserk");
		SJLH I 1;
		SJL2 JKLM 1 A_JumpIfInventory("DUMP3HammerHit",1,"FireHit");
		TNT1 A 5;
		SJL2 NO 2;
		SJLH A 2;
		Goto Ready;
	FireHit:
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0 A_SetAngle(angle+(random(-400,400)/1000.000));
		TNT1 A 0 A_Recoil(0.5);
		SJLH I 2 A_SetPitch(pitch+random(150,175)/100.00);
		SJLH J 2 A_SetPitch(pitch-random(140,165)/100.00);
		SJLH KLM 2;
		TNT1 A 0 A_TakeInventory("DUMP3HammerHit",1);
		SJLH A 2;
		Goto Ready;
	AltFire:
		SJL3 ABBCCC 1;
		TNT1 A 0 A_PlayweaponSound("hammer/swing");
		SJL3 DE 2;
		TNT1 A 0 A_PlaySoundEx("hgib5","soundslot6",0,0);
		SJL3 F 2;
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0 A_FireCustomMissile("DUMP3HeartProjectile",frandom(-1.0,1.0),0,0,0,0,frandom(-0.5,0.5));
		SJL3 GHI 2;
		TNT1 A 5;
		SJL2 NO 2;
		SJLH A 2;
		Goto Ready;
	Spawn:
		SJLH Z -1;
		Stop;
	DropGunPickup:
		"####" "#" 0 A_TakeInventory("DUMP3ChainsawSlotFilled",1);
		"####" "#" 0 A_TakeInventory("DUMP3ShiningHeartHammer",1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
	RerollGun:
		"####" "#" 0 A_GiveInventory ("DUMP3ChaingunReroll", 1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
}
}
class DUMP3HammerHit : DUMP3Boolean { 
	Default {
class DUMP3HammerAttack : FastProjectile { 
	Default {
		
		Radius 4;
		Height 4;
		Damage (150);
		Speed 64;
		SeeSound "none";
		DeathSound "none";
		Projectile;
		+BLOODSPLATTER;
		+NOEXTREMEDEATH;
		+THRUSPECIES;
		Species "Player";
	}
	States
	{
		Spawn:
			TNT1 A 1;
			Stop;
		Death:
		Crash:
			TNT1 A 1;
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_GiveToTarget("DUMP3HammerHit",1);
			TNT1 A 0 A_PlaySound("hammer/miss");
			TNT1 AAA 0 A_SpawnItemEx("DUMP3FancyWhiteSmokeSmall",0,0,0,random(-25,25)/100.00,random(-25,25)/100.00,random(-25,25)/100.00,0,160);
			TNT1 AAAAAA 0 A_SpawnItemEx("DUMP3FancyWhiteSmokeSmall",0,0,0,random(-75,75)/100.00,random(-75,75)/100.00,random(-75,75)/100.00,0,160);
			TNT1 A 1;
			Stop;
		XDeath:
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_GiveToTarget("DUMP3HammerHit",1);
			TNT1 A 0 A_PlaySound("hammer/miss");
			TNT1 A 0 A_PlaySoundEx("hammer/hit","soundslot5",0,0);
			//TNT1 A 0 A_SpawnItemEx("DUMP3HappyOnlineSound",0,0,0,0,0,0,0,160)
			TNT1 AAAA 0 A_SpawnItemEx("DUMP3RainbowSparkleSound",random(-10,10),random(-10,10),random(-5,5),0,0,0,0,32);
			TNT1 AAAA 0 A_SpawnItemEx("DUMP3WhiteSpark",0,0,random(-5,5),random(-60,60)/20.0,random(-60,60)/20.0,random(-40,40)/20.0,random(-180,180),32);
			TNT1 AAA 0 A_SpawnItemEx("DUMP3RainbowSparkHuge",0,0,random(-5,5),random(-60,60)/20.0,random(-60,60)/20.0,random(-40,40)/20.0,random(-180,180),32);
			TNT1 AAAAA 0 A_SpawnItemEx("DUMP3RainbowSpark",0,0,random(-5,5),random(-60,60)/20.0,random(-60,60)/20.0,random(-40,40)/20.0,random(-180,180),32);
			TNT1 AAAAAAAAAA 0 A_SpawnItemEx("DUMP3RainbowSparkTiny",random(-5,5),random(-5,5),random(-5,5),random(-80,80)/10.00,random(-80,80)/10.0,random(-3,3),random(-180,180),160);
			TNT1 AAAA 0 A_SpawnItemEx("DUMP3FancyWhiteSmoke",random(-10,10),random(-10,10),random(-10,-10),random(-200,200)/100.00,random(-200,200)/100.00,random(-100,300)/100.00,random(-180,180),160);
			TNT1 A 1;
			Stop;
	}
}
class DUMP3HammerAttackBerserk : DUMP3HammerAttack { 
	Default {
		
		Damage (250);
	}
}
class DUMP3GenericGoreactor : actor { 
	Default {
		
		+CANNOTPUSH;
		+DONTSPLASH;
		+NOTELEPORT;
		+NOBLOCKMAP;
		+MOVEWITHSECTOR;
		-NOGRAVITY;
		-SOLID;
		+CLIENTSIDEONLY;
		+FORCEXYBILLBOARD;
	}
}
class DUMP3RainbowSparkles : DUMP3GenericGoreactor { 
	Default {
		
		RenderStyle "Add";
		Alpha 0.95;
		+NOINTERACTION;
		+Bright;
		+RANDOMIZE;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(255,"Spawn1","Spawn2","Spawn3","Spawn4","Spawn5","Spawn6");
			TNT1 A 1;
			Loop;
		Spawn1:
			RPK1 ABCDE 4;
			Stop;
		Spawn2:
			RPK2 ABCDE 4;
			Stop;
		Spawn3:
			RPK3 ABCDE 4;
			Stop;
		Spawn4:
			RPK4 ABCDE 4;
			Stop;
		Spawn5:
			RPK5 ABCDE 4;
			Stop;
		Spawn6:
			RPK6 ABCDE 4;
			Stop;
	}
}
class DUMP3RainbowSparkleSound : DUMP3RainbowSparkles { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			TNT1 A 0 A_PlaySound("happy/sparkle");
		Spawn0:
			TNT1 A 0;
			TNT1 A 0 A_Jump(255,"Spawn1","Spawn2","Spawn3","Spawn4","Spawn5","Spawn6");
			TNT1 A 1;
			Loop;
	}
}
class DUMP3WhiteSpark : DUMP3GenericGoreactor { 
	Default {
		
		Speed 2;
		RenderStyle "Add";
		Alpha 1;
		Scale 0.3;
		+MISSILE;
		+NOINTERACTION;
		+Bright;
		+RANDOMIZE;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			PTCL ABCABC 3;
		Spawn2:
			PTCL ABC 3 A_FadeOut(0.075);
			Loop;
	}
}
class DUMP3RainbowSpark : DUMP3GenericGoreactor { 
	Default {
		
		Speed 2;
		RenderStyle "Add";
		Alpha 1;
		Scale 0.3;
		+MISSILE;
		+NOINTERACTION;
		+Bright;
		+RANDOMIZE;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(256, "Spawn1", "Spawn2", "Spawn3", "Spawn4", "Spawn5", "Spawn6", "Spawn7", "Spawn8", "Spawn9", "Spawn10");
			TNT1 A 1;
			Loop;
		Spawn1:
			RNBW B 12;
		Spawn1b:
			RNBW B 2 A_FadeOut(0.075);
			Loop;
		Spawn2:
			RNBW C 12;
		Spawn2b:
			RNBW C 2 A_FadeOut(0.075);
			Loop;
		Spawn3:
			RNBW D 12;
		Spawn3b:
			RNBW D 2 A_FadeOut(0.075);
			Loop;
		Spawn4:
			RNBW E 12;
		Spawn4b:
			RNBW E 2 A_FadeOut(0.075);
			Loop;
		Spawn5:
			RNBW F 12;
		Spawn5b:
			RNBW F 2 A_FadeOut(0.075);
			Loop;
		Spawn6:
			RNBW G 12;
		Spawn6b:
			RNBW G 2 A_FadeOut(0.075);
			Loop;
		Spawn7:
			RNBW H 12;
		Spawn7b:
			RNBW H 2 A_FadeOut(0.075);
			Loop;
		Spawn8:
			RNBW I 12;
		Spawn8b:
			RNBW I 2 A_FadeOut(0.075);
			Loop;
		Spawn9:
			RNBW J 12;
		Spawn9b:
			RNBW J 2 A_FadeOut(0.075);
			Loop;
		Spawn10:
			RNBW K 12;
		Spawn10b:
			RNBW K 2 A_FadeOut(0.075);
			Loop;
	}
}
class DUMP3RainbowSparkHuge : DUMP3GenericGoreactor { 
	Default {
		
		Speed 2;
		RenderStyle "Add";
		Alpha 0.95;
		Scale 0.5;
		+MISSILE;
		+NOINTERACTION;
		+Bright;
		+RANDOMIZE;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(255,"Spawn1","Spawn2","Spawn3","Spawn4","Spawn5","Spawn6");
			TNT1 A 1;
			Loop;
		Spawn1:
			RNB1 ABCDEFGH 2;
			Stop;
		Spawn2:
			RNB2 ABCDEFGH 2;
			Stop;
		Spawn3:
			RNB3 ABCDEFGH 2;
			Stop;
		Spawn4:
			RNB4 ABCDEFGH 2;
			Stop;
		Spawn5:
			RNB5 ABCDEFGH 2;
			Stop;
		Spawn6:
			RNB6 ABCDEFGH 2;
			Stop;
	}
}
class DUMP3RainbowSparkTiny : DUMP3GenericGoreactor { 
	Default {
		
		Scale 0.65;
		Damage 0;
		Speed 5;
		RenderStyle "Add";
		Alpha 0.9;
		BounceCount 6;
		BounceFactor 0.45;
		Projectile;
		+MISSILE;
		+NOGRAVITY;
		+DOOMBOUNCE;
		+BOUNCEONactorS;
		+CANBOUNCEWATER;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(255,"Spawn1","Spawn2","Spawn3","Spawn4","Spawn5","Spawn6");
			TNT1 A 1;
			Loop;
		Spawn1:
			RSP1 ABCDE 4 Bright;
		Spawn1b:
			RSP1 ABCDE 4 Bright A_FadeOut(0.05);
			Loop;
		Spawn2:
			RSP2 ABCDE 4 Bright;
		Spawn2b:
			RSP2 ABCDE 4 Bright A_FadeOut(0.05);
			Loop;
		Spawn3:
			RSP3 ABCDE 4 Bright;
		Spawn3b:
			RSP3 ABCDE 4 Bright A_FadeOut(0.05);
			Loop;
		Spawn4:
			RSP4 ABCDE 4 Bright;
		Spawn4b:
			RSP4 ABCDE 4 Bright A_FadeOut(0.05);
			Loop;
		Spawn5:
			RSP5 ABCDE 4 Bright;
		Spawn5b:
			RSP5 ABCDE 4 Bright A_FadeOut(0.05);
			Loop;
		Spawn6:
			RSP6 ABCDE 4 Bright;
		Spawn6b:
			RSP6 ABCDE 4 Bright A_FadeOut(0.05);
			Loop;
	}
}
class DUMP3HappyOnlineSound : actor { 
	Default {
		
		+NOCLIP;
		-SOLID;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 1 A_PlaySoundEx("happy/gib","soundslot5",0,0);
			Stop;
	}
}
class DUMP3FancyWhiteSmoke : DUMP3GenericGoreactor { 
	Default {
		
		RenderStyle "Add";
		Scale 0.25;
		Alpha 0.225;
		Speed 1;
		+NOINTERACTION;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_FadeOut(0.05);
			TNT1 A 0 A_Jump(255,"SmokeA","SmokeB","SmokeC","SmokeD","SmokeE","SmokeF","SmokeG","SmokeH","SmokeI","SmokeJ","SmokeK");
		SmokeA:
			SMK2 A 2 A_FadeOut(0.00625);
		SmokeB:
			SMK2 B 2 A_FadeOut(0.00625);
		SmokeC:
			SMK2 C 2 A_FadeOut(0.00625);
		SmokeD:
			SMK2 D 2 A_FadeOut(0.00625);
		SmokeE:
			SMK2 E 2 A_FadeOut(0.00625);
		SmokeF:
			SMK2 F 2 A_FadeOut(0.00625);
		SmokeG:
			SMK2 G 2 A_FadeOut(0.00625);
		SmokeH:
			SMK2 H 2 A_FadeOut(0.00625);
		SmokeI:
			SMK2 I 2 A_FadeOut(0.00625);
		SmokeJ:
			SMK2 J 2 A_FadeOut(0.00625);
		SmokeK:
			SMK2 K 2 A_FadeOut(0.00625);
			Goto SmokeA;
	}
}
class DUMP3FancyWhiteSmokeSmall : DUMP3FancyWhiteSmoke { Scale 0.1 } { 
	Default {
	actor DUMP3FancyWhiteSmokeSpawner;
	
	+NOCLIP;
	-SOLID;
	+CLIENTSIDEONLY;
	+NOINTERACTION;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 AAAAAAAAAA 4 A_SpawnItemEx("DUMP3FancyWhiteSmoke",random(-10,10),random(-10,10),random(-10,-10),random(-200,200)/100.00,random(-200,200)/100.00,random(200,600)/100.00,random(-180,180),160);
		Stop;
}
}
class DUMP3HeartProjectile : actor { 
	Default {
	
	Radius 8;
	Height 8;
	Speed 20;
	Damage (10);
	Projectile;
	RenderStyle "Add";
	Alpha 0.99;
	Scale 0.1;
	Obituary "%k broke %o's heart.";
	+NOEXTREMEDEATH;
	+THRUSPECIES;
	Species "Player";
	}
	States
	{
	Spawn:
		HCHG A 1 Bright A_SpawnItemEx("DUMP3SmallHeart2",0,0,0,0,0,0,0,160);
		TNT1 A 0 A_ChangeVelocity(0,frandom(-0.25,0.25),frandom(-0.1,0.1),CVF_RELATIVE);
		TNT1 AA 0 A_SpawnItemEx("DUMP3SmallHeart2",0,0,0,random(-50,50)/100.00,random(-50,50)/100.00,random(-40,40)/100.00,random(-180,180),160);
		Loop;
	Death:
		TNT1 A 0;
		TNT1 AAA 0 A_SpawnItemEx("DUMP3HappyOnlineSound",0,0,0,0,0,0,0,160);
		TNT1 AAA 0 A_SpawnItemEx("DUMP3RainbowSparkleSound",random(-10,10),random(-10,10),random(-5,5),0,0,0,0,32);
		TNT1 AAAA 0 A_SpawnItemEx("DUMP3WhiteSpark",0,0,random(-5,5),random(-60,60)/20.0,random(-60,60)/20.0,random(-40,40)/20.0,random(-180,180),32);
		TNT1 AAAAA 0 A_SpawnItemEx("DUMP3RainbowSparkHuge",0,0,random(-5,5),random(-60,60)/20.0,random(-60,60)/20.0,random(-40,40)/20.0,random(-180,180),32);
		TNT1 AAAAAAA 0 A_SpawnItemEx("DUMP3RainbowSpark",0,0,random(-5,5),random(-60,60)/20.0,random(-60,60)/20.0,random(-40,40)/20.0,random(-180,180),32);
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("DUMP3RainbowSparkTiny",random(-5,5),random(-5,5),random(-5,5),random(-80,80)/10.00,random(-80,80)/10.0,random(-3,3),random(-180,180),160);
		TNT1 AAA 0 A_SpawnItemEx("DUMP3FancyWhiteSmoke",random(-10,10),random(-10,10),random(-10,-10),random(-200,200)/100.00,random(-200,200)/100.00,random(-100,300)/100.00,random(-180,180),160);
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("DUMP3SmallHeart",random(-10,10),random(-10,10),random(-10,-10),random(-200,200)/100.00,random(-200,200)/100.00,random(-50,300)/100.00,random(-180,180),160);
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("DUMP3SmallHeart",random(-10,10),random(-10,10),random(-10,-10),random(-200,200)/100.00,random(-200,200)/100.00,random(-50,300)/100.00,random(-180,180),160);
		TNT1 A 0 A_SpawnItemEx("DUMP3LargeHeart",0,0,0,0,0,0,0,160);
		TNT1 A 0 A_Explode(64,128,0);
		HPUF ABCDEFGHI 3 Bright;
		Stop;
}
}
class DUMP3SmallHeart : actor { 
	Default {
	
	RenderStyle "Add";
	Alpha 0.99;
	Scale 0.9;
	+NOINTERACTION;
	+CLIENTSIDEONLY;
	+RANDOMIZE;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 1;
		PHRT A 5 Bright;
	Spawn2:
		PHRT A 2 Bright A_FadeOut(0.125);
		Loop;
}
}
class DUMP3SmallHeart2 : DUMP3SmallHeart { // To prevent GLDEFS
	Default {
class DUMP3LargeHeart : actor { 
	Default {
		
		RenderStyle "Add";
		Alpha 0.5;
		Scale 0.275;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
	}
	States
	{
		Spawn:
			HPUF ABCDEFGHI 4 Bright;
			Stop;
	}
}
class DUMP3Wingman : DUMP3weapon { 
	Default {
		
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "Shell";
		+WEAPON.NoAlert;
		+WEAPON.Ammo_Optional;
		+WEAPON.Alt_ammo_Optional;
		Inventory.PickupMessage "Got the Wingman!";
		Obituary "%o was in %k's sights";
		Tag "Wingman - [Sgt. Shivers]";
		Decal "BulletChip";
	}
	States
	{
		Ready:
			WMAN A 1 A_WeaponReady();//(WRF_ALLOWZOOM)
			Loop;
		DeSelect:
			TNT1 A 0 A_Lower();
			WMAN A 1 A_Lower();
			Loop;
		Select:
			TNT1 A 0 A_Raise();
			WMAN A 1 A_Raise();
			Loop;
		Fire:
			// I felt only having 6 pellets for higher accuracy was a bit too much of a penalty, so I gave them custom damage randomization and 7 pellets.
			// Hope you are okay with that, Shivers.
			WMAN A 0 A_JumpIfInventory("Shell", 1, 2);
			WMAN A 1 A_WeaponReady (WRF_NOFIRE);
			Goto Ready;
			WMAN A 1;
			TNT1 A 0 A_AlertMonsters();
			TNT1 A 0 A_PlayweaponSound("Wingman/Fire");
			TNT1 A 0();//A_JumpIf(CallACS("dump3_gunsmoke") == 0, 2) // skip the gunsmoke if disabled
			TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,0,4);
			TNT1 A 0 A_FireBullets(2.5, 2.5, -1, 4*random(2,3), "DUMP3BulletPuff", FBF_NORANDOM | FBF_USEammo);
			TNT1 AAAAAA 0 A_FireBullets(2.5, 2.5, -1, 4*random(2,3), "DUMP3BulletPuff", FBF_NORANDOM);
			WMAN B 2 Bright A_SetPitch(pitch-(3.0));
			WMAN CC 1 Bright A_SetPitch(pitch+(0.5));
			WMAN DDAA 1 A_SetPitch(pitch+(0.5));
			WMAN EFGHIJ 2;
			TNT1 A 0();//A_JumpIf(CallACS("dump3_casings") == 0, 2) // skip the casings if disabled
			TNT1 A 0 A_FireCustomMissile ("DUMP3ShellCasingSpawner3", 0,0,-5,-7,0);
			WMAN KIHGFE 2;
			WMAN A 6();
			Goto Ready;
		Altfire:
			WMAN A 0 A_JumpIfInventory("Shell", 2, 2);
			WMAN A 1 A_WeaponReady (WRF_NOFIRE);
			Goto Ready;
			WMAN A 1;
			WMA2 AB 2;
			WMA2 C 4 A_PlaySound("Wingman/Crush");
			WMA2 C 0 A_TakeInventory("Shell",2, TIF_NOTAKEINFINITE);
			WMA2 DEFGHIJKL 1;
			WMA2 M 4;
			WMA2 NO 2;
			WMA2 P 0 A_FireCustomMissile("DUMP3Caltrop",-9,0,0,0,0,random(-1,3));
			WMA2 P 0 A_FireCustomMissile("DUMP3Caltrop",-3,0,0,0,0,random(-1,3));
			WMA2 P 0 A_FireCustomMissile("DUMP3Caltrop",3,0,0,0,0,random(-1,3));
			WMA2 P 2 A_FireCustomMissile("DUMP3Caltrop",9,0,0,0,0,random(-1,3));
			WMA2 QR 2;
			WMAN A 4;
			Goto Ready;
		Spawn:
			WMAN Z -1;
			Stop;
		DropGunPickup:
			"####" "#" 0 A_TakeInventory("DUMP3ShotgunSlotFilled",1);
			"####" "#" 0 A_TakeInventory("DUMP3Wingman",1);
			"####" "#" 0 A_Jump(256, "Deselect");
			Goto Deselect;
		RerollGun:
			"####" "#" 0 A_GiveInventory ("DUMP3ShotgunReroll", 1);
			"####" "#" 0 A_Jump(256, "Deselect");
			Goto Deselect;
	}
}
class DUMP3Caltrop : actor { 
	Default {
		
		Damage 1;
		Radius 13;
		Height 8;
		Speed 12;
		Projectile;
		Gravity 0.35;
		Scale 0.3;
		BounceType "Doom";
		+RANDOMIZE;
		-NOGRAVITY;
		+THRUSPECIES;
		Species "Player";
		BounceSound "Caltrop/Bounce";
		Obituary "%o tripped on %k's shotgun trap.";
	}
	States
	{
		Spawn:
			TNT1 A 1;
			CALT AA 7;
		Death:
			CALT AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 7 A_Explode(12,16);
			CALT AAAAAAAA 1 A_FadeOut(0.5);
			Stop;
	}
}
class DUMP3Tyrant : DUMP3weapon { 
	Default {
		
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 6;
		Weapon.AmmoType "Shell";
		Decal "BulletChip";
		Tag "Tyrant Shotgun - [Mor'ladim]";
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "You got the Tyrant Shotgun!";
		Obituary  "%o felt the tyrannical wrath of %k's two-round burst shotgun.";
		+WEAPON.Ammo_OPTIONAL;
		+WEAPON.ALT_ammo_OPTIONAL;
		+WEAPON.NOALERT;
	}
	States
	{
		Ready:
			TYRS A 1 A_WeaponReady();//(WRF_ALLOWZOOM)
			Loop;
		DeSelect:
			TYRS A 1 A_Lower();
			Loop;
		Select:
			TYRS A 1 A_Raise();
			Loop;
		Fire:
			TYRS A 0 A_JumpIfInventory("Shell",1,2);
			TYRS A 1 A_WeaponReady (WRF_NOFIRE);
			Goto Ready;
			TYRS A 0 A_JumpIfInventory("DUMP3TyrannicalImpactCombo",1,"TyrannicalImpact");
			TYRS G 2();//Offset(104, 124)
			TYRS B 1 Bright /*Offset(104, 117)*/ A_PlaySound("tyrantsg/fire", CHAN_AUTO);
			TNT1 A 0();//A_JumpIf(CallACS("dump3_gunsmoke") == 0, 3) // skip the gunsmoke if disabled
			TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,-1,5);
			TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,1,5);
			TYRS A 0 A_AlertMonsters();
			TYRS A 0 A_GunFlash();
			TYRS G 0  A_FireBullets (12, 10, 10, 7, "DUMP3BulletPuff");
			TYRS G 2();//Offset(104, 142)
			TYRS G 2();//Offset(104, 140)
			TYRS G 2();//Offset(104, 138)
			TYRS A 0 A_Refire("Hold");
			TYRS G 2();//Offset(94, 149)
			TYRS G 2();//Offset(78, 146)
			TYRS C 2();//Offset(34, 129)
			TYRS C 2();//Offset(22, 122)
			TYRS C 2();//Offset(14, 114)
			TYRS D 2();//Offset(35, 87)
			TYRS D 2();//Offset(25, 72)
			TYRS E 2();//Offset(16, 62)
			TYRS F 2();//Offset(-27, 60) A_PlaySound("tyrantsg/pump", CHAN_AUTO)
			TYRS A 0();//A_JumpIf(CallACS("dump3_casings") == 0, 3) // skip the casings if disabled
			TYRS AA 0 A_FireCustomMissile ("DUMP3ShellCasingSpawner3", 0,0,-5,-7, 0);
			TYRS A 0 A_SpawnItemEx("DUMP3TyrantShotgunRingSpawner",0,0,0);
			TYRS A 0 A_SpawnItemEx("DUMP3TyrantShotgunRingDMG",0,0,10);
			TYRS E 2();//Offset(13, 62)
			TYRS E 2();//Offset(20, 74)
			TYRS D 2();//Offset(33, 85)
			TYRS D 2();//Offset(44, 98)
			TYRS D 2();//Offset(61, 109)
			TYRS D 2();//Offset(79, 120)
			TYRS D 2();//Offset(103, 118)
			TYRS G 2();//Offset(104, 124)
			Goto Ready;
		TyrannicalImpact:
			TYRS A 0 A_JumpIfInventory("Shell",1,1);
			Goto Ready;
			TYRS A 0 A_SpawnItemEx("DUMP3TyrannicalImpactQuickStun",10,0,0);
			TYRS G 8();//Offset(104, 124)
			TYRS B 1 Bright /*Offset(104, 135)*/ A_PlaySound("tyrantsg/fire", CHAN_AUTO);
			TNT1 A 0();//A_JumpIf(CallACS("dump3_gunsmoke") == 0, 3) // skip the gunsmoke if disabled
			TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,-1,5);
			TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,1,5);
			TYRS A 0 A_AlertMonsters();
			TYRS A 0 A_GunFlash();
			TYRS A 0 A_FireBullets (12, 10, 10, 9, "DUMP3BulletPuff");//Deals bonus damage due to super combo!
			TYRS A 0 A_TakeInventory ("Shell",1,TIF_NOTAKEINFINITE);
			TYRS G 2();//Offset(104, 157)
			TYRS G 2();//Offset(104, 155)
			TYRS G 2();//Offset(104, 150)
			TYRS G 2();//Offset(94, 149)
			TYRS G 2();//Offset(78, 146)
			TYRS C 2();//Offset(34, 129)
			TYRS C 2();//Offset(22, 122)
			TYRS C 2();//Offset(14, 114)
			TYRS D 2();//Offset(35, 87)
			TYRS D 2();//Offset(25, 72)
			TYRS E 2();//Offset(16, 62)
			TYRS F 2();//Offset(-27, 60) A_PlaySound("tyrantsg/pump", CHAN_AUTO)
			TYRS A 0();//A_JumpIf(CallACS("dump3_casings") == 0, 3) // skip the casings if disabled
			TYRS AA 0 A_FireCustomMissile ("DUMP3ShellCasingSpawner3", 0,0,-5,-7, 0);
			TYRS A 0 A_SpawnItemEx("DUMP3TyrantShotgunRingSpawner",0,0,0);
			TYRS A 0 A_SpawnItemEx("DUMP3TyrantShotgunRingDMG",0,0,10);
			TYRS E 2();//Offset(13, 62)
			TYRS E 2();//Offset(20, 74)
			TYRS D 2();//Offset(33, 85)
			TYRS D 2();//Offset(44, 98)
			TYRS D 2();//Offset(61, 109)
			TYRS D 2();//Offset(79, 120)
			TYRS D 2();//Offset(103, 118)
			TYRS G 2();//Offset(104, 124)
			TYRS A 0 A_TakeInventory("DUMP3TyrannicalImpactCombo",1);
			Goto Ready;
		Hold:
			TYRS A 0 A_JumpIfInventory("Shell",1,1);
			Goto Ready;
			TYRS B 1 Bright /*Offset(104, 135)*/ A_PlaySound("tyrantsg/fire", CHAN_AUTO);
			TNT1 A 0();//A_JumpIf(CallACS("dump3_gunsmoke") == 0, 3) // skip the gunsmoke if disabled
			TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,-1,3);
			TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,1,3);
			TYRS A 0 A_AlertMonsters();
			TYRS A 0 A_GunFlash();
			TYRS A 0 A_FireBullets (12, 10, 10, 7, "DUMP3BulletPuff");
			TYRS G 2();//Offset(104, 157)
			TYRS G 2();//Offset(104, 155)
			TYRS G 2();//Offset(104, 150)
			TYRS G 2();//Offset(94, 149)
			TYRS G 2();//Offset(78, 146)
			TYRS C 2();//Offset(34, 129)
			TYRS C 2();//Offset(22, 122)
			TYRS C 2();//Offset(14, 114)
			TYRS D 2();//Offset(35, 87)
			TYRS D 2();//Offset(25, 72)
			TYRS E 2();//Offset(16, 62)
			TYRS F 2 /*Offset(-27, 60)*/ A_PlaySound("tyrantsg/pump", CHAN_AUTO);
			TYRS A 0();//A_JumpIf(CallACS("dump3_casings") == 0, 3) // skip the casings if disabled
			TYRS AA 0 A_FireCustomMissile ("DUMP3ShellCasingSpawner3", 0,0,-5,-7, 0);
			TYRS A 0 A_SpawnItemEx("DUMP3TyrantShotgunRingSpawner",0,0,0);
			TYRS A 0 A_SpawnItemEx("DUMP3TyrantShotgunRingDMG",0,0,10);
			TYRS E 2();//Offset(13, 62)
			TYRS E 2();//Offset(20, 74)
			TYRS D 2();//Offset(33, 85)
			TYRS D 2();//Offset(44, 98)
			TYRS D 2();//Offset(61, 109)
			TYRS D 2();//Offset(79, 120)
			TYRS D 2();//Offset(103, 118)
			TYRS G 2();//Offset(104, 124)
			TYRS A 0 A_Refire("Fire");
			Goto Ready;
		AltFire:
			TYRS G 1();//Offset(104, 124)
			TYRS G 1();//Offset(104, 139)
			TYRS G 1();//Offset(105, 154)
			TYRS G 1();//Offset(105, 167)
			TYRS G 1();//Offset(105, 186)
			TNT1 A 5;
			TYRS H 2();//Offset(194, 171)
			TYRS H 2();//Offset(119, 170)
			TYRS C 2();//Offset(152, 146)
			TYRS C 2();//Offset(126, 124)
			TYRS D 2();//Offset(104, 81)	
			TYRS A 0 A_PlaySound("tyrantsg/melee", CHAN_AUTO);
			TYRS A 0 Radius_Quake(5, 2, 0, 1, 0);
			TYRS A 0 A_CustomPunch(1, 0, 0, "DUMP3TyrantMPuffDummy",35)();
			TNT1 A 0 A_CustomPunch(35, 0, 0, "DUMP3TyrantMPuff",120)();
			TYRS D 1();//Offset(69, 73)
			TYRS A 0 A_JumpIfInventory("Shell",1,2);
			TYRS A 0 A_Jump(256,2);
			TYRS A 0 A_JumpIfInventory("DUMP3TyrannicalImpactCombo",1,"Fire");
			TYRS E 1();//Offset(27, 62)
			TYRS E 1();//Offset(-7, 62)
			TYRS F 1();//Offset(-66, 60)
			TYRS F 1();//Offset(-103, 60)
			TNT1 A 5;
			TYRS A 0 A_Refire();
			TYRS C 1();//Offset(216, 160)
			TYRS C 1();//Offset(190, 141)
			TYRS C 1();//Offset(153, 131)
			TYRS C 1();//Offset(90, 128)
			TYRS G 1();//Offset(104, 124)
			Goto Ready;
		AltHold:
			TNT1 A 5;
			TYRS H 2();//Offset(194, 171)
			TYRS H 2();//Offset(119, 170)
			TYRS C 2();//Offset(152, 146)
			TYRS C 2();//Offset(126, 124)
			TYRS D 2();//Offset(104, 81)	
			TYRS A 0 A_PlaySound("tyrantsg/melee", CHAN_AUTO);
			TYRS A 0 Radius_Quake(5, 2, 0, 1, 0)();
			TYRS A 0 A_CustomPunch(1, 0, 0, "DUMP3TyrantMPuffDummy",35)();
			TNT1 A 0 A_CustomPunch(35, 0, 0, "DUMP3TyrantMPuff",120)();
			TYRS D 1();//Offset(69, 73)
			TYRS A 0 A_JumpIfInventory("Shell",1,2);
			TYRS A 0 A_Jump(256,2);
			TYRS A 0 A_JumpIfInventory("DUMP3TyrannicalImpactCombo",1,"Fire");
			TYRS E 1();//Offset(27, 62)
			TYRS E 1();//Offset(-7, 62)
			TYRS F 1();//Offset(-66, 60)
			TYRS F 1();//Offset(-103, 60)
			TNT1 A 5;
			TYRS A 0 A_Refire();
			Goto AltFire+22;
		Flash:
			TNT1 A 1 Bright A_Light1();
			TNT1 A 1 Bright A_Light2();
			TNT1 A 0 Bright A_Light0();
			Stop;
		Spawn:
			TYRP A -1;
			Loop;
		DropGunPickup:
			"####" "#" 0 A_TakeInventory("DUMP3SuperShotgunSlotFilled",1);
			"####" "#" 0 A_TakeInventory("DUMP3Tyrant",1);
			"####" "#" 0 A_Jump(256, "Deselect");
			Goto Deselect;
		RerollGun:
			"####" "#" 0 A_GiveInventory ("DUMP3SuperShotgunReroll", 1);
			"####" "#" 0 A_Jump(256, "Deselect");
			Goto Deselect;
	}
}
class DUMP3TyrantShotgunRingSpawner : actor { 
	Default {
		
		Radius 3;
		Height 3;
		Speed 0;
		-SHOOTABLE;
		+Bright;
		+MOVEWITHSECTOR;
		+DONTSPLASH;
		+NOCLIP;
		+DONTBLAST;
		+THRUactorS;
		var int user_pumpring;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SetUserVar("user_pumpring",0);
		PumpFX:
			TNT1 A 0 A_CustomMissile("DUMP3TyrantPumpFX",20,0,user_pumpring,CMF_AIMDIRECTION);
			TNT1 A 0 A_SetUserVar("user_pumpring",user_pumpring+1);
			TNT1 A 0 A_JumpIf(user_pumpring==360,"EndPumpFX");
			Loop;
		EndPumpFX:
			TNT1 A 0;
			Stop;
	} 
}
class DUMP3TyrantShotgunRingDMG : actor { 
	Default {
		
		Speed 2;
		Radius 6;
		Height 7;
		Damage (0);
		Species "Player";
		PROJECTILE;
		+DONTSPLASH;
		+THRUactorS;
		+Bright;
		Radius 10;
		Height 10;
	}
	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A 0 A_Explode(40,130,0,1,130)();
			Stop;
		Death:
			TNT1 A 0;
			Stop;
	}
}
class DUMP3TyrantMPuff : actor { //Puffs on walls and etc.
	Default {
		
		+NOBLOCKMAP;
		+NOGRAVITY;
		+NOEXTREMEDEATH;
		+PUFFONactorS;
		RenderStyle "Translucent";
		Alpha 0.5;
		SeeSound "tyrantsg/mhitpool";
	}
	States
	{
		Spawn:
			PUFF A 0;
			PUFF A 0 A_PlaySound("tyrantsg/wallhit",0,2,0);
			PUFF ABC 1;
			Stop;
	}
} 
class DUMP3TyrantMPuffDummy : actor { //Close range hit which activates special combo.
	Default {
		
		+NOBLOCKMAP;
		+NOGRAVITY;
		+NOEXTREMEDEATH;
		+PUFFONactorS;
		SeeSound "tyrantsg/mhitpool";
	}
	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A 0 A_GiveToTarget("DUMP3TyrannicalImpactCombo",1,AAPTR_PLAYER1);
			Stop;
	}
}
class DUMP3TyrantPumpFX : actor { //Aesthetic. Deals no damage.
	Default {
		
		Speed 8;
		Radius 8;
		Height 5;
		RenderStyle "Add";
		Alpha 0.05;
		Scale 0.2;
		PROJECTILE;
		+Bright;
		+THRUactorS;
		+DONTSPLASH;
		+MOVEWITHSECTOR;
		+DONTBLAST;
		+CLIENTSIDEONLY;
	}
	States
	{
		Spawn:
			TQFX A 0;
			TQFX AAAAAAAA 1;
			TQFX A 0 A_SetTranslucent(0.05);
			TQFX AAA 3 A_SetScale(0.15);
			TQFX AA 1 A_SetScale(0.10);
		Death:
			TQFX A 0;
			Stop;
	}
}
class DUMP3TyrannicalImpactQuickStun : actor { 
	Default {
		
		+DONTSPLASH;
		+BLOODLESSIMPACT;
		+RIPPER;
		+FORCEPAIN;
		+NOGRAVITY;
		Projectile;
		Speed 5;
		Scale 0.40;
		Radius 15;
		Damage (0);
		ReactionTime 15;
	}
	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_Countdown();
			Loop;
		Death:
			TNT1 A 0;
			Stop;
	}
}
class DUMP3TyrannicalImpactCombo : Inventory { 
	Default {
		
		-INVBAR;
		+UNDROPPABLE;
		Inventory.MaxAmount 1;
		Inventory.Icon TNT1A0;
	}
}
class DUMP3IronAnnihilatorShotSparkFX : FastProjectile { 
	Default {
		
		Speed 15;
		Radius 4;
		Height 4;
		Scale 0.06;
		Gravity 0.3;
		PROJECTILE;
		+Bright;
		+THRUactorS;
		+CLIENTSIDEONLY;
		RenderStyle "Add";
		ReactionTime 3;
		MissileHeight 8;
		MissileType "DUMP3IronABulletTrail";
	}
	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A 0 A_SpawnItemEx("DUMP3IronABulletGlow", 0, 0, 0, 0, 0, 0, 0, 32);
			TNT1 A 0 A_CountDown();
			Loop;
		Death:
			TNT1 A 1;
			TNT1 A 0 A_FadeOut(0.1,1);
			Loop;
	}
}
class DUMP3IronABulletGlow : actor { 
	Default {
		
		+NOINTERACTION;
		+THRUactorS;
		+CLIENTSIDEONLY;
		RenderStyle "Add";
		Alpha 0.06;
		Scale 0.15;
	}
	States
	{
		Spawn:
			SPGL A 1 Bright;
			Stop;
	}
}
class DUMP3IronABulletTrail : actor { 
	Default {
		
		Radius 6;
		Height 8;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
		Scale 0.01;
		RenderStyle "Add";
		Alpha 0.4;
	Translation "80:111=160:167"
	}
	States
	{
	Spawn:
		IAGL A 1 A_FadeOut (0.1);
		Loop;
}
}
class DUMP3IAPestMissileMode : Inventory { 
	Default {
	
	-INVBAR;
	+UNDROPPABLE;
	Inventory.MaxAmount 1;
	Inventory.Icon TNT1A0;
	}
}
class DUMP3IAAntiInstantFire : Inventory { 
	Default {
	
	-INVBAR;
	+UNDROPPABLE;
	Inventory.MaxAmount 1;
	Inventory.Icon TNT1A0;
	}
}
class DUMP3PestMissileProj : FastProjectile { 
	Default {
	
	Projectile;
	+RANDOMIZE;
	+FORCERADIUSDMG;
	+SEEKERMISSILE;
	+SCREENSEEKER;
	+THRUSPECIES;
	Species "Player";
	Radius 4;
	Height 4;
	Speed 50;
	Damage 8;
	Scale 0.4;
	Decal "Scorch";
	}
	States
	{
	Spawn:
		PMSL A 0;
		PMSL A 1 Bright A_SeekerMissile(16,16,1);
		PMSL A 0 A_SpawnItemEx("DUMP3PestMissileSmokeFX",random(-2,-3),random(3,-3),random(2,-3),0,0,0,0,32);
		PMSL A 1 Bright A_SeekerMissile(16,16,1);
		PMSL A 0 A_SpawnItemEx("DUMP3PestMissileSmokeFX",random(-2,-3),random(3,-3),random(2,-3),0,0,0,0,32);
		Loop;
	Death:
		TNT1 A 1 A_SpawnItemEx("DUMP3PestMissileExplosion",0,0,0,0,0,0,0,32);
		Stop;
}
}
class DUMP3PestMissileExplosion : actor { 
	Default {
	
	PROJECTILE;
	+Bright;
	+FORCERADIUSDMG;
	Radius 4;
	Height 4;
	Speed 0;
	RenderStyle "Add";
	Alpha 0.75;
	Scale 0.7;
	}
	States
	{
	Spawn:
		SHXP A 0;
		Goto Death;
	Death:
		SHXP A 0;
		SHXP A 0 A_PlaySound("ironannihilator/pestmissileexplode",5,1,0);
		SHXP A 0 A_Explode (110, 100);
		SHXP ABC 1;
		SHXP D 2 A_SetScale(1.2);
		SHXP E 2 A_SetTranslucent(0.4);
		TNT1 A 0 A_SetScale(0.9);
		SHXP F 2 A_SetTranslucent(0.2);
		Stop;
}
}
class DUMP3PestMissileSmokeFX : actor { 
	Default {
	
	Height 1;
	Radius 1;
	+MISSILE;
	+NOGRAVITY;
	+NOINTERACTION;
	+NOBLOCKMAP;
	+DONTSPLASH;
	+THRUactorS;
	+CLIENTSIDEONLY;
	RenderStyle "Add";
	Scale 0.5;
	Alpha 0.8;
	}
	States
	{
	Spawn:
		TNT1 A 2;
		RTRL A 2 A_SetTranslucent(0.7, 1);
		RTRL B 1 A_SetTranslucent(0.6, 1);
		RTRL C 1 A_SetTranslucent(0.55, 1);
		RTRL D 1 A_SetTranslucent(0.5, 1);
		RTRL E 2 A_SetTranslucent(0.45, 1);
		RTRL F 1 A_SetTranslucent(0.35, 1);
		RTRL G 1 A_SetTranslucent(0.3, 1);
		RTRL H 1 A_SetTranslucent(0.25, 1);
		RTRL I 2 A_SetTranslucent(0.2, 1);
		RTRL J 1 A_SetTranslucent(0.15, 1);
		RTRL K 1 A_SetTranslucent(0.1, 1);
		RTRL L 1 A_SetTranslucent(0.05, 1);
		Stop;
}
}
class DUMP3CactusPipe : DUMP3weapon { 
	Default {
	
	Inventory.PickupMessage "What the hell did I just pick up?";
	Weapon.AmmoGive 12;
	Weapon.AmmoGive2 24;
	Weapon.AmmoUse 1;
	Weapon.AmmoUse2 3;
	Weapon.AmmoType1 "Rocketammo";
	Weapon.AmmoType2 "Clip";
	Tag "Cactus Pipe - [CactusHege]";
	+WEAPON.Ammo_CHECKBOTH;
	}
	States
	{
	Spawn: 
		TEMP F -1;
		Stop;
	Ready: 
		TEMP A 1 A_WeaponReady();//(WRF_ALLOWZOOM)
		Loop;
	DeSelect: 
		TNT1 A 0 A_Lower();
		TEMP A 1 A_Lower();
		Loop;
	Select: 
		TNT1 A 0 A_Raise();
		TEMP A 1 A_Raise();
		Loop;
	Reload:
		TEMP A 2;
		TEMP D 7;
		TEMP E 2 A_GunFlash();
		TEMP EEE 8 A_FireCustomMissile("DUMP3bubble3",random(-4,4),0,random(-1,1),7);
		TEMP E 16 A_Playsound("pop/hiss");
		Goto Ready;
	Fire: 
		TEMP A 0;
		TEMP A 0 A_JumpIfInventory("Rocketammo",1,"Continue2");
		TEMP A 0;
		Goto Reload;
	Continue2:
		TEMP A 3;
		TEMP A 7 A_JumpIfNoammo("Reload");
		TEMP B 7 A_GunFlash();
		TNT1 A 0 A_AlertMonsters();
		TEMP B 0 A_FireCustomMissile("DUMP3Buffs2",0,0,0,2);
		TEMP C 7 A_FireCustomMissile("DUMP3Spikes2",0,1,0,0,0);
		TEMP B 4();
		TEMP D 7 A_ReFire("Fire");
		TEMP D 0;
		Goto Ready;
	Hold:
		TEMP A 0;
		TEMP A 1 A_JumpIfNoammo("Reload");
		TEMP D 0 A_ClearReFire();
		Goto Ready;
	AltFire:  
		TEMP A 0;
		TEMP A 0 A_JumpIfInventory("Clip",3,"Continue");
		TEMP A 0;
		Goto Reload;
	Continue:
		TEMP A 1 A_JumpIfNoammo("Reload");
		TEMP B 1 A_GunFlash();
		TNT1 A 0 A_AlertMonsters();
		TEMP C 1 A_FireCustomMissile("DUMP3Spikes3",random(-5,5),1,random(-4,4),random(-4,4),0);
		TEMP B 1();
		TEMP D 1 A_ReFire("AltFire");
		TEMP D 0;
		Goto Ready;
	Flash: 
		PUFI IJK 2();
		TNT1 A 0 A_FireCustomMissile("DUMP3Buffs2",0,0,0,2);
		Stop;
	DropGunPickup:
		"####" "#" 0 A_TakeInventory("DUMP3RocketLauncherSlotFilled",1);
		"####" "#" 0 A_TakeInventory("DUMP3CactusPipe",1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
	RerollGun:
		"####" "#" 0 A_GiveInventory ("DUMP3RocketLauncherReroll", 1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
}
}
class DUMP3Buffs2 : actor { 
	Default {
	
	Radius 6;
	Height 16;
	Speed 3;
	damage 0;
	Projectile;
	+noclip;
	RenderStyle "Add";
	Scale 0.5;
	Alpha 0.3;
	}
	States
	{
	Spawn:
		PUFI AB 1 Bright;
		PUFI CD 1 Bright;
		Goto Death;
	Death:
		PUFI EFGH 1 Bright;
		Stop;
}
}
class DUMP3Bubble3 : actor { 
	Default {
	
	Radius 6;
	Height 16;
	Speed 3;
	damage 0;
	Projectile;
	+noclip;
	RenderStyle "Add";
	Scale 0.1;
	Alpha 0.6;
	}
	States
	{
	Spawn:
		GBLL A 1();
		Goto Fly;
	Fly:
		GBLL A 1 A_Stop();
		GBLL A 1 Bright Thrustthingz(0,1,0,1);
		GBLL BCBC 3 Bright A_Weave(1,0,1,0);
		GBLL BCBC 3 Bright A_Weave(1,0,-1,0);
		GBLL BCBC 3 Bright A_Weave(1,0,1,0);
		GBLL BCBC 3 Bright A_Weave(1,0,-1,0);
		Goto Death;
	Death:
		GBLL ABCC 6 Bright A_Fadeout(0.2);
		Stop;
}
}
class DUMP3Spikes1 : actor { 
	Default {
	
	Radius 3;
	Height 5;
	Speed 75;
	Damage (random(2,7));
	Projectile;
	+Ripper;
	+THRUSPECIES;
	Species "Player";
	SeeSound "pop/popit";
	DeathSound "pop/popit";
	Scale 0.5;
	Decal BulletChip;
	}
	States
	{
	Spawn:
		BLAD A 1();
		BLAD A 1();
		Loop;
	Death:
		BLAD A 3 Bright;
		PUFI CFH 1 Bright;
		Stop;
}
}
class DUMP3Spikes3 : actor { 
	Default {
	
	Radius 5;
	Height 8;
	Speed 45;
	Damage (random(7,16));
	Projectile;
	+Ripper;
	+THRUSPECIES;
	Species "Player";
	SeeSound "pop/popit";
	DeathSound "pop/popit";
	Scale 0.75;
	Decal BulletChip;
	}
	States
	{
	Spawn:
		BLAD A 2();
		BLAD A 2();
		Loop;
	Death:
		BLAD A 6 Bright;
		PUFI CFH 1 Bright;
		Stop;
}
}
class DUMP3Spikes2 : actor { 
	Default {
	
	Radius 8;
	Height 12;
	Speed 28;
	Damage (random(45,128));
	Projectile;
	-NOGRAVITY;
	+BounceOnWalls;
	+Lowgravity;
	+THRUSPECIES;
	Species "Player";
	BounceType Doom;
	BounceCount 7;
	BounceFactor 1.1;
	WallBounceFactor 1.1;
	SeeSound "pop/fires";
	DeathSound  "weapons/rocklx";
	Bouncesound "pop/bounce";
	Scale 1.25;
	Decal BulletChip;
	}
	States
	{
	Spawn:
		RIP1 ABC 4 Bright ();
		RIP1 C 0 Bright A_Jump(12,"Death");
		RIP1 C 0 Bright;
		RIP1 C 0 Bright;
		Loop;
	Death:
		RIP1 D 0 A_Stop();
		RIP1 D 0 A_ChangeFlag ("NOGRAVITY", 1);
		RIP1 D 0 A_NoBlocking();
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 0);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 10);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 20);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 30);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 40);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 50);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 60);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 70);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 80);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 90);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 100);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 110);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 120);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 130);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 140);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 150);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 160);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 180);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 190);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 200);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 210);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 220);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 230);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 240);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 250);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 260);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 270);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 280);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 290);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 300);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 310);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 320);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 330);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 340);
		RIP1 H 0 A_CustomMissile("DUMP3Spikes1", 0, 0, 350);
		RIP1 DEFGH 5 Bright A_Explode(random(20,30),88);// THAS A LOT O KABOOM also it's obnoxious as all hell to get smacked in the face by this
		Stop;
}
}
class DUMP3Fusion_Gun : DUMP3weapon { 
	Default {
	
	Inventory.PickupMessage "You got the modded Fusion Gun!";
	Weapon.AmmoType "Cell";
	Weapon.AmmoUse 2;
	Weapon.AmmoType2 "Cell";
	Weapon.AmmoUse2 10;
	Weapon.AmmoGive 30;
	Tag "Fusion Gun - [General Tacticus]";
	XScale 2.0;
	YScale 2.4;
	AttackSound "fusion/fire";
	}
	States
	{
	Spawn:
		FUSP Z -1;
		Stop;
	Ready:
		FUSP A 1 A_WeaponReady();//(WRF_ALLOWZOOM)
		Loop;
	Select:
		TNT1 A 0 A_Raise();
		FUSP A 1 A_Raise();
		Loop;
	DeSelect:
		TNT1 A 0 A_Lower();
		FUSP A 1 A_Lower();
		Loop;
	Fire:
		TNT1 A 0 A_JumpIfInventory("Cell",2,2);
		FUSP A 1 A_WeaponReady (WRF_NOFIRE);
		Goto Ready;
		TNT1 A 0 A_AlertMonsters();
		FUSP B 1 Bright A_FireCustomMissile("DUMP3Minor_Fusion_Bolt");
		FUSP C 1 A_PlaySound ("fusion/fire", CHAN_weapon, 1, 0, 1);
		FUSP D 1;
		FUSP E 1;
		FUSP F 1;
		FUSP G 1;
		FUSP H 1;
		FUSP I 1;
		FUSP J 1;
		FUSP A 1;
		Goto Ready;
	altFire:
		TNT1 A 0 A_JumpIfInventory("Cell",2,2);// PP: They cost more than two cells? Well, it is based on Marathon's Fusion Pistol...
		FUSP A 1 A_WeaponReady (WRF_NOFIRE);
		Goto Ready;
		TNT1 A 0 A_AlertMonsters();
		FUSP A 35 A_PlaySound ("fusion/charging", CHAN_weapon, 1, 0, 1.2);//WTH WONT THIS WORK // because you did it weird
		TNT1 A 0 A_AlertMonsters();
		FUSP B 1 Bright A_FireCustomMissile("DUMP3Major_Fusion_Bolt");
		FUSP B 0 A_ZoomFactor(1.05, 1);
		FUSP B 0 A_ZoomFactor(1.0);
		FUSP B 0 A_Recoil(1);
		FUSP C 1 A_PlaySound ("fusion/chargefire", CHAN_weapon, 1, 0, 0.8);
		FUSP D 1;
		FUSP E 1;
		FUSP F 1;
		FUSP G 1;
		FUSP H 1;
		FUSP I 1;
		FUSP J 1;
		FUSP A 2;
		Goto Ready;
	DropGunPickup:
		"####" "#" 0 A_TakeInventory("DUMP3PlasmaRifleSlotFilled",1);
		"####" "#" 0 A_TakeInventory("DUMP3Fusion_Gun",1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
	RerollGun:
		"####" "#" 0 A_GiveInventory ("DUMP3PlasmaRifleReroll", 1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
}
}
class DUMP3Fusion_Splash : actor { 
	Default {
	
	Scale .5;
	Alpha 1;
	Renderstyle "Add";
	DeathSound "fusion/hit";
	+NOINTERACTION;
	+PUFFONactorS;
	+NOGRAVITY;
	+ALWAYSPUFF;
	+CLIENTSIDEONLY;
	}
	States
	{
	Spawn:
		TNT1 A 0();//A_PlaySound ("on/fire", 1, 3, 0, 1) //SUCH PUNS
		TNT1 A 0 A_Jump(256,"Spawn1","Spawn2","Spawn3");
	Spawn1:
		SAFP A 2 Bright;
		SAFP B 2 Bright A_Quake(1,6,0,75, "");
		SAFP C 2 Bright;
		SAFP D 2 Bright;
		SAFP E 2 Bright;
		SAFP F 2 Bright;
		SAFP G 2 Bright;
		SAFP H 2 Bright;
		SAFP I 2 Bright;
		Stop;
	Spawn2:
		SBFP A 2 Bright;
		SBFP B 2 Bright A_Quake(1,6,0,75, "");
		SBFP C 2 Bright;
		SBFP D 2 Bright;
		SBFP E 2 Bright;
		SBFP F 2 Bright;
		SBFP G 2 Bright;
		SBFP H 2 Bright;
		SBFP I 2 Bright;
		Stop;
	Spawn3:
		SCFP A 2 Bright;
		SCFP B 2 Bright A_Quake(1,6,0,75, "");
		SCFP C 2 Bright;
		SCFP D 2 Bright;
		SCFP E 2 Bright;
		SCFP F 2 Bright;
		SCFP G 2 Bright;
		SCFP H 2 Bright;
		Stop;
}
}
class DUMP3Major_Fusion_Bolt : FastProjectile { 
	Default {
	
	XScale 0.5;
	YScale 0.4;
	Renderstyle "Add";
	DeathSound "";
	Radius 8;
	Height 4;
	Speed 80;
	Damage (300);// Because I moved this to Plasma Rifle tier, the damage had to be drastically scaled up to accomodate the mad deeps.
	Projectile;
	Decal "DUMP3FusionScorchLarge";//"SCORCH"
	MissileHeight 8;
	MissileType "Fusion_Trail";
	+THRUSPECIES;
	Species "Player";
	}
	States
	{
	Spawn:
		PROJ A 1 Bright;
		Loop;
	Death:
		CHGS A 2 Bright A_PlaySound ("on/fire", 7, 1, 0, 1);//SUCH PUNS // setting volume above 1 doesn't do anything
		TNT1 A 0 A_Quake(2,6,0,200, "");
		TNT1 A 0 A_PlaySound ("fusion/hit", CHAN_weapon, 1, 0, 0.8);
		CHGS B 2 Bright A_SpawnItemEx ("DUMP3Ash_cloud", 1,0,8, 0,0,0, 0, SXF_NOCHECKPOSITION);
		CHGS C 2 Bright;
		CHGS D 2 Bright;
		CHGS E 2 Bright;
		CHGS F 2 Bright;
		CHGS G 2 Bright;
		CHGS H 2 Bright;
		CHGS I 2 Bright;
		Stop;
}
}
class DUMP3Minor_Fusion_Bolt : actor { 
	Default {
	
	XScale 0.3;
	YScale 0.24;
	Renderstyle "Add";
	DeathSound "";
	Radius 8;
	Height 4;
	Speed 60;
	Damage (60);
	Projectile;
	Decal "DUMP3FusionScorchSmall";//"DoomImpScorch"
	+THRUSPECIES;
	Species "Player";
	}
	States
	{
	Spawn:
		BOLT A 2 Bright;
		BOLT B 2 Bright;
		BOLT C 2 Bright;
		Loop;
	Death:
		TNT1 A 0 A_PlaySound ("fusion/hit", CHAN_weapon, 0.8, 0, 1.4);
		TNT1 A 30 A_SpawnItemEx ("DUMP3Fusion_Splash", 1,0,8, 0,0,0, 0, SXF_NOCHECKPOSITION);
		Stop;
}
}
class DUMP3Fusion_Trail : actor { 
	Default {
	
	XScale 0.5;
	YScale 0.4;
	Alpha 1;
	Renderstyle "Add";
	+NOINTERACTION;
	+NOGRAVITY;
	+CLIENTSIDEONLY;
	}
	States
	{
	Spawn:
		TRAL A 1 Bright A_FadeOut(0.25);
		Loop;
}
}
class DUMP3Ash_Cloud : actor { 
	Default {
	
	Scale .33;
	Alpha .2;
	Renderstyle "Translucent";//"Subtract"
	+NOINTERACTION;
	+NOGRAVITY;
	+CLIENTSIDEONLY;
	}
	States
	{
	Spawn:
		FSMK A 3  A_Fadein(0.20);
		FSMK B 3  A_Fadein(0.20);
		FSMK C 3;
		FSMK D 3;
		FSMK E 3;
		FSMK F 3;
		FSMK G 4;
		FSMK H 4;
		FSMK I 4;
		FSMK J 4;
		Stop;
}
}
class DUMP3SirusBusterCannon : DUMP3weapon { 
	Default {
	
	Weapon.AmmoGive 50;
	Weapon.AmmoType1 "Cell";
	Weapon.AmmoUse1 1;
	+ammo_Optional;
	+NOALERT;
	Decal "RailScorchLower";
	Obituary "%o was neutralized by a beam cannon.";
	Tag "Sirus' Buster Cannon - [Silentdarkness12]";
	Inventory.PickupMessage "You acquired Sirus' Buster Cannon!";
	}
	States
	{
	Ready:
		SARC ABCDEFGGFEDCBA 2 A_WeaponReady();//(WRF_ALLOWZOOM)
		Loop;
	Select:
		TNT1 A 0 A_Raise();
		SARC A 1 A_Raise();
		Loop;
	DeSelect:
		TNT1 A 0 A_PlaySound(CHAN_weapon);// Your arcblast will play forever if you die.
		TNT1 A 0 A_Lower();
		SARC A 1 A_Lower();
		Loop;
	Fire:
		SARC HIJKLMNO 2;
		TNT1 A 0 A_JumpIfInventory("DUMP3SirusBusterCannonMode",2,"FireLightningBall",AAPTR_DEFAULT);
		TNT1 A 0 A_JumpIfInventory("DUMP3SirusBusterCannonMode",1,"FireTargetStrike",AAPTR_DEFAULT);
		Goto FireArcBlast;
	FireArcBlast:
		TNT1 A 0 A_JumpIfInventory("Cell",3,2,AAPTR_DEFAULT);// Increased to 3 because jesus christ the ammo efficiency is over 5x the plasma rifle
		TNT1 A 0 A_Jump(256,"Failure");
		TNT1 A 0 A_AlertMonsters();
		SARC P 1 Bright A_PlaySound("sirusbeamcannon/beamstart",CHAN_weapon,1.0,false,ATTN_NORM);
		SARC P 2 Bright A_RailAttack(45,random(7,-7),true,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		TNT1 A 0 A_RailAttack(45,random(7,-7),true,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		TNT1 A 0 A_RailAttack(45,random(7,-7),true,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		TNT1 A 0 A_RailAttack(45,random(7,-7),false,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		TNT1 A 0 A_RailAttack(45,random(7,-7),false,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		SARC Q 3 Bright;
		TNT1 A 0 A_Refire("ContinuousStream");
		//SARC R 6 A_PlaySound("sirusbeamcannon/beamend",CHAN_weapon,1.0,false,ATTN_NORM)
		SARC M 1 A_PlaySound("sirusbeamcannon/beamend",CHAN_weapon,1.0,false,ATTN_NORM);
		SARC LKJIH 1;
		Goto Ready;
	ContinuousStream:
		TNT1 A 0 A_JumpIfInventory("Cell",3,3,AAPTR_DEFAULT);
		//TNT1 A 0 A_Jump(256,"Failure")
		TNT1 A 0 A_PlaySound("",CHAN_weapon,1.0,false,ATTN_NORM);
		SARC R 6 A_PlaySound("sirusbeamcannon/beamend",CHAN_weapon,1.0,false,ATTN_NORM);
		Goto Ready;
		TNT1 A 0 A_AlertMonsters();
		SARC P 1 Bright A_PlaySound("sirusbeamcannon/beamloop",CHAN_weapon,1.0,true,ATTN_NORM);
		SARC P 2 Bright A_RailAttack(45,random(7,-7),true,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		TNT1 A 0 A_RailAttack(45,random(7,-7),true,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		TNT1 A 0 A_RailAttack(45,random(7,-7),true,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		TNT1 A 0 A_RailAttack(45,random(7,-7),false,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		TNT1 A 0 A_RailAttack(45,random(7,-7),false,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		SARC Q 2 Bright A_RailAttack(45,random(7,-7),true,"none","7AB8CC",RGF_SILENT|RGF_NOPIERCING,40,"DUMP3LightningBeamPuff");
		TNT1 A 0 A_Refire("ContinuousStream");
		TNT1 A 0 A_PlaySound("",CHAN_weapon,1.0,false,ATTN_NORM);
		//SARC R 6 A_PlaySound("sirusbeamcannon/beamend",CHAN_weapon,1.0,false,ATTN_NORM)
		SARC M 1 A_PlaySound("sirusbeamcannon/beamend",CHAN_weapon,1.0,false,ATTN_NORM);
		SARC LKJIH 1;
		Goto Ready;
	FireTargetStrike:
		TNT1 A 0 A_JumpIfInventory("Cell",25,2,AAPTR_DEFAULT);
		TNT1 A 0 A_Jump(256,"Failure");
		SARC O 16;
		TNT1 A 0 A_AlertMonsters();
		SARC P 1 Bright A_PlaySound("sirusbeamcannon/beamstart",CHAN_weapon,1.0,false,ATTN_NORM);
		SARC P 2 Bright A_TakeInventory("Cell",25,TIF_NOTAKEINFINITE,AAPTR_DEFAULT);
		SARC Q 2 A_RailAttack(150,0,false,"none","FFFFFF",RGF_SILENT,0,"DUMP3LightningBeamPuff");
		Goto Ready;
	FireLightningBall:
		TNT1 A 0 A_JumpIfInventory("Cell",50,2,AAPTR_DEFAULT);
		TNT1 A 0 A_Jump(256,"Failure");
		TNT1 A 0 A_AlertMonsters();
		SARC P 2 Bright A_PlaySound("sirusbeamcannon/beamstart",CHAN_weapon,1.0,false,ATTN_NORM);
		SARC Q 2 Bright A_FireCustomMissile("DUMP3LightningOrbAttack",0,false,0,0,0,0);
		TNT1 A 0 A_TakeInventory("Cell",50,TIF_NOTAKEINFINITE,AAPTR_DEFAULT);
		//SARC R 6
		SARC MLKJIH 1;
		Goto Ready;
	Spawn:
		SARC SSSSSS 1;
		Loop;
	Failure:
		TNT1 A 0 A_StopSound(CHAN_weapon);
		SARC ONMLKJIH 2;
		Goto Ready;
	AltFire:
		SARC R 1 Offset(30,69);
		SARC R 1 Offset(26,57);
		SARC R 1 Offset(20,48);
		SARC R 1 Offset(11,41);
		SARC R 1 Offset(0,35);
	AltFire2:
		TNT1 A 0 A_JumpIfInventory("DUMP3SirusBusterCannonMode",2,"ArcBlastMode");
		TNT1 A 0 A_JumpIfInventory("DUMP3SirusBusterCannonMode",1,"LightningSphereMode");
		Goto TargetedBlastMode;
	TargetedBlastMode:
		TNT1 A 0 A_GiveInventory("DUMP3SirusBusterCannonMode",1);
		SARC R 6 A_Print("\cjTarget-Strike Mode",2.5,"SmallFont");// why the fuck did you have A_PrintBold
		Goto AltFireEnd;
	LightningSphereMode:
		TNT1 A 0 A_GiveInventory("DUMP3SirusBusterCannonMode",1);
		SARC R 6 A_Print("\cnElectro-Sphere Mode",2.5,"SmallFont");
		Goto AltFireEnd;
	ArcBlastMode:
		TNT1 A 0 A_TakeInventory("DUMP3SirusBusterCannonMode",2);
		SARC R 6 A_Print("\cvArc Blast Mode",2.5,"SmallFont");
		Goto AltFireEnd;
	AltFireEnd:
		SARC R 4;
		SARC R 0 A_Refire("AltFire2");
		SARC R 1 Offset(0,35);
		SARC R 1 Offset(4,41);
		SARC R 1 Offset(10,48);
		SARC R 2 Offset(19,57);
		SARC R 2 Offset(30,67);
		Goto Ready;
	DropGunPickup:
		"####" "#" 0 A_TakeInventory("DUMP3PlasmaRifleSlotFilled",1);
		"####" "#" 0 A_TakeInventory("DUMP3SirusBusterCannon",1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
	RerollGun:
		"####" "#" 0 A_GiveInventory ("DUMP3PlasmaRifleReroll", 1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
}
}
class DUMP3SirusBusterCannonMode : DUMP3Counter { 
	Default {
	
	Inventory.MaxAmount 2;
	}
}
class DUMP3LightningOrbAttack : actor { 
	Default {
	
	Projectile;
	+SEEKERMISSILE;
	+RIPPER;
	+THRUSPECIES;
	Species "Player";
	Damage 10;
	Radius 13;
	Height 8;
	MaxTargetRange 32;
	Speed 20;
	Decal "DUMP3ElectroLightning";//"PlasmaScorch"
	Obituary "o% was shocked by a powerful electric sphere.";
	HitObituary "o% was shocked by a powerful electric sphere.";
	}
	States
	{
	Spawn:
		PLSE A 0 Bright A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE,256,12);
		PLSE A 0 Bright A_JumpIfTracerCloser(/*Radius+*/32,"Death");
		PLSE AAA 1 Bright A_SetScale(ScaleX+0.15);
		PLSE A 0 Bright A_JumpIfTracerCloser(/*Radius+*/32,"Death");
		PLSE DAD 1 Bright A_SetScale(ScaleX-0.15);
		PLSE A 0 Bright A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE,256,12);
		PLSE A 0 Bright A_JumpIfTracerCloser(/*Radius+*/32,"Death");
		PLSE AAA 1 Bright A_SetScale(ScaleX-0.15);
		PLSE A 0 Bright A_JumpIfTracerCloser(/*Radius+*/32,"Death");
		PLSE CAC 1 Bright A_SetScale(ScaleX+0.15);
		//PLSS ABABAB 12 Bright A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE,256,12)
		//TNT1 A 0 A_PlaySound("sirusbeamcannon/electro",CHAN_AUTO,1.0,false,ATTN_NORM)
		Loop;
	Death:
		PLSE A 0 Bright A_Stop();
		PLSE A 0 Bright A_SetScale(ScaleX+0.5);
		PLSE A 0 Bright A_PlaySound("weapons/plasmax",CHAN_AUTO,1.0,false,ATTN_NORM);
		PLSE ABC 2 Bright A_Explode(400,580,0,true,520);
		PLSE DE 2 Bright;
		Stop;
}
}
class DUMP3LightningBeamPuff : BulletPuff { 
	Default {
	
	+MTHRUSPECIES;
	Species "Player";
	Decal "RailScorchLower";
	}
	States
	{
	Spawn:
		ELKP ABCDE 4 Bright;
		Stop;
}
}
class DUMP3Gibmaker : DUMP3weapon { 
	Default {
	
	Weapon.AmmoUse 2;
	Weapon.AmmoGive 20;
	Weapon.AmmoType "Cell";
	Weapon.AmmoUse2 15;
	Weapon.AmmoType2 "Cell";
	Decal "BulletChip";
	Inventory.PickupMessage "YOU WIELD THE GIBMAKER!";
	Obituary "%k made %o into salsa.";
	Tag "Gibmaker - [Sgt. Shivers]";
	}
   States
   {
	Ready:
		GBMK A 1 A_WeaponReady();//(WRF_ALLOWZOOM)
		Loop;
	DeSelect:
		GBMK A 0 A_TakeInventory ("DUMP3GibmakerWindupLevel", 3);
		TNT1 A 0 A_ClearRefire();// fixes dying and the hold state
		TNT1 A 0 A_StopSound(CHAN_weapon);// fixes dying while firing sound loop
		TNT1 A 0 A_Lower();
		GBMK A 1 A_Lower();
		Loop;
	Select:
		TNT1 A 0 A_Raise();
		GBMK A 1 A_Raise();
		Loop;
	Fire:
		TNT1 A 0 A_JumpIfInventory("Cell",2,3);
		GBMK A 1 A_WeaponReady (WRF_NOFIRE);
		GBMK A 2 A_Refire("Fire");
		Goto Ready;
		GBMK A 0 A_PlayweaponSound("Gibmaker/Spin");
		GBMK A 0 A_JumpIfInventory ("DUMP3GibmakerWindupLevel", 3, "Windup3");
		GBMK A 0 A_JumpIfInventory ("DUMP3GibmakerWindupLevel", 2, "Windup2");
		GBMK A 0 A_JumpIfInventory ("DUMP3GibmakerWindupLevel", 1, "Windup1");
		GBMK ABCD 3;
	Windup1:
		GBMK A 0 A_TakeInventory ("DUMP3GibmakerWindupLevel", 3);
		GBMK A 0 A_GiveInventory ("DUMP3GibmakerWindupLevel", 1);
		GBMK ABCD 3;
	Windup2:
		GBMK A 0 A_TakeInventory ("DUMP3GibmakerWindupLevel", 3);
		GBMK A 0 A_GiveInventory ("DUMP3GibmakerWindupLevel", 2);
		GBMK ABCD 2;
	Windup3:
		GBMK A 0 A_TakeInventory ("DUMP3GibmakerWindupLevel", 3);
		GBMK A 0 A_GiveInventory ("DUMP3GibmakerWindupLevel", 3);
		GBMK ABCD 1;
	Hold:
		TNT1 A 0 A_JumpIfNoammo("FireEnd");
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0();//A_JumpIf(CallACS("dump3_gunsmoke") == 0, 3) // skip the gunsmoke if disabled
		TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,3,7);
		TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,-3,7);
		TNT1 A 0();//A_JumpIf(CallACS("dump3_casings") == 0, 3) // skip the casings if disabled
		TNT1 A 0 A_FireCustomMissile ("DUMP3556mmCasingSpawner", 0,0,10,-2, 0);
		TNT1 A 0 A_FireCustomMissile ("DUMP3556mmCasingSpawner2", 0,0,-10,-2, 0);
		TNT1 A 0 A_Quake(1,10,0,32,"nil");
		TNT1 A 0 A_PlaySound("Gibmaker/Fire",CHAN_weapon,1,1, 0.6);
		TNT1 AAAA 0 A_FireCustomMissile("DUMP3GibmakerShotPuff",frandom(-12,12),0,0,0,0,frandom(-9,9));
		TNT1 A 0 A_FireBullets(4, 4, 2, 18, "DUMP3GibmakerPuff", FBF_NORANDOM | FBF_USEammo);
		TNT1 A 0 A_SetAngle(frandom(angle-(0.5 /* * CallACS("dump3_pitchrecoil")*/),angle+(0.5 /* * CallACS("dump3_pitchrecoil")*/)));//, SPF_INTERPOLATE)
		TNT1 A 0 A_Light(2);
		TNT1 A 0 A_Recoil(0.3);
		TNT1 A 0 A_JumpIfNoammo("FireEnd");
		GBMK E 1 Bright A_SetPitch (pitch-(0.2 /* * CallACS("dump3_pitchrecoil")*/));//, SPF_INTERPOLATE)
		TNT1 A 0 A_Light(1);
		TNT1 A 0();//A_JumpIf(CallACS("dump3_gunsmoke") == 0, 3) // skip the gunsmoke if disabled
		TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,3,7);
		TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,-3,7);
		TNT1 A 0();//A_JumpIf(CallACS("dump3_casings") == 0, 3) // skip the casings if disabled
		TNT1 A 0 A_FireCustomMissile ("DUMP3556mmCasingSpawner", 0,0,10,-2, 0);
		TNT1 A 0 A_FireCustomMissile ("DUMP3556mmCasingSpawner2", 0,0,-10,-2, 0);
		GBMK F 1 A_SetPitch (pitch+(0.2 /* * CallACS("dump3_pitchrecoil")*/));//, SPF_INTERPOLATE)
		TNT1 AAAA 0 A_FireCustomMissile("DUMP3GibmakerShotPuff",frandom(-12,12),0,0,0,0,frandom(-9,9));
		TNT1 A 0 A_FireBullets(4, 4, 2, 18, "DUMP3GibmakerPuff", FBF_NORANDOM | FBF_USEammo);
		TNT1 A 0 A_SetAngle(frandom(angle-(0.5 /* * CallACS("dump3_pitchrecoil")*/),angle+(0.5 /* * CallACS("dump3_pitchrecoil")*/)));//, SPF_INTERPOLATE)
		TNT1 A 0 A_Light(2);
		TNT1 A 0 A_Recoil(0.3);
		TNT1 A 0 A_JumpIfNoammo("FireEnd");
		GBMK G 1 Bright A_SetPitch (pitch-(0.2 /* * CallACS("dump3_pitchrecoil")*/));//, SPF_INTERPOLATE)
		TNT1 A 0 A_Light(1);
		GBMK H 1 A_SetPitch (pitch+(0.2 /* * CallACS("dump3_pitchrecoil")*/));//, SPF_INTERPOLATE)
		GBMK A 2 A_Refire("Hold");
	FireEnd:
		TNT1 A 0 A_PlaySound("Gibmaker/FireEnd",CHAN_weapon);
		TNT1 A 0 A_Light0();
		GBMK ABCD 2;
		TNT1 A 0 A_JumpIfNoammo(2);
		TNT1 A 0 A_Refire("Hold");
		GBMK ABCD 2;
		TNT1 A 0 A_JumpIfNoammo(2);
		TNT1 A 0 A_Refire("Hold");
		GBMK ABCD 2;
		TNT1 A 0 A_ClearRefire();
		GBMK A 0 A_TakeInventory ("DUMP3GibmakerWindupLevel", 3);
		GBMK A 0 A_GiveInventory ("DUMP3GibmakerWindupLevel", 2);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK A 3 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK B 3 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK C 3 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK D 3 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK A 3 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK B 3 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK C 3 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK D 3 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0 A_TakeInventory ("DUMP3GibmakerWindupLevel", 3);
		GBMK A 0 A_GiveInventory ("DUMP3GibmakerWindupLevel", 1);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK A 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK B 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK C 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK D 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK A 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK B 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK C 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0();//A_JumpIf(CallACS("DUMP3HS010_CheckPrimary") == 1, "Fire")
		GBMK D 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
		GBMK A 0 A_TakeInventory ("DUMP3GibmakerWindupLevel", 3);
		Goto Ready;
	Altfire:
		TNT1 A 0 A_JumpIfInventory("Cell",15,2);
		GBMK A 1 A_WeaponReady (WRF_NOFIRE);
		Goto Ready;
		GBMK IJ 2 Bright;
		GBMK K 6 Bright;
		TNT1 A 0 A_AlertMonsters();
		GBMK L 0 A_PlaySound("CrabRifle/Launch");
		GBMK L 2 Bright A_FireCustomMissile("DUMP3CrabGrenade",0,1,0,0,0,5);
		GBMK MN 2 Bright;
		GBMK O 0 A_PlaySound("CrabRifle/Launch");
		GBMK O 2 Bright A_FireCustomMissile("DUMP3CrabGrenade",0,0,0,0,0,5);
		GBMK PN 2 Bright;
		GBMK O 0 A_PlaySound("CrabRifle/Launch");
		GBMK O 2 Bright A_FireCustomMissile("DUMP3CrabGrenade",0,0,0,0,0,5);
		GBMK PQ 2 Bright;
		GBMK K 4 Bright;
		GBMK JI 2 Bright;
		GBMK A 7;
		Goto Ready;
	Noammo:
		TNT1 A 0 A_JumpIfInventory("Cell",2,"Fire");
		GBMK A 1 A_WeaponReady (WRF_NOFIRE);
		GBMK A 1 A_Refire("Noammo");
		Goto Ready;
	Spawn:
		GBMK Z -1;
		Stop;
		
	DropGunPickup:
		"####" "#" 0 A_TakeInventory("DUMP3BFG9000SlotFilled",1);
		"####" "#" 0 A_TakeInventory("DUMP3Gibmaker",1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
	RerollGun:
		"####" "#" 0 A_GiveInventory ("DUMP3BFG9000Reroll", 1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
}
}
class DUMP3GibmakerWindupLevel : Inventory { // Added for windup and down shenanigans
	Default {
	
	//+Inventory.UNTOSSABLE
	+Inventory.IGNORESKILL;
	Inventory.MaxAmount 3;
	}
}
class DUMP3GibmakerPuff : actor { 
	Default {
	
	+NOBLOCKMAP;
	+NOGRAVITY;
	+ALLOWPARTICLES;
	+RANDOMIZE;
	+EXTREMEDEATH;
	+MTHRUSPECIES;
	Species "Player";
	RenderStyle "Add";
	Alpha 0.7;
	Scale 0.2;
	Mass 5;
	}
  States
  {
	Spawn:
		GBBF A 0;
		GBBF A 0 A_SpawnItemEx("DUMP3GibmakerPuffParticle");
		GBBF A 2 Bright A_PlaySound("Gibmaker/Ricochet", 7, frandom(0.2,0.7), 0, frandom(1.0,1.8));
		GBBF BCDE 2 Bright;
		Stop;
}
}
class DUMP3GibmakerPuffParticle : actor { 
	Default {
	
	+NOBLOCKMAP;
	+NOGRAVITY;
	+ALLOWPARTICLES;
	+RANDOMIZE;
	+EXTREMEDEATH;
	RenderStyle "Add";
	Alpha 0.7;
	Mass 5;
	}
  States
  {
	Spawn:
		GBRC ABCDEFGH 3 Bright;
		Stop;
}
}
class DUMP3GibmakerShotPuff : actor { 
	Default {
	
	+NOBLOCKMAP;
	+NOGRAVITY;
	+ALLOWPARTICLES;
	+RANDOMIZE;
	+EXTREMEDEATH;
	+MTHRUSPECIES;
	Species "Player";
	RenderStyle "Add";
	Alpha 0.7;
	Scale 0.5;
	Speed 12;
	Mass 5;
	}
  States
  {
	Spawn:
		PUFF ABCD 2 Bright;
		Stop;
}
}
class DUMP3CrabGrenade : actor { 
	Default {
	
	Radius 8;
	Height 8;
	Speed 25;
	Damage 20;
	Scale 1.5;
	RenderStyle "Add";
	Alpha 0.8;
	Projectile;
	-NOGRAVITY;
	+THRUSPECIES;
	Species "Player";
	Gravity 0.25;
	DeathSound "CrabRifle/Boom";
	Obituary "%o caught %k's grenade.";
	}
  States
  {
	Spawn:
		CGBL AAAABBBB 1 Bright A_SpawnItemEx("DUMP3CrabTrail",frandom(-3,3),frandom(-3,3),frandom(-3,3));
		Loop;
	Death:
		TNT1 AAAAAAAAAAAAAAA 0 A_SpawnItemEx("DUMP3CrabGoo",0, 0, 0, random(6,10), random(6,10), random(6,15), random(0, 360));
		CGHT A 4 Bright A_Explode();
		CGHT B 4 Bright;
		CGHT C 4 Bright;
		Stop;
}
}
class DUMP3CrabGoo : actor { 
	Default {
	
	Radius 5;
	Height 5;
	Scale 0.8;
	RenderStyle "Add";
	Alpha 0.7;
	+DROPOFF;
	+CORPSE;
	+NOTELEPORT;
	+FLOORCLIP;
	}
  States
  {
	Spawn:
		CGBL AB 5 A_SpawnItemEx("DUMP3CrabTrail");
		Loop;
	Crash:
		CGHT ABC 5;
		Stop;
}
}
class DUMP3CrabTrail : actor { 
	Default {
	
	Radius 5;
	Height 5;
	Scale 0.8;
	RenderStyle "Add";
	Alpha 0.7;
	+DROPOFF;
	+CORPSE;
	+NOTELEPORT;
	+FLOORCLIP;
	+NOGRAVITY;
	}
  States
  {
	Spawn:
		CGHT ABC 5;
		Stop;
}
}
class DUMP3DarkPulseCannon : DUMP3weapon { 
	Default {
	
	Weapon.AmmoUse1 1;
	Weapon.AmmoGive1 60;
	Weapon.AmmoType1 "Cell";
	Weapon.AmmoUse2 30;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType2 "Cell";
	+WEAPON.NOAUTOFIRE;
	Tag "Dark Pulse Cannon - [InsanityBringer]";
	Inventory.PickupMessage "Picked up the Dark Pulse Cannon.";
	}
	States
	{
	Ready:
		IBFG A 1 A_WeaponReady();//(WRF_ALLOWZOOM)
		Loop;
	DeSelect:
		IBFG A 1 A_Lower();
		Loop;
	Select:
		IBFG A 1 A_Raise();
		Loop;
	Fire:
		TNT1 A 0 A_JumpIfInventory("Cell",2,2);
		IBFG A 1 A_WeaponReady (WRF_NOFIRE);
		Goto Ready;
		IBFG B 5 Bright;
		TNT1 A 0 A_AlertMonsters();
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG C 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG C 5 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG D 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG D 5 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG A 0 A_Refire();
		Goto Cooldown;
	Hold:
		TNT1 A 0 A_JumpIfInventory("Cell",2,2);
		IBFG A 1 A_WeaponReady (WRF_NOFIRE);
		Goto Ready;
		TNT1 A 0 A_AlertMonsters();
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG C 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG C 5 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG D 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG D 5 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG A 0 A_Refire("Hold2");
		Goto Cooldown;
	Hold2:
		TNT1 A 0 A_AlertMonsters();
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG C 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG C 4 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG D 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG D 4 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG A 0 A_Refire("Hold3");
		Goto Cooldown;
	Hold3:
		TNT1 A 0 A_AlertMonsters();
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG C 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG C 4 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG D 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG D 4 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG A 0 A_Refire("Hold4");
		Goto Cooldown;
	Hold4:
		TNT1 A 0 A_AlertMonsters();
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG C 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG C 2 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG C 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG C 2 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG D 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG D 2 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG C 0 A_PlaySound("weapons/darkpulse", CHAN_weapon);
		IBFG D 0 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		IBFG D 2 Bright A_FireCustomMissile("DUMP3DarkPulse" , frandom(-10, 10), true, frandom(-4, 4), 0, 0, frandom(-4, 4));
		TNT1 A 0 A_JumpIfInventory("Cell",2,1);
		Goto Cooldown;
		IBFG A 0 A_Refire("Hold4");
		Goto Cooldown;
	Cooldown:
		IBFG BFGH 6 Bright;
		IBFG IJK 6;
		Goto Ready;
	AltFire:
		TNT1 A 0 A_JumpIfInventory("Cell",30,2);
		IBFG A 1 A_WeaponReady (WRF_NOFIRE);
		Goto Ready;
		TNT1 A 0 A_AlertMonsters();
		IBFG A 20 A_PlaySound("weapons/grenadecharge", CHAN_AUTO);
		IBFG A 0 A_PlaySound("weapons/grenadefire", CHAN_weapon);
		IBFG E 5 A_FireCustomMissile("DUMP3DarkGrenade", 0, true, 0, 0, 0, 2);
		IBFG A 25;
		Goto Ready;
	Spawn:
		IBFP A -1;
		Stop;
	DropGunPickup:
		"####" "#" 0 A_TakeInventory("DUMP3BFG9000SlotFilled",1);
		"####" "#" 0 A_TakeInventory("DUMP3DarkPulseCannon",1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
	RerollGun:
		"####" "#" 0 A_GiveInventory ("DUMP3BFG9000Reroll", 1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
}
}
class DUMP3DarkPulse : actor { 
	Default {
	
	Radius 13;
	Height 8;
	Speed 40;
	Damage 5;
	+THRUSPECIES;
	Species "Player";
	Projectile;
	RenderStyle "Translucent";
	Alpha 0.75;
	Decal "DUMP3DarkPulseScorch";
	DeathSound "weapons/plasmax";
	Obituary "%o was killed by %k's Dark Pulse Cannon";
	}
	States
	{
	Spawn:
		IBAL A 0;
		IBAL AB 2 A_SpawnItem("DUMP3DarkTrail");
		Loop;
	Death:
		IBAL C 6;
		IBAL D 6 A_Explode(32, 64, 0);
		IBAL E 6;
		Stop;
}
}
class DUMP3DarkGrenade : actor { 
	Default {
	
	Radius 13;
	Height 8;
	Speed 40;
	Damage 100;
	Projectile;
	-NOGRAVITY;
	+THRUSPECIES;
	Species "Player";
	Gravity 0.50;
	Scale 0.75;
	RenderStyle "Translucent";
	Alpha 0.75;
	Decal "DUMP3DarkPulseLightning";
	DeathSound "weapons/bfgx";
	Obituary "%o was vaporized by %k's Dark Pulse Grenade";
	}
	States
	{
	Spawn:
		IBFS AB 4 Bright;
		Loop;
	Death:
		IEXP A 5 Bright A_NoGravity();
		IEXP B 5 Bright A_Explode(256, 256, 0);
		IEXP CDEFG 5 Bright;
		Stop;
}
}
class DUMP3DarkTrail : actor { 
	Default {
	
	+NOBLOCKMAP;
	+NOGRAVITY;
	+CLIENTSIDEONLY;
	+NOINTERACTION;
	RenderStyle "Translucent";
	Alpha 0.80;
	}
	States
	{
	Spawn:
		ITRL ABCDEFG 4 A_FadeOut(0.05);
		Stop;
}
}
class DUMP3RevenantBox : DUMP3weapon { 
	Default {
	
	+WEAPON.Ammo_optional;
	scale 0.35;
	Inventory.PickupMessage "You found a box of pocket Revenants!";
	Tag "Revenant Box - [Combine_Kegan]";
	}
	States
	{
	Spawn:
		RBOX A 10;
		Loop;
	Select:
		TNT1 A 0;
		TNT1 AAAAAAA 0 a_raise();
		TNT1 AAAAAAA 1 a_raise();
		Loop;
	deSelect:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_jumpifInventory ("DUMP3doomguyReady",1,"doombonerdown");
		TNT1 A 0 a_jumpifInventory ("DUMP3goldenbonerReady",1,"goldenbonerdown");
		TNT1 A 0 a_playsound ("revbox/bonerdown",0,0.60);
		NRUP FDCBA 2;
		Goto realdeselect;
	doombonerdown:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("revbox/doombonerlower",0);
		DRUP FDCBA 2;
		Goto realdeselect;
	goldenbonerdown:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("revbox/goldenbonerlower",0);
		GBUP FDCBA 2;
		Goto realdeselect;
	realdeSelect:
		TNT1 A 0;
		TNT1 AAAAAAA 0 a_lower();
		TNT1 AAAAAAA 1 a_lower();
		Loop;
	Ready:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_jumpifInventory ("DUMP3doomguyReady", 1, "doomguyrevdraw");
		TNT1 A 0 a_jumpifInventory ("DUMP3goldenbonerReady", 1, "goldenbonerdraw");
		TNT1 A 0 a_jump (60, "doomguyrevdraw");
		TNT1 A 0 a_jump (60, "goldenbonerdraw");
	bonerup:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("skeleton/active",0,0.60);
		NRUP A 2;
		NRUP B 2;
		NRUP C 2;
		NRUP D 2;
		NRUP E 2;
		NRUP F 2;
		Goto realReady;
	realReady:
		NRUP F 1 A_WeaponReady();//(WRF_ALLOWZOOM)
		Loop;
	doomguyrevdraw:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("doomboner/sight",0,0.60);
		DRUP A 2;
		DRUP B 2;
		DRUP C 2;
		DRUP D 2;
		DRUP E 2;
		DRUP F 2 a_giveInventory ("DUMP3doomguyReady",1);
		Goto doomguyReady;
	doomguyReady:
		DRUP F 1 A_WeaponReady();//(WRF_ALLOWZOOM)
		Loop;
	goldenbonerdraw:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("goldboner/active",0,0.60);
		GBUP A 2;
		GBUP B 2;
		GBUP C 2;
		GBUP D 2;
		GBUP E 2;
		GBUP F 2 a_giveInventory ("DUMP3goldenbonerReady",1);
		Goto goldenbonerReady;
	goldenbonerReady:
		GBUP F 1 A_WeaponReady();//(WRF_ALLOWZOOM)
		Loop;
	fire:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_jumpifInventory ("DUMP3doomguyReady", 1, "doomguyattack");
		TNT1 A 0 a_jumpifInventory ("DUMP3goldenbonerReady", 1, "goldenbonerattack");
		NRAT ABC 2;
		TNT1 A 2;
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0 a_playsound ("revbox/bonermelee",0)();
		NRAT DEF 1;
		TNT1 A 0 a_firecustommissile ("DUMP3bonermelee");
		TNT1 A 0 a_jumpifInventory ("DUMP3bonerhit",1,"hitanimation");
		TNT1 A 0 a_jumpifInventory ("DUMP3bonerhit",1,"hitanimation");
		NRAT GH 1 a_jumpifInventory ("DUMP3bonerhit",1,"hitanimation");
		NRAT IJ 1;
		TNT1 A 4 a_takeInventory ("DUMP3bonerhit",99);
		Goto bonerup+4;
	hitanimation:
		RHIT ABCDE 2;
		TNT1 A 0 a_takeInventory ("DUMP3doomguyReady",99);
		TNT1 A 0 a_takeInventory ("DUMP3goldenbonerReady",99);
		TNT1 A 4 a_takeInventory ("DUMP3bonerhit",99);
		Goto Ready;
	doomguyattack:
		DRAT ABC 2;
		TNT1 A 2;
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0 a_playsound ("revbox/doommelee",0);
		DRAT DEF 1;
		TNT1 A 0 a_firecustommissile ("DUMP3doombonermelee");
		TNT1 A 0 a_jumpifInventory ("DUMP3bonerhit",1,"hitanimation");
		TNT1 A 0 a_jumpifInventory ("DUMP3bonerhit",1,"hitanimation");
		DRAT GH 1 a_jumpifInventory ("DUMP3bonerhit",1,"hitanimation");
		DRAT IJ 1;
		TNT1 A 4 a_takeInventory ("DUMP3bonerhit",99);
		Goto doomguyrevdraw+4;
	goldenbonerattack:
		GBAT ABC 2;
		TNT1 A 2;
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0 a_playsound ("revbox/goldmelee",0)();
		GBAT DEF 1;
		TNT1 A 0 a_firecustommissile ("DUMP3goldbonermelee");
		TNT1 A 0 a_jumpifInventory ("DUMP3bonerhit",1,"hitanimation");
		TNT1 A 0 a_jumpifInventory ("DUMP3bonerhit",1,"hitanimation");
		GBAT GH 1 a_jumpifInventory ("DUMP3bonerhit",1,"hitanimation");
		GBAT IJ 1;
		TNT1 A 4 a_takeInventory ("DUMP3bonerhit",99);
		Goto goldenbonerdraw+4;
	altfire:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_jumpifInventory ("DUMP3doomguyReady", 1, "doomguythrow");
		TNT1 A 0 a_jumpifInventory ("DUMP3goldenbonerReady", 1, "goldenbonerthrow");
		NRAT ABC 2;
		TNT1 A 2;
		NRAT DEF 1;
		TNT1 A 0 A_AlertMonsters();
		RTHW A 1 a_firecustommissile ("DUMP3thrownboner");
		RTHW BCDEF 1;
		TNT1 A 6;
		Goto Ready;
	doomguythrow:
		TNT1 A 0;
		TNT1 A 0;
		DRAT ABC 2;
		TNT1 A 2;
		DRAT DEF 1;
		TNT1 A 0 A_AlertMonsters();
		RTHW A 1 a_firecustommissile ("DUMP3throwndoomboner");
		RTHW BCDEF 1;
		TNT1 A 0 a_takeInventory ("DUMP3doomguyReady",99);
		TNT1 A 0 a_takeInventory ("DUMP3goldenbonerReady",99);
		TNT1 A 6;
		Goto Ready;
	goldenbonerthrow:
		TNT1 A 0;
		TNT1 A 0;
		GBAT ABC 2;
		TNT1 A 2;
		GBAT DEF 1;
		TNT1 A 0 A_AlertMonsters();
		RTHW A 1 a_firecustommissile ("DUMP3throwngoldenboner");
		RTHW BCDEF 1;
		TNT1 A 0 a_takeInventory ("DUMP3doomguyReady",99);
		TNT1 A 0 a_takeInventory ("DUMP3goldenbonerReady",99);
		TNT1 A 6;
		Goto Ready;
	DropGunPickup:
		"####" "#" 0 A_TakeInventory("DUMP3BFG9000SlotFilled",1);
		"####" "#" 0 A_TakeInventory("DUMP3RevenantBox",1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
	RerollGun:
		"####" "#" 0 A_GiveInventory ("DUMP3BFG9000Reroll", 1);
		"####" "#" 0 A_Jump(256, "Deselect");
		Goto Deselect;
}
}
class DUMP3Bonermelee : fastprojectile { 
	Default {
	
	Projectile;
	//projectilekickback 600
	speed 84;
	damage 10;
	Obituary "%o got destroyed by %k's pocket boner.";
	+BLOODSPLATTER;
	+dontblast;
	+forcepain;
	species "player";
	+THRUSPECIES;
	height 10;
	radius 10;
	+noblood;
	+NOEXTREMEDEATH;
	mass 1000000;
	}
	States
	{
	Spawn:
		BAL1 A 1;
		Stop;
	Death:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 radius_quake (1,5,0,8,0);
		TNT1 A 1();
		Stop;
	crash:
	Xdeath:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 A_giveInventory ("DUMP3bonerhit", 1, AAPTR_TARGET);
		TNT1 A 0 A_PlaySound("skeleton/melee", CHAN_AUTO);
		TNT1 A 0 radius_quake (2,3,0,10,0);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerSpawn");
		TNT1 AAAAA 0 a_Spawnitemex("DUMP3lilboner",0,0,0,random(-10,10),random(-10,10),5,0,SXF_NOCHECKPOSITION);
		TNT1 A 1 A_radiusthrust (10000,30);
		TNT1 A 4;
		Stop;
}
}
class DUMP3doombonermelee : DUMP3bonermelee { 
	Default {
	
	}
	States
	{
	crash:
	Xdeath:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 A_giveInventory ("DUMP3bonerhit", 1, AAPTR_TARGET);
		TNT1 A 0 A_PlaySound("doomboner/punch", CHAN_AUTO);
		TNT1 A 0 radius_quake (2,3,0,10,0);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerSpawn");
		TNT1 AAAAA 0 a_Spawnitemex("DUMP3lildoomboner",0,0,0,random(-10,10),random(-10,10),5,0,SXF_NOCHECKPOSITION);
		TNT1 A 1 A_radiusthrust (10000,30);
		TNT1 A 4;
		Stop;
}
}
class DUMP3goldbonermelee : DUMP3bonermelee { 
	Default {
	
	}
	States
	{
	crash:
	Xdeath:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 A_giveInventory ("DUMP3bonerhit", 1, AAPTR_TARGET);
		TNT1 A 0 A_PlaySound("goldboner/punch", CHAN_AUTO);
		TNT1 A 0 radius_quake (2,3,0,10,0);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerSpawn");
		TNT1 AAAAA 0 a_Spawnitemex("DUMP3goldenboner",0,0,0,random(-10,10),random(-10,10),5,0,SXF_NOCHECKPOSITION);
		TNT1 A 1 A_radiusthrust (10000,30);
		TNT1 A 4;
		Stop;
}
}
class DUMP3thrownboner : actor { 
	Default {
	
	Projectile;
	speed 45;
	damage 10;
	Obituary "%o got destroyed by %k's pocket boner.";
	+BLOODSPLATTER;
	+dontblast;
	+forcepain;
	species "player";
	+THRUSPECIES;
	height 10;
	radius 10;
	scale 0.45;
	+noblood;
	+NOEXTREMEDEATH;
	Decal "DUMP3RevenantCrash";
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0;
		SKEL T 2 a_playsound ("boner/shortAAA",6);
		SKEL U 2 a_playsound ("skeleton/swing",0);
		SKEL V 2 a_playsound ("boner/shortAAA",6);
		SKEL W 2 a_playsound ("skeleton/swing",0);
		Loop;
	death:
		SKEL N 2 a_playsound ("skeleton/death",0);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerboom");
		TNT1 AAAAAAA 0 a_Spawnitemex ("DUMP3bonegib",0,0,0,random(-10,10),random(-10,10),10);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerskull",0,0,0,random(-10,10),random(-10,10),10);
		FBXP CBD 2();
		Stop;
	crash:
	xdeath:
		FBXP CBD 2();
		TNT1 A 1 A_radiusthrust (10000,30);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerSpawn");
		TNT1 AAA 0 a_Spawnitemex("DUMP3lilboner",0,0,0,random(-5,5),random(-5,5),5,0,SXF_NOCHECKPOSITION);
		TNT1 A 4;
		Stop;
}
}
class DUMP3throwndoomboner : DUMP3thrownboner { 
	Default {
	
	Decal "DUMP3DoomguyRevenantCrash";
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0;
		DBNR R 2 a_playsound ("doomboner/swing",6,0.60);
		DBNR S 2 a_playsound ("doomboner/heh",0);
		DBNR T 2 a_playsound ("doomboner/swing",6,0.60);
		DBNR U 2 a_playsound ("doomboner/heh",0);
		Loop;
	death:
		DBNR L 2 a_playsound ("skeleton/death",0);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerboom");
		TNT1 AAAAAAA 0 a_Spawnitemex ("DUMP3bonegib",0,0,0,random(-10,10),random(-10,10),10);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerskull",0,0,0,random(-10,10),random(-10,10),10);
		FBXP CBD 2();
		Stop;
	crash:
	xdeath:
		FBXP CBD 2();
		TNT1 A 1 A_radiusthrust (10000,30);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerSpawn");
		TNT1 AAA 0 a_Spawnitemex("DUMP3lildoomboner",0,0,0,random(-5,5),random(-5,5),5,0,SXF_NOCHECKPOSITION);
		TNT1 A 4;
		Stop;
}
}
class DUMP3throwngoldenboner : DUMP3thrownboner { 
	Default {
	
	Decal "DUMP3RevenantCrash";
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0;
		GBNR R 2 a_playsound ("goldboner/swing",0);
		GBNR S 2 a_playsound ("goldboner/fly",0);
		GBNR T 2 a_playsound ("goldboner/swing",0);
		GBNR U 2 a_playsound ("goldboner/fly",0);
		Loop;
	death:
		GBNR N 2 a_playsound ("skeleton/death",0);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerboom");
		TNT1 AAAAA 0 a_Spawnitemex ("DUMP3goldbones",0,0,0,random(-10,10),random(-10,10),10);
		ISKL AA 0 a_Spawnitemex("DUMP3goldhipbone",0,0,0,random(-10,10),random(-10,10),10);
		ISKL A 0 a_Spawnitemex("DUMP3goldribcage",0,0,0,random(-10,10),random(-10,10),12);
		ISKL A 0 a_Spawnitemex("DUMP3goldskull",0,0,0,random(-10,10),random(-10,10),12);
		FBXP CBD 2();
		Stop;
	crash:
	xdeath:
		FBXP CBD 2();
		TNT1 A 1 A_radiusthrust (10000,30);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerSpawn");
		TNT1 AAA 0 a_Spawnitemex("DUMP3goldenboner",0,0,0,random(-5,5),random(-5,5),5,0,SXF_NOCHECKPOSITION);
		TNT1 A 4;
		Stop;
}
}
class DUMP3lilboner : actor { 
	Default {
	
	monster;
	Health 40;
	Radius 15;
	Height 40;
	scale 0.45;
	speed 14;
	mass 300;
	painchance 200;
	+friendly;
	MeleeRange 35;
	species "player";
	+THRUSPECIES;
	-solid;
	-countkill;
	SeeSound "skeleton/sight";
	PainSound "boner/pain";
	DeathSound "skeleton/death";
	ActiveSound "skeleton/active";
	MeleeSound "skeleton/melee";
	HitObituary "%o was punched in the junk by a lil skelly.";
	var int user_bonertimer;
	}
	States
	{
	Spawn:
		SKEL AB 10 A_Look();
		Goto idle;
	idle:
		TNT1 A 0;
		TNT1 A 0 a_jumpif (user_bonertimer >= 15, "death");
		TNT1 A 0 a_look();
		SKEL AABBCC 1 A_wander();
		TNT1 A 0 a_look();
		SKEL DDEEFF 1 A_wander();
		TNT1 A 0 a_look();
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		TNT1 A 0 a_jump (100, "dance");
		Loop;
	See:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_jumpif (user_bonertimer >= 15, "death");
		SKEL AABBCCDDEEFF 2 A_Chase();
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		TNT1 A 0 a_jump (100, "dance");
		TNT1 A 0 a_jump (50, "danceaway");
		Loop;
	Melee:
		SKEL G 0();
		SKEL G 4 A_SkelWhoosh();
		SKEL H 5 A_FaceTarget();
		SKEL I 6 A_custommeleeattack (random(3, 15), "skeleton/melee");
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		TNT1 A 0 a_jumpif (user_bonertimer >= 15, "death");
		TNT1 A 0 a_jump (80, "danceaway");
		Goto See;
	pain:
		SKEL L 5;
		SKEL L 5 A_Pain();
		Goto See;
	death:
		SKEL LM 5;
		SKEL N 2 A_Scream();
		SKEL O 2 A_NoBlocking();
		SKEL P 2;
		SKEL Q 1;
		TNT1 A 0 a_playsound ("weapons/rocklx",0,0.40,0,1.60);
		TNT1 AAAAAAA 0 a_Spawnitemex ("DUMP3bonegib",0,0,0,random(-10,10),random(-10,10),10,0);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerskull",0,0,0,random(-10,10),random(-10,10),10);
		FBXP CBD 2();
		Stop;
	dance:
		TNT1 A 0;
		TNT1 A 0;
		SKEL R 4 a_playsound ("boner/rattle",0);
		SKEL S 4;
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		SKEL R 4 a_chase();
		TNT1 A 0 a_playsound ("boner/rattle",0);
		SKEL S 4 a_chase();
		SKEL R 4 a_chase();
		SKEL S 4 a_chase();
		SKEL R 4 a_chase();
		SKEL S 4;
		Goto see;
	danceaway:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("boner/rattle",0);
		SKEL R 4 a_wander();
		SKEL S 4 a_wander();
		TNT1 A 0 a_playsound ("boner/rattle",0);
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		SKEL R 4();
		SKEL S 4();
		SKEL R 4 a_wander();
		SKEL S 4 a_wander();
		SKEL R 4 a_wander();
		SKEL S 4 a_wander();
		Goto see;
}
}
class DUMP3lildoomboner : DUMP3lilboner { 
	Default {
	
	SeeSound "doomboner/sight";
	PainSound "skeleton/pain";
	DeathSound "skeleton/death";
	ActiveSound "doomboner/active";
	}
	States
	{
	Spawn:
		DBNR AB 10 A_Look();
		Goto idle;
	idle:
		TNT1 A 0;
		TNT1 A 0 a_jumpif (user_bonertimer >= 15, "death");
		TNT1 A 0 a_look();
		DBNR AABBCC 1 A_wander();
		TNT1 A 0 a_look();
		DBNR DDEEFF 1 A_wander();
		TNT1 A 0 a_look();
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		TNT1 A 0 a_jump (100, "dance");
		Loop;
	See:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_jumpif (user_bonertimer >= 15, "death");
		DBNR AABBCCDDEEFF 2 A_Chase();
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		TNT1 A 0 a_jump (100, "dance");
		TNT1 A 0 a_jump (50, "danceaway");
		Loop;
	Melee:
		DBNR G 0();
		DBNR G 4 A_FaceTarget();
		DBNR H 5 A_FaceTarget();
		DBNR I 6 A_custommeleeattack (random(1, 10), "doomboner/punch","doomboner/swing");
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		TNT1 A 0 a_jumpif (user_bonertimer >= 15, "death");
		TNT1 A 0 a_jump (80, "danceaway");
		Goto See;
	pain:
		DBNR J 5;
		DBNR J 5 A_Pain();
		Goto See;
	death:
		DBNR JK 5;
		DBNR L 2 A_Scream();
		DBNR M 2 A_NoBlocking();
		DBNR N 2;
		DBNR O 1;
		TNT1 A 0 a_playsound ("weapons/rocklx",0,0.40,0,1.60);
		TNT1 AAAAAAA 0 a_Spawnitemex ("DUMP3bonegib",0,0,0,random(-10,10),random(-10,10),10);
		TNT1 A 0 a_Spawnitemex ("DUMP3bonerskull",0,0,0,random(-10,10),random(-10,10),10);
		FBXP CBD 2();
		Stop;
	dance:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("doomboner/dance",0,1,0,1.60);
		DBNR P 4;
		DBNR Q 4;
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		DBNR P 4 a_chase();
		DBNR Q 4 a_chase();
		DBNR P 4 a_chase();
		DBNR Q 4 a_chase();
		DBNR P 4 a_chase();
		DBNR Q 4;
		Goto see;
	danceaway:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("doomboner/dance",0,1,0,1.60);
		DBNR P 4 a_wander();
		DBNR Q 4 a_wander();
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		DBNR P 4();
		DBNR Q 4();
		DBNR P 4 a_wander();
		DBNR Q 4 a_wander();
		DBNR P 4 a_wander();
		DBNR Q 4 a_wander();
		Goto see;
}
}
class DUMP3goldenboner : DUMP3lilboner { 
	Default {
	
	SeeSound "goldboner/sight";
	PainSound "goldboner/pain";
	DeathSound "goldboner/death";
	ActiveSound "goldboner/active";
	}
	States
	{
	Spawn:
		GBNR AB 10 A_Look();
		Goto idle;
	idle:
		TNT1 A 0;
		TNT1 A 0 a_jumpif (user_bonertimer >= 15, "death");
		TNT1 A 0 a_look();
		GBNR AABBCC 1 A_wander();
		TNT1 A 0 a_look();
		GBNR DDEEFF 1 A_wander();
		TNT1 A 0 a_look();
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		TNT1 A 0 a_jump (100, "dance");
		Loop;
	See:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_jumpif (user_bonertimer >= 15, "death");
		GBNR AABBCCDDEEFF 2 A_Chase();
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		TNT1 A 0 a_jump (100, "dance");
		TNT1 A 0 a_jump (50, "danceaway");
		Loop;
	Melee:
		GBNR G 0();
		GBNR G 4 A_facetarget();
		GBNR H 5 A_FaceTarget();
		GBNR I 6 A_custommeleeattack (random(1, 10), "goldboner/punch","goldboner/swing");
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		TNT1 A 0 a_jumpif (user_bonertimer >= 15, "death");
		TNT1 A 0 a_jump (80, "danceaway");
		Goto See;
	pain:
		GBNR J 5;
		GBNR J 5 A_Pain();
		Goto See;
	death:
		GBNR JM 5;
		GBNR N 2 A_Scream();
		GBNR O 2 A_NoBlocking();
		GBNR P 2;
		GBNR Q 1;
		TNT1 A 0 a_playsound ("weapons/rocklx",0,0.40,0,1.60);
		TNT1 AAAAA 0 a_Spawnitemex ("DUMP3goldbones",0,0,0,random(-10,10),random(-10,10),10);
		ISKL AA 0 a_Spawnitemex("DUMP3goldhipbone",0,0,0,random(-10,10),random(-10,10),10);
		ISKL A 0 a_Spawnitemex("DUMP3goldribcage",0,0,0,random(-10,10),random(-10,10),12);
		ISKL A 0 a_Spawnitemex("DUMP3goldskull",0,0,0,random(-10,10),random(-10,10),12);
		FBXP CBD 2();
		Stop;
	dance:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("goldboner/laugh",0,1,0,1.80);
		GBNR K 4;
		GBNR L 4;
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		GBNR K 4 a_chase();
		GBNR L 4 a_chase();
		GBNR K 4 a_chase();
		GBNR L 4 a_chase();
		GBNR K 4 a_chase();
		GBNR L 4;
		Goto see;
	danceaway:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("goldboner/laugh",0,1,0,1.80);
		GBNR K 4 a_wander();
		GBNR L 4 a_wander();
		TNT1 A 0 a_setuservar("user_bonertimer", user_bonertimer+1);
		GBNR K 4();
		GBNR L 4();
		GBNR K 4 a_wander();
		GBNR L 4 a_wander();
		GBNR K 4 a_wander();
		GBNR L 4 a_wander();
		Goto see;
}
}
//============================================
//				BONE GIBS
//============================================
class DUMP3bonegib : actor { 
	Default {
	
	+notimefreeze;
	+cannotpush;
	+movewithsector;
	+dontsplash;
	+noblockmap;
	+missile;
	+doombounce;
	+thruspecies;
	Species "player";
	-nogravity;
	+FORCEXYBILLBOARD;
	+LOOKALLAROUND;
	+bounceonactors;
	damage (5);
	scale 1;
	Gravity 1.2;
	bouncecount 5;
	bouncefactor 0.60;
	Speed 5;
	}
	States
	{
	Spawn:
		RBNE ABCD 2;
		Loop;
	death:
		RBNE B 300;
		RBNE B 10 a_fadeout (0.25);
		RBNE B 10 a_fadeout (0.25);
		RBNE B 10 a_fadeout (0.25);
		RBNE B 10 a_fadeout (0.25);
		Stop;
}
}
class DUMP3bonerskull : DUMP3bonegib { 
	Default {
	
	scale 0.55;
	}
	States
	{
	Spawn:
		RVHD ABCD 2;
		Loop;
	death:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_jump (150, "dead2");
		RVHD D 300;
		RVHD D 10 a_fadeout (0.25);
		RVHD D 10 a_fadeout (0.25);
		RVHD D 10 a_fadeout (0.25);
		RVHD D 10 a_fadeout (0.25);
		Stop;
	dead2:
		RVHD B 300;
		RVHD B 10 a_fadeout (0.25);
		RVHD B 10 a_fadeout (0.25);
		RVHD B 10 a_fadeout (0.25);
		RVHD B 10 a_fadeout (0.25);
		Stop;
}
}
class DUMP3goldbones : DUMP3bonegib { 
	Default {
	
	scale 0.55;
	}
	States
	{
	Spawn:
		GBGB ABCD 2;
		Loop;
	death:
		GBGB C 300;
		GBGB C 10 a_fadeout (0.25);
		GBGB C 10 a_fadeout (0.25);
		GBGB C 10 a_fadeout (0.25);
		GBGB C 10 a_fadeout (0.25);
		Stop;
}
}
class DUMP3goldskull : DUMP3bonegib { 
	Default {
	
	scale 0.55;
	}
	States
	{
	Spawn:
		GSKL ABCD 2;
		Loop;
	death:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_jump (150, "dead2");
		GSKL D 300;
		GSKL D 10 a_fadeout (0.25);
		GSKL D 10 a_fadeout (0.25);
		GSKL D 10 a_fadeout (0.25);
		GSKL D 10 a_fadeout (0.25);
		Stop;
	dead2:
		GSKL B 300;
		GSKL B 10 a_fadeout (0.25);
		GSKL B 10 a_fadeout (0.25);
		GSKL B 10 a_fadeout (0.25);
		GSKL B 10 a_fadeout (0.25);
		Stop;
}
}
class DUMP3goldhipbone : DUMP3bonegib { 
	Default {
	
	scale 0.55;
	}
	States
	{
	Spawn:
		GHGB ABCD 2;
		Loop;
	death:
		GHGB C 300;
		GHGB C 10 a_fadeout (0.25);
		GHGB C 10 a_fadeout (0.25);
		GHGB C 10 a_fadeout (0.25);
		GHGB C 10 a_fadeout (0.25);
		Stop;
}
}
class DUMP3goldribcage : DUMP3bonegib { 
	Default {
	
	scale 0.55;
	}
	States
	{
	Spawn:
		GRGB ABCD 2;
		Loop;
	death:
		GRGB C 300;
		GRGB C 10 a_fadeout (0.25);
		GRGB C 10 a_fadeout (0.25);
		GRGB C 10 a_fadeout (0.25);
		GRGB C 10 a_fadeout (0.25);
		Stop;
}
}
class DUMP3bonerSpawn : actor { 
	Default {
	
	+NOINTERACTION;
	+clientsideonly;
	Radius 4;
	Height 5;
	Renderstyle "Add";
	Alpha 0.80;
	scale 0.50;
	+Bright;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("brain/spit",0,0.60);
		FIRE ABCDEFGH 1;
		Stop;
	death:
		TNT1 A 1;
		Stop;
}
}
class DUMP3bonerboom : actor { 
	Default {
	
	+NOINTERACTION;
	+clientsideonly;
	Radius 4;
	Height 5;
	Renderstyle "Add";
	Alpha 0.5;
	+Bright;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 a_playsound ("weapons/rocklx",0,0.80,0,1.60);
		MISL BCD 3 Bright a_fadeout (0.06);
		wait;
	death:
		TNT1 A 1;
		Stop;
}
}
class DUMP3bonerhit : Inventory { 
	Default {
	}
}
{Inventory.MaxAmount 1}
class DUMP3doomguyReady : Inventory { 
	Default {
	}
}
{Inventory.MaxAmount 1}
	actor DUMP3goldenbonerReady : Inventory
{Inventory.MaxAmount 1}
	actor DUMP3DualModeRifle : DUMP3weapon
		{
			Inventory.PickupMessage "You got the Dual Mode Rifle!"();
			Weapon.AmmoType "Clip";
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 20;
			Weapon.AmmoType2 "Shell";
			Weapon.AmmoUse2 1;
			Weapon.AmmoGive2 5;
			+WEAPON.Ammo_OPTIONAL;
			+WEAPON.ALT_ammo_OPTIONAL;
			+WEAPON.NOALERT;
			Tag "Dual Mode Rifle - [SMG_Marine]"();
			Weapon.UpSound "weapons/RMWepReady";
			Inventory.PickupSound "weapons/RMWepReady";
			States;
			{
			Spawn:
				RMDP A -1;
				Stop;
			Ready:
				RMDM A 1 A_WeaponReady();//(WRF_ALLOWZOOM)
				Loop;
			Select:
				TNT1 A 0 A_Raise();
				RMDM A 1 A_Raise();
				Loop;
			DeSelect:
				TNT1 A 0 A_Lower();
				RMDM A 1 A_Lower();
				Loop;
			Fire:
				TNT1 A 0 A_JumpIfInventory("Clip",1,2);
				RMDM A 1 A_WeaponReady (WRF_NOFIRE);
				Goto Ready;
				TNT1 A 0 A_AlertMonsters();
				TNT1 A 0();//A_JumpIf(CallACS("dump3_gunsmoke") == 0, 2) // skip the gunsmoke if disabled
				TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,0,6);
				TNT1 A 0();//A_JumpIf(CallACS("dump3_casings") == 0, 2) // skip the casings if disabled
				TNT1 A 0 A_FireCustomMissile ("DUMP3556mmCasingSpawner2", 0,0,-5,-3, 0);
				RMDM A 0 A_GunFlash();
				RMDM A 0 A_PlaySound("weapons/AutoShot");
				RMDM A 0 A_FireBullets(5,5,1,7,"DUMP3BulletPuff",1);
				TNT1 A 0();//A_JumpIf(CallACS("dump3_velocityrecoil") == 0, 2) // skip the recoil if disabled
				TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -0.35, 0, Sin(Pitch) * 0.35, 1);
				RMDM B 1 Offset(0,37);
				RMDM C 1 Offset(0,39);
				RMDM A 1 Offset(0,41);
				RMDM A 0 A_Refire();
				Goto Ready;
			AltFire:
				TNT1 A 0 A_JumpIfInventory("Shell",1,2);
				RMDM A 1 A_WeaponReady (WRF_NOFIRE);
				Goto Ready;
				TNT1 A 0 A_AlertMonsters();
				TNT1 A 0();//A_JumpIf(CallACS("dump3_gunsmoke") == 0, 2) // skip the gunsmoke if disabled
				TNT1 A 0 A_FireCustomMissile ("DUMP3GunSmokeSpawner", 0,0,0,9);
				TNT1 A 0();//A_JumpIf(CallACS("dump3_casings") == 0, 2) // skip the casings if disabled
				TNT1 A 0 A_FireCustomMissile ("DUMP3ShellCasingSpawner", 0,0,-5,-3, 0);
				RMDM A 0 A_GunFlash();
				TNT1 A 0();//A_JumpIf(CallACS("dump3_velocityrecoil") == 0, 2) // skip the recoil if disabled
				TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -3, 0, Sin(Pitch) * 3, 1);
				RMDM A 0 A_PlaySound("weapons/ShotShot");
				RMDM B 0 A_FireBullets(3, 3, 7, 5, "DUMP3BulletPuff", 1);
				RMDM B 1 Offset(0,42);//2
				RMDM C 1 Offset(0,48);//8
				RMDM A 2 Offset(0,49);//9
				RMDM A 4 Offset(0,50);//10
				RMDM A 2 Offset(0,49);//9
				RMDM A 1 Offset(0,48);//8
				RMDM A 1 Offset(0,44);//4
				RMDM A 1 Offset(0,42);//2
				RMDM A 1 Offset(0,40);//1
				RMDM A 1 Offset(0,39);
				RMDM A 1 Offset(0,38);
				RMDM A 1 Offset(0,37);
				Goto Ready;
			Flash:
				RMDF A 1 Bright A_Light2();
				RMDF B 1 Bright A_Light1();
				TNT1 A 1 A_Light0();
				Goto LightDone;
				
			DropGunPickup:
				"####" "#" 0 A_TakeInventory("DUMP3ChaingunSlotFilled",1);
				"####" "#" 0 A_TakeInventory("DUMP3DualModeRifle",1);
				"####" "#" 0 A_Jump(256, "Deselect");
				Goto Deselect;
			RerollGun:
				"####" "#" 0 A_GiveInventory ("DUMP3ChaingunReroll", 1);
				"####" "#" 0 A_Jump(256, "Deselect");
				Goto Deselect;
		}
	}
	
	// Armyman
	
	actor ArmymanAK47 : "DPT.HQ-Weapon" 26373
		{
			//$Category weapons
			Inventory.PickupMessage "You got the AK-47!"();
			Obituary "%o chewed on %k's Kalaschnikov."();
			Weapon.AmmoType1 "Clip";
			Weapon.AmmoUse1 1;
			Weapon.AmmoGive1 30;
			Scale 0.2;
			States;
			{
			Ready:
				6K47 A 1 A_WeaponReady();
				Loop;
			DeSelect:
				6K47 A 1 A_Lower();
				Loop;
			Select:
				6K47 A 1 A_Raise();
				Loop;
			Fire: 
				6K47 A 0 A_JumpIfNoammo("Ready");
				6K47 A 0 Bright A_PlaysoundEx("AMAK47FR","weapon");
				6K47 B 1 Bright A_FireBullets(2,3,-1,4,"BulletPuff",1,1280);
				6K47 C 1 Bright A_SpawnItemEx("MachineCasing",4,15,30,random(1,3),random(0,1),random(1,3),random(45,60),128);
				6K47 A 0 A_ALERTMONSTERS();
				6K47 A 1;
				6K47 A 0 Bright A_JumpIfNoammo("Ready");
				6K47 A 0 Bright A_ReFire();
				Goto Ready;
			Spawn:
				AKPK A -1;
				Stop;
		}
	}
	
	actor ArmymanRPD : "DPT.HQ-Weapon" 26374
		{ 
			Weapon.AmmoType "Clip";
			Weapon.AmmoGive 100;
			Weapon.AmmoUse 1;
			Inventory.PickupSound "misc/w_pkup";
			Inventory.PickupMessage "Found a RPD!"();
			Obituary "%o was Heavly Pelted by %k's RPD."();
			AttackSound "weapons/AK47";
			Decal BulletChip;
			States;
			{ 
			Spawn: 
				RPDP W -1();
				Loop;
			Ready: 
				RPDG A 1 A_WeaponReady();
				Loop;
			DeSelect: 
				RPDG A 1 A_Lower();
				Loop;
			Select: 
				RPDG A 1 A_Raise();
				Loop;
			Fire:  
				RPDF D 1 A_GunFlash();
				RPDF B 2 A_FireBullets(3, 3, 1, 5, "BulletPuff", 1);
				RPDF B 0 A_FireCustomMissile("762MMCasing",0,0,3,6);
				RPDF B 0 A_FireCustomMissile("Beltlink",0,0,3,6);
				RPDG D 2 A_CheckForReload(50, "Rest");
				RPDG A 0 A_PlaySound("weapons/Preload");
				RPDG FG 10;
				RPDG H 10 A_FireCustomMissile("EPTRPDMAG",0,0,3,6);
				RPDG A 0 A_PlaySound("weapons/Preload");
				RPDG IHKL 4;
				RPDG A 10 A_ResetReloadCounter();
				RPDG A 3 A_ReFire();
				Goto Ready;
			Rest:
				RPDG A 1();
				RPDG A 1 A_Refire();
				Goto Ready;
		}
	}
	
	actor CasingSmoketrail;
	{
		Speed 2;
		Height 2;
		Radius 4;
		PROJECTILE;
		+NOGRAVITY;
		Scale 0.5;
		RenderStyle "Add";
		Alpha 0.2;
		States;
		{
			Spawn:
				SMKE A 0;
				Goto death      ();
			Death: 
				SMKE ABCDEFGH 1;
				Stop     ();
		}
	}
	
	actor EPTRPDMAG;
	{
		Height 3.5;
		Radius 1.5;
		Speed 2;
		Mass 5;
		Scale 0.15;
		PROJECTILE;
		+DOOMBOUNCE;
		-NOGRAVITY;
		-NOBLOCKMAP;
		SeeSound "weapons/shellcasing";
		States;
		{
			Spawn:
				RPEB A 0();
				RPEB ABCD 1;
				Loop;
			Death:
				TNT1 A 0 A_jump(128,10);
				TNT1 A 0 A_jump(128,8);
				TNT1 A 0 A_jump(128,6);
				TNT1 A 0 A_jump(128,4);
				TNT1 A 0 A_jump(128,2);
				RPEB C -1;
				Stop;
				RPEB D -1;
				Stop;
				RPEB C -1;
				Stop;
				RPEB D -1;
				Stop;
				RPEB C -1;
				Stop;
				RPEB D -1;
				Stop;
		}
	}
	
	actor Beltlink;
	{
		Height 1;
		Radius 1;
		Speed 1;
		Mass 2;
		Scale 0.16;
		PROJECTILE;
		+DOOMBOUNCE;
		-NOGRAVITY;
		-NOBLOCKMAP;
		SeeSound "weapons/bulletcasing";
		States;
		{
			Spawn:
				SPCR ABCD 1;
				Loop;
			Death:
				TNT1 A 0 A_jump(128,10);
				TNT1 A 0 A_jump(128,8);
				TNT1 A 0 A_jump(128,6);
				TNT1 A 0 A_jump(128,4);
				TNT1 A 0 A_jump(128,2);
				SPCR A -1;
				Stop;
				SPCR B -1;
				Stop;
				SPCR C -1;
				Stop;
				SPCR D -1;
				Stop;
				SPCR C -1;
				Stop;
				SPCR B -1;
				Stop;
		}
	}
	
	actor 762MMCasing;
	{
		Height 3;
		Radius 3;
		Speed 2;
		Mass 5;
		Scale 0.16;
		PROJECTILE;
		+DOOMBOUNCE;
		-NOGRAVITY;
		-NOBLOCKMAP;
		SeeSound "weapons/bulletcasing";
		States;
		{
			Spawn:
				CAS3 A 0 A_CustomMissile("CasingSmoketrail",0,0,0);
				CAS3 ABCDEFGH 1;
				Loop;
			Death:
				TNT1 A 0 A_jump(128,10);
				TNT1 A 0 A_jump(128,8);
				TNT1 A 0 A_jump(128,6);
				TNT1 A 0 A_jump(128,4);
				TNT1 A 0 A_jump(128,2);
				CAS3 I -1;
				Stop;
				CAS3 J -1;
				Stop;
				CAS3 K -1;
				Stop;
				CAS3 L -1;
				Stop;
				CAS3 M -1;
				Stop;
				CAS3 N -1;
				Stop;
		}
	}
	
	actor ArmymanRPG7 : "DPT.HQ-Weapon" 26375
		{
			Obituary "%o rode %k's rocket" ();
			Weapon.AmmoType "Rocketammo";
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 1;
			+WEAPON.NOAUTOFIRE;
			States;
			{
			Ready:
				ARPG A 1 A_WeaponReady();
				Loop;
			DeSelect:
				ARPG A 1 A_Lower();
				Loop;
			Select:
				ARPG A 1 A_Raise();
				Loop;
			Fire: 
				ARPG B 0 A_PlayweaponSound("PLT027");
				ARPG B 3 A_FireCustomMissile("Rpg7Rocket");
				ARPG B 3;
				ARPG B 29;
				ARPG B 1 A_CheckReload();
				ARPG B 1 offset(1,51);
				ARPG B 1 offset(4,54);
				ARPG B 1 offset(7,57);
				ARPG B 1 offset(10,60);
				ARPG B 1 offset(13,63);
				ARPG B 1 offset(16,66);
				ARPG B 1 offset(19,69);
				ARPG B 1 offset(22,72);
				ARPG B 1 offset(26,76);
				ARPG B 1 offset(30,80);
				ARPG B 1 offset(34,84);
				ARPG B 1 offset(38,88);
				ARPG B 1 offset(42,92);
				ARPG B 1 offset(46,96);
				ARPG B 1 offset(54,104);
				ARPG B 1 offset(60,110);
				ARPG B 70 offset(40,120) A_PlayweaponSound("DSRLRELO");
				ARPG A 1 offset(60,110);
				ARPG A 1 offset(54,104);
				ARPG A 1 offset(46,96);
				ARPG A 1 offset(42,92);
				ARPG A 1 offset(38,88);
				ARPG A 1 offset(34,84);
				ARPG A 1 offset(30,80);
				ARPG A 1 offset(26,76);
				ARPG A 1 offset(22,72);
				ARPG A 1 offset(19,69);
				ARPG A 1 offset(16,66);
				ARPG A 1 offset(13,63);
				ARPG A 1 offset(10,60);
				ARPG A 1 offset(7,57);
				ARPG A 1 offset(4,54);
				ARPG A 1 offset(1,51);
				Goto Ready;
			Flash:
				TNT1 A 0 Bright A_Light1();
				TNT1 A 0 Bright A_Light0();
				Stop;
		}
	}
	
	actor Rpg7Rocket;
	{
		Radius 11;
		Height 8;
		Speed 70;
		scale 0.2;
		Projectile;
		DeathSound "weapons/rocklx";
		Obituary "%o rode %k's rocket.";
		States;
		{
			Spawn:
				RPGR A 1 Bright A_SpawnItem("RocketSmoke");
				RPGR A 1 A_PlaySound("rocket/fly");
				Loop;
			Death:
				TNT1 A 0 A_SpawnItem("Rpgexplod");
				EXPL T 0 A_PlaySound("nothing/fuckyou");
				Stop;
		}
	}
	
	actor Rpgexplod;
	{
		Radius 8;
		height 8;
		explosiondamage 200;
		+NOGRAVITY;
		explosionradius 300;
		Obituary "%o rode %k's rocket.";
		DeathSound "grenade/explode";
		States;
		{
			Spawn:
				TNT1 A 0;
				Goto Death;
			Death:
				EXPL S 0 A_Scream();
				EXPL S 2 A_Explode();
				EXPL R 2;
				EXPL Q 2;
				EXPL P 2;
				EXPL O 2;
				EXPL N 2;
				EXPL M 2;
				EXPL L 2;
				EXPL K 2;
				EXPL J 2;
				EXPL I 2;
				EXPL H 2;
				EXPL G 2;
				EXPL F 2;
				EXPL E 2;
				EXPL D 2;
				EXPL C 2;
				EXPL B 2;
				EXPL A 2;
				Stop;
		}
	}
	
	actor ArmymanSVD : "DPT.HQ-Weapon" 26376
		{
			Obituary "%o was sniped out by %k's M40"();
			Weapon.AmmoType "Clip";
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 7;
			+WEAPON.NOAUTOFIRE;
			States;
			{
			Ready:
				SVDR A 1 A_WeaponReady();
				Loop;
			DeSelect:
				SVDR A 1 A_Lower();
				Loop;
			Select:
				SVDR A 1 A_Raise();
				Loop;
			Fire: 
				SVDR B 0 A_PlaySound ("SVDFIRE", CHAN_weapon);
				SVDR B 3 A_FireBullets (0.0, 0.0, -1, 115, "M40Puff");
				SVDR B 13;
				SVDR E 0 A_PlaySound ("SVDREL", CHAN_weapon);
				SVDR CDE 7;
				Goto Ready;
		}
	}
	
	// LXandro weapons (Duke Nukem)
	
	actor LXandroChaingunCannon : "DPT.HQ-Weapon" 26392
		{
			//$Category weapons
			+WEAPON.CHEATNOTweapon;
			+Inventory.UNDROPPABLE;
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 20;
			Weapon.AmmoType "Clip";
			Inventory.PickupMessage "You got the chaingun cannon! Now it's time to kick some ass!"();
			Obituary "%k has kicked %o's ass with ripper chaingun"();
			States;
			{
			Ready:
				DNCG A 1 A_WeaponReady();
				Loop;
			DeSelect:
				DNCG AA 0 A_Lower();
				DNCG A 1 A_Lower();
				Loop;
			Select:
				DNCG AA 0 A_Raise();
				DNCG A 1 A_Raise();
				Loop;
			Fire:
				DNCG A 0 A_Jump(255, "Fire1", "Fire2", "Fire3", "Fire4");
			Fire1:
				DNCG A 0 A_PlaySound("DNCHNGFR", CHAN_weapon);
				DNCG B 2 A_FireBullets(5.6, 0, 1, 5, "BulletPuff");
				TNT1 A 0 A_Recoil(0.3);
				TNT1 A 0 A_SetRoll(Roll+1);
				TNT1 A 0 A_ZoomFactor(0.995);
				DNCG C 1();
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll+1);
				TNT1 A 0 A_ZoomFactor(0.99);
				DNCG I 1();
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNCG J 1();
				TNT1 A 0 A_ZoomFactor(1.00);
				TNT1 A 0 A_SetPitch(Pitch+1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNCG A 1 A_ReFire();
				Goto Ready;
			Fire2:
				DNCG A 0 A_PlaySound("DNCHNGFR", CHAN_weapon);
				DNCG D 2 A_FireBullets(5.6, 0, 1, 5, "BulletPuff");
				TNT1 A 0 A_Recoil(0.3);
				TNT1 A 0 A_SetRoll(Roll+1);
				TNT1 A 0 A_ZoomFactor(0.995);
				DNCG C 1();
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll+1);
				TNT1 A 0 A_ZoomFactor(0.99);
				DNCG I 1();
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNCG J 1();
				TNT1 A 0 A_ZoomFactor(1.00);
				TNT1 A 0 A_SetPitch(Pitch+1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNCG A 1 A_ReFire();
				Goto Ready;
			Fire3:
				DNCG A 0 A_PlaySound("DNCHNGFR", CHAN_weapon);
				DNCG E 2 A_FireBullets(5.6, 0, 1, 5, "BulletPuff");
				TNT1 A 0 A_Recoil(0.3);
				TNT1 A 0 A_SetRoll(Roll+1);
				TNT1 A 0 A_ZoomFactor(0.995);
				DNCG C 1();
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll+1);
				TNT1 A 0 A_ZoomFactor(0.99);
				DNCG I 1();
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNCG J 1();
				TNT1 A 0 A_ZoomFactor(1.00);
				TNT1 A 0 A_SetPitch(Pitch+1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNCG A 1 A_ReFire();
				Goto Ready;
			Fire4:
				DNCG A 0 A_PlaySound("DNCHNGFR", CHAN_weapon);
				DNCG E 2 A_FireBullets(5.6, 0, 1, 5, "BulletPuff");
				TNT1 G 0 A_Recoil(0.3);
				TNT1 A 0 A_SetRoll(Roll+1);
				TNT1 A 0 A_ZoomFactor(0.995);
				DNCG C 1();
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll+1);
				TNT1 A 0 A_ZoomFactor(0.99);
				DNCG I 1();
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNCG J 1();
				TNT1 A 0 A_ZoomFactor(1.00);
				TNT1 A 0 A_SetPitch(Pitch+1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNCG A 1 A_ReFire();
				Goto Ready;
			EndFire:
				DNCG A 0 A_ReFire();
				DNCG HIJK 1;
				Goto Ready;
			Spawn:
				DNCG Z -1;
				Stop;
		}
	}
	
	actor LXandroDevastator : "DPT.HQ-Weapon" 26393
		{
			//$Category weapons
			+WEAPON.CHEATNOTweapon;
			+Inventory.UNDROPPABLE;
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 20;
			Weapon.AmmoType "Clip";
			Inventory.PickupMessage "You got the devastator, now it's time to kick some ass!"();
			Obituary "%o couldn't evade %k rocket."();
			Weapon.kickback 60;
			attacksound "DNDEVAFR";
			States;
			{
			Spawn:
				DNDV Z -1;
				Stop;
			Ready:
				DNDV A 1 A_WeaponReady();
				Loop;
			Select:
				DNDV AA 0 A_Raise();
				DNDV A 1 A_Raise();
				Goto Ready;
			DeSelect:
				DNDV AA 0 A_Lower();
				DNDV A 1 A_Lower();
				Loop;
			Fire:
				DNDV A 0 A_JumpIfInventory ("LXDVChoosing",1,"RightGunShot");
				DNDV B 2;
				DNDV C 2;
				TNT1 A 0 A_Recoil(5);
				DNDV D 2 Bright A_FireCustomMissile ("LXandroDevastatorRocket",0,0,8,10,1);
				TNT1 A 0 Radius_Quake (3,4,0,1,0);
				DNDV C 2;
				DNDV B 2;
				DNDV A 4 A_GiveInventory ("LXDVChoosing",1);
				Goto Ready;
			RightGunShot:
				DNDV E 2;
				DNDV F 2;
				TNT1 A 0 A_Recoil(5);
				DNDV G 2 Bright A_FireCustomMissile ("LXandroDevastatorRocket",0,0,-8,10,1);
				TNT1 A 0 Radius_Quake (3,4,0,1,0);
				DNDV F 2;
				DNDV E 2;
				DNDV A 4 A_TakeInventory ("LXDVChoosing",1);
				Goto Ready;
		}
	}
	actor LXDVChoosing : Inventory
		{
			Inventory.Amount 1;
			Inventory.MaxAmount 1;
			States;
			{
			Spawn:
				TNT1 A -1;
				Stop;
		}
	}
	actor LXandroDevastatorRocket;
	{
		Speed 25;
		Scale 0.4;
		Radius 11;
		Height 8;
		Damage 20;
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+ROCKETTRAIL;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "%o rode %k's rocket.";
		States;
		{
			Spawn:
				MISL A 1 Bright;
				Loop;
			Death:
				EXPL A 3 Bright A_Explode();
				EXPL BCDEFGHIJKLMNOPQRST 2 Bright;
				Stop;
		}
	}
	
	actor LXandroPistol : "DPT.HQ-Weapon" 26394
		{
			//$Category weapons
			+WEAPON.CHEATNOTweapon;
			+Inventory.UNDROPPABLE;
			Weapon.AmmoType "clip";
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 50;
			Weapon.AmmoType2 "LXandroPistolClipHolder";
			Weapon.AmmoUse2 0;
			Weapon.AmmoGive2 12;
			AttackSound "DNPISTFR";
			decal BulletChip;
			Inventory.PickupMessage "You got the Pistol!"();
			Obituary "%o was shot up by %k's Pistol."();
			Inventory.PickupSound "DSPISTIN";
			+NOALERT;
			+ammo_OPTIONAL;
			Scale .5;
			States;
			{
			Spawn:
				DNPS Z -1;
				Stop;
			Ready:
				DNP1 A 1 A_WeaponReady();
				Loop;
			Select:
				TNT1 AA 0 A_Raise();
				DNP1 A 1 A_Raise();
				Loop;
			DeSelect:
				TNT1 AA 0 A_Lower();
				DNP1 A 1 A_Lower();
				Loop;
			Fire:
				DNP1 A 0 A_JumpIfNoammo("Reload");
				DNP1 A 0 A_JumpIfInventory("LXandroPistolClipHolder",1,"Bang");
				Goto Click;
			Bang:
				DNP1 A 0 A_AlertMonsters();
				DNP1 A 0 A_TakeInventory("LXandroPistolClipHolder", 1);
				DNP1 B 0 A_FireBullets(5.6,5.6,1,12,"BulletPuff");
				DNP1 B 1 Bright A_GunFlash();// A_Light1
				TNT1 A 0 A_ZoomFactor(0.99);
				TNT1 A 0 A_SetPitch(Pitch-1.5);
				DNP1 B 1 Bright A_GunFlash();// A_Light1
				TNT1 A 0 A_SetPitch(Pitch-1.5);
				TNT1 A 0 A_ZoomFactor(0.98);
				DNP1 C 1();// A_Light0
				TNT1 A 0 A_SetPitch(Pitch+0.5);
				TNT1 A 0 A_ZoomFactor(0.99);
				DNP1 C 1();// A_Light0
				TNT1 A 0 A_SetPitch(Pitch+0.5);
				TNT1 A 0 A_ZoomFactor(0.995)();
				DNP1 A 1;
				TNT1 A 0 A_SetPitch(Pitch+0.5);
				TNT1 A 0 A_ZoomFactor(1.00);
				DNP1 A 2;
				DNP1 A 0 A_JumpIfNoammo(1);
				Goto Ready;
				DNP1 A 0 A_TakeInventory("LXandroPistolClipHolder", 12);
				Goto Ready;
			AltFire:
			Reload:
				DNP1 A 0 A_JumpIfInventory("LXandroPistolClipHolder",12,"Ready");
				DNP1 A 1 A_JumpIfInventory("Clip",1,"ReloadStart");
				Goto Click;
			Click:
				DNP1 A 1 A_WeaponReady(14);
				Goto Altfire;
			Hold:
			AltHold:
				DNP1 A 1 A_WeaponReady(14);
				DNP1 A 0 A_ReFire();
				Goto Ready;
			ReloadStart:
				DNP1 H 2 A_Playsound("DNPISTR1");
				DNP1 GF 4;
			ReloadLoop:
				DNP1 E 0 A_JumpIfInventory("LXandroPistolClipHolder",12,"ReloadEnd");
				DNP1 D 0 A_GiveInventory("LXandroPistolClipHolder", 1);
				Loop;
			ReloadEnd:
				DNP1 A 1 offset(0,51) A_Playsound("DNPISTR2");
				DNP1 A 1 offset(0,60);
				DNP1 A 1 offset(0,66);
				DNP1 A 1 offset(0,72);
				DNP1 A 1 offset(0,80);
				DNP1 A 1 offset(0,96);
				DNP1 F 2;
				DNP1 G 2;
				DNP1 HI 4;
				DNP1 A 1;
				DNP1 A 0 A_PlaySound("DNPISTR3");
				Goto Ready;
			Flash:
				TNT1 A 1 A_Light(2);
				TNT1 A 1 A_Light(5);
				TNT1 A 1 A_Light(4);
				TNT1 A 1 A_Light(3);
				TNT1 A 1 A_Light(2);
				TNT1 A 1 A_Light(0);
				Stop;
		}
	}
	actor LXandroPistolClipHolder : Ammo
		{
			Inventory.MaxAmount 12;
			+Inventory.UNDROPPABLE;
			-Inventory.invbar;
	}
	
	actor LXandroPistols : "DPT.HQ-Weapon" 26395
		{
			//$Category weapons
			+WEAPON.CHEATNOTweapon;
			+Inventory.UNDROPPABLE;
			Weapon.AmmoType "clip";
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 50;
			Weapon.AmmoType2 "LXandroPistolsClipHolder";
			Weapon.AmmoUse2 0;
			Weapon.AmmoGive2 12;
			AttackSound "DNPISTFR";
			decal BulletChip;
			Inventory.PickupMessage "Yeah, more guns means more ass kicking!"();
			Obituary "%o was shot up by %k's Pistols."();
			Inventory.PickupSound "DSPISTIN";
			+NOALERT;
			+ammo_OPTIONAL;
			Scale .5;
			States;
			{
			Spawn:
				DNPS Z -1;
				Stop;
			Ready:
				DNP2 A 1 A_WeaponReady();
				Loop;
			Select:
				DNP2 AA 0 A_Raise();
				DNP2 A 1 A_Raise();
				Loop;
			DeSelect:
				DNP2 AA 0 A_Lower();
				DNP2 A 1 A_Lower();
				Loop;
			Fire:
				DNP2 A 0 A_JumpIfNoammo("AltFire");
				DNP2 A 0 A_JumpIfInventory("LXandroPistolsClipHolder",1,"Bang");
				Goto Click;
			Bang:
				DNP2 A 0 A_AlertMonsters();
				DNP2 A 0 A_TakeInventory("LXandroPistolsClipHolder", 1);
				DNP2 B 1 A_FireBullets(5.6,5.6,1,12,"BulletPuff");
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll+1);
				DNP2 B 1 Bright A_GunFlash();// A_Light1
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll+1);
				DNP2 C 1;
				TNT1 A 0 A_SetPitch(Pitch+1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNP2 C 1;
				TNT1 A 0 A_SetPitch(Pitch+1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNP2 A 0 A_TakeInventory("LXandroPistolsClipHolder", 1);
				DNP2 D 1 A_FireBullets(5.6,5.6,1,12,"BulletPuff");
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNP2 D 1 Bright A_GunFlash();// A_Light1
				TNT1 A 0 A_SetPitch(Pitch-1);
				TNT1 A 0 A_SetRoll(Roll-1);
				DNP2 E 1;
				TNT1 A 0 A_SetPitch(Pitch+1);
				TNT1 A 0 A_SetRoll(Roll+1);
				DNP2 E 1;
				TNT1 A 0 A_SetPitch(Pitch+1);
				TNT1 A 0 A_SetRoll(Roll+1);
				DNP2 A 0 A_JumpIfNoammo(1);
				Goto Ready;
				DNP2 A 0 A_TakeInventory("LXandroPistolsClipHolder", 12);
				Goto Ready;
			AltFire:
			Reload:
				DNP2 A 0 A_JumpIfInventory("LXandroPistolsClipHolder",12,"Ready");
				DNP2 A 1 A_JumpIfInventory("Clip",1,"ReloadStart");
				Goto Click;
			Click:
				DNP2 A 1 A_WeaponReady(14);
				Goto Altfire;
			Hold:
			AltHold:
				DNP2 A 1 A_WeaponReady(14);
				DNP2 A 0 A_ReFire();
				Goto Ready;
			ReloadStart:
				DNP2 A 2 A_Playsound("DNPISTR1");
				DNP2 A 2;
			ReloadLoop:
				DNP2 E 0 A_JumpIfInventory("LXandroPistolsClipHolder",12,"ReloadEnd");
				DNP2 E 0 A_GiveInventory("LXandroPistolsClipHolder", 1);
				Loop;
			ReloadEnd:
				DNP2 A 1 offset(0,32);
				DNP2 A 1 offset(0,51);
				DNP2 A 1 offset(0,60) A_Playsound("DNPISTR1");
				DNP2 A 1 offset(0,66);
				DNP2 A 1 offset(0,72);
				DNP2 A 1 offset(0,88) ();
				DNP2 A 1 offset(0,106);
				TNT1 A 8 A_Playsound("DNPISTR2");
				TNT1 A 1;
				DNP2 A 1 offset(0,95);
				DNP2 A 1 offset(0,88) A_Playsound("DNPISTR3");
				DNP2 A 1 offset(0,80);
				DNP2 A 1 offset(0,72);
				DNP2 A 1 offset(0,69);
				DNP2 A 1 offset(0,63);
				DNP2 A 1 offset(0,60);
				DNP2 A 1 offset(0,57);
				DNP2 A 1 offset(0,51);
				DNP2 A 1 offset(0,32) A_Playsound("DNPISTR3");
				DNP2 A 4;
				Goto Ready;
			Flash:
				TNT1 A 1 A_Light(2);
				TNT1 A 1 A_Light(5);
				TNT1 A 1 A_Light(4);
				TNT1 A 1 A_Light(3);
				TNT1 A 1 A_Light(2);
				TNT1 A 1 A_Light(0);
				Stop;
		}
	}
	actor LXandroPistolsClipHolder : Ammo
		{
			Inventory.MaxAmount 12;
			+Inventory.UNDROPPABLE;
			-Inventory.invbar;
	}
	
	actor LXandroRPG : "DPT.HQ-Weapon" 26396
		{
			//$Category weapons
			+WEAPON.CHEATNOTweapon;
			+Inventory.UNDROPPABLE;
			Inventory.PickupMessage "I like big guns and I cannot lie!"();
			Obituary "%o rode %k's rocket" ();
			Weapon.AmmoType "Rocketammo";
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 1;
			+WEAPON.NOAUTOFIRE;
			States;
			{
			Ready:
				DNRP A 1 A_WeaponReady();
				Loop;
			DeSelect:
				DNRP AA 0 A_Lower();
				DNRP A 1 A_Lower();
				Loop;
			Select:
				DNRP AA 0 A_Raise();
				DNRP A 1 A_Raise();
				Loop;
			Fire: 
				DNRP B 0 A_PlayweaponSound("RPGFIRE");
				TNT1 A 0 A_Recoil(7);
				DNRP B 1 A_FireCustomMissile("LXandroRPGRocket");
				TNT1 A 0 A_ZoomFactor(0.98);
				TNT1 A 0 A_SetPitch(Pitch-3);
				DNRP B 1;
				TNT1 A 0 A_ZoomFactor(0.94);
				TNT1 A 0 A_SetPitch(Pitch-3);
				DNRP C 1;
				TNT1 A 0 A_ZoomFactor(0.93);
				TNT1 A 0 A_SetPitch(Pitch-2);
				DNRP C 1;
				TNT1 A 0 A_ZoomFactor(0.94);
				TNT1 A 0 A_SetPitch(Pitch+1);
				DNRP A 1();
				TNT1 A 0 A_ZoomFactor(0.97);
				TNT1 A 0 A_SetPitch(Pitch+1);
				DNRP A 1();
				TNT1 A 0 A_ZoomFactor(0.98);
				TNT1 A 0 A_SetPitch(Pitch+1);
				DNRP A 1();
				TNT1 A 0 A_ZoomFactor(1.00);
				DNRP A 1();
				DNRP A 10 A_WeaponReady();
				Goto Ready;
			Flash:
				TNT1 A 0 Bright A_Light1();
				TNT1 A 0 Bright A_Light0();
				Stop;
		}
	}
	actor LXandroRPGRocket;
	{
		Speed 30;
		Radius 11;
		Height 8;
		Damage 20;
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+ROCKETTRAIL;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "%o rode %k's rocket.";
		States;
		{
			Spawn:
				MISL A 1 Bright;
				Loop;
			Death:
				EXPL A 3 Bright A_Explode();
				EXPL BCDEFGHIJKLMNOPQRST 2 Bright;
				Stop;
		}
	}
	
	actor LXandroShotgun : "DPT.HQ-Weapon" 26397
		{
			//$Category weapons
			+WEAPON.CHEATNOTweapon;
			+Inventory.UNDROPPABLE;
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 8;
			Weapon.AmmoType "Shell";
			Inventory.PickupMessage "Come get some!"();
			Obituary "%k has kicked %o's ass with shotgun."();
			States;
			{
			Ready:
				DNSH C 1 A_WeaponReady();
				Loop;
			DeSelect:
				DNSH CC 0 A_Lower();
				DNSH C 1 A_Lower();
				Loop;
			Select:
				DNSH CC 0 A_Raise();
				DNSH C 1 A_Raise();
				Loop;
			Fire:
				DNSH C 1;
				DNSH C 0 A_FireBullets (5.6, 0, 7, 5, "BulletPuff");
				TNT1 A 0 A_ZoomFactor(0.99);
				TNT1 A 0 A_SetPitch(Pitch-3);
				DNSH C 0 A_PlaySound ("DNSHTGN", CHAN_weapon);
				DNSH A 2;
				TNT1 A 0 A_ZoomFactor(0.98);
				TNT1 A 0 A_SetPitch(Pitch-2);
				DNSH B 2;
				TNT1 A 0 A_ZoomFactor(0.99);
				TNT1 A 0 A_SetPitch(Pitch-2);
				DNSH C 2;
				TNT1 A 0 A_ZoomFactor(1.00);
				TNT1 A 0 A_SetPitch(Pitch+1);
				DNSH C 2;
				TNT1 A 0 A_SetPitch(Pitch+1);
				DNSH C 1 A_PlaySound ("DNSHPUMP",6);
				DNSH C 4;
				DNSH D 2;
				DNSH E 2;
				DNSH F 2;
				DNSH G 4;
				DNSH F 2;
				DNSH E 2;
				DNSH D 2;
				DNSH C 4;
				DNSH C 2 A_ReFire();
				Goto Ready;
			Spawn:
				DNSH Z -1;
				Stop;
		}
	}
	
	// Ronikari weapons
	
	actor Auto9 : "DPT.HQ-Weapon" 26398
		{
			//$Category weapons
			Weapon.AmmoType "Clip";
			Weapon.AmmoUse 1;
			Weapon.AmmoGive 50;
			Weapon.AmmoType2 "Auto9ClipHolder";
			Weapon.AmmoUse2 0;
			Weapon.AmmoGive2 12;
			AttackSound "AUTO9FIR";
			decal BulletChip;
			Inventory.PickupMessage "You got the Auto-9!"();
			Obituary "%o was shot up by %k's Auto-9."();
			Inventory.PickupSound "DSPISTIN";
			+NOALERT;
			+ammo_OPTIONAL;
			+CHEATNOTweapon;
			Scale .5;
			States;
			{
			Spawn:
				RUNW Z -1;
				Stop;
			Ready:
				RUNW A 1 A_WeaponReady();
				Loop;
			Select:
				RUNW A 1 A_Raise();
				Loop;
			DeSelect:
				RUNW A 1 A_Lower();
				Loop;
			Fire:
				RUNW A 0 A_JumpIfNoammo("Click");
				RUNW A 0 A_JumpIfInventory("PistolClipHolder",1,"Bang");
				Goto Click;
			Bang:
				RUNW A 0 A_AlertMonsters();
				RUNW A 0 A_TakeInventory("PistolClipHolder", 1);
				RUNW B 0 A_FireBullets(5.6,5.6,1,12,"BulletPuff");
				RUNW B 2 Bright A_GunFlash();// A_Light1
				RUNW C 2();// A_Light0
				RUNW A 0 A_JumpIfNoammo(1);
				Goto Hold;
				RUNW A 0 A_TakeInventory("PistolClipHolder", 12);
				Goto Hold;
			Reload:
			Altfire:
				RUNW A 0 A_JumpIfInventory("PistolClipHolder",12,"Ready");
				RUNW A 1 A_JumpIfInventory("Clip",1,"ReloadStart");
				Goto Click;
			Click:
				RUNW A 0 A_PlaySound("DSNOammo");
				RUNW A 1 A_WeaponReady(14);
			Hold:
			AltHold:
				RUNW A 1 A_WeaponReady(14);
				RUNW A 0 A_ReFire();
				Goto Ready;
			ReloadStart:
				RUNW D 4 A_Playsound("DSPISOUT");
				RUNW E 4;
			ReloadLoop:
				RUNW E 0 A_JumpIfInventory("PistolClipHolder",12,"ReloadEnd");
				RUNW E 0 A_GiveInventory("PistolClipHolder", 1);
				Loop;
			ReloadEnd:
				RUNW F 4 A_Playsound("DSPISTIN");
				RUNW DA 4;
				Goto Ready;
			Flash:
				TNT1 A 1 A_Light(2);
				TNT1 A 1 A_Light(5);
				TNT1 A 1 A_Light(4);
				TNT1 A 1 A_Light(3);
				TNT1 A 1 A_Light(2);
				TNT1 A 1 A_Light(0);
				Stop;
		}
	}
	actor Auto9ClipHolder : Ammo
		{
			Inventory.MaxAmount 12;
			+Inventory.UNDROPPABLE;
			-Inventory.invbar;
	}
