class MechFireMode : Inventory { 
	Default {
		
		Inventory.MaxAmount 3;
	}
}
class CanLeaveVehicle : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class HelicopterIsFlying : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class StoredHealthInsideVehicle : Inventory { 
	Default {
		
		Inventory.MaxAmount 9999;
	}
}
class StoredArmorInsideVehicle : Inventory { 
	Default {
		
		Inventory.MaxAmount 9999;
	}
}
class Accelerate : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class Backpedal : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class TurnLeft : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class TurnRight : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class TurnMouseLeft : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class TurnMouseRight : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class PressedUse : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class PressedJump : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class PressedLeft : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class TankZoom : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class MaxLeft : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class MaxRight : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class IsAVehicle : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class VehicleFallingCount : Inventory { 
	Default {
		
		Inventory.MaxAmount 100;
	}
}
class VehicleSpeed : Ammo { 
	Default {
		
		Inventory.PickupMessage "$GOTCLIP";
		Inventory.Amount 0;
		Inventory.MaxAmount 999;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 999;
		Inventory.Icon "CLIPA0";
	}
	States
	{
		Spawn:
			CLIP A -1;
			Stop;
	}
}
class TankDirection : Inventory { 
	Default {
		
		Inventory.MaxAmount 60;
	}
}
class TankBaseDirection : Ammo { 
	Default {
		
		Inventory.PickupMessage "$GOTCLIP";
		Inventory.Amount 0;
		Inventory.MaxAmount 360;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 360;
		Inventory.Icon "CLIPA0";
	}
	States
	{
		Spawn:
			CLIP A -1;
			Stop;
	}
}
class ChaseCam3 : actor { 
	Default {
		
		height 1;
		radius 1;
		+NOGRAVITY;
		+THRUactorS;
	}
	States
	{
		Spawn:
			NULL A -1;
			Stop;
	}
}
class DestroyedArmouredVehicle : actor { 
	Default {
		
		+NOGRAVITY;
		+NOCLIP;
		+THRUactorS;
		Height 96;
		Radius 64;
		Scale 2.0;
	}
	States
	{
		Spawn:
			8762 B 1 A_CustomMissile ("HollywoodFire2", 76, 0, random (0, 360), 2, random (40, 90));
			8762 B 3;
			Loop;
	}
}
class DestroyedAircraft : actor { 
	Default {
		
		+NOGRAVITY;
		+NOCLIP;
		+THRUactorS;
		Height 96;
		Radius 64;
		Scale 2.0;
	}
	States
	{
		Spawn:
			8762 C 1 A_CustomMissile ("HollywoodFire2", 76, 0, random (0, 360), 2, random (40, 90));
			8762 C 3;
			Loop;
	}
}
class CancelTeleportFog : actor { 
	Default {
		
		+THRUactorS;
		+MISSILE;
		+NOPAIN;
		Height 0;
		Radius 0;
		Speed 0;
		damagetype "CancelTeleportFog";
	}
	States
	{
		Spawn:
			TNT1 A 1;
		Death:
			TNT1 A 0 A_Explode(4, 128, 0);
			Stop;
	}
}
class TransferPlayerOutOfVehicle : actor { 
	Default {
		
		Radius 16;
		Height 40;
		+MISSILE;
		+NOGRAVITY;
		MaxTargetRange 120;
		Speed 0;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_GiveToTarget("CanLeaveVehicle", 1);
			TNT1 A 0 Thing_ChangeTID(0, 264);
			TNT1 A 0 A_NoBlocking();
			TNT1 A 6;
			TNT1 A 0 A_SpawnItem("CancelTeleportFog");
			TNT1 A 2;
			TNT1 A 0 Thing_ChangeTID(0, 0);
			Stop;
		Death:
			TNT1 A 0;
			Stop;
	}
}
class FiredTankMainGun : Inventory { 
	Default {
		
		Inventory.MaxAmount 1;
	}
}
class TankShell : actor { 
	Default {
		
		Radius 6;
		Height 6;
		Speed 110;
		Damage (random (400, 500));
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+ROCKETTRAIL;
		+MISSILE;
		-NOGRAVITY;
		damagetype "TankShell";
		Gravity 0.2;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "$OB_MPROCKET";
	}
	States
	{
		Spawn:
			MISL A 1 Bright;
			Loop;
		Death:
			MISL B 0 Bright A_Explode();
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_SpawnItem("TankShotExplosion");
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (0, 360), 2, random (30, 160));
			TNT1 A 0 A_SpawnItem("TankShotExplosionImpact");
			TNT1 A 6;
			TNT1 A 0 A_PlaySound("FAREXPL", 1);
			TNT1 AAAAAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 12;
			Stop;
	}
}
class EnemYTankShell: TankShell { 
	Default {
		
		Speed 40;
		Damage (random (300, 400));
		+NOGRAVITY;
	}
}
class TankFireEffect : actor { 
	Default {
		
		Radius 1;
		Height 1;
		Speed 70;
		Damage 1;
		Projectile;
		+RANDOMIZE;
		+MISSILE;
	}
	States
	{
		Spawn:
			TNT1 A 2;
			Goto Death;
		Death:
			TNT1 A 0;
			TNT1 A 0 Radius_Quake(6, 12, 0, 4, 0);
			TNT1 AAAAA 0 A_SpawnItem("RedFlare");
			TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 1 BRIGHT;
			TNT1 AAAAA 0 A_SpawnItem("RedFlare");
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_Recoil(-5);
			TKFL A 5 BRIGHT;
			Stop;
	}
}
class TankShotExplosionImpact : actor { 
	Default {
		
		damagetype "ExplosiveImpact";
		+MISSILE;
		+NOCLIP;
	}
	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A 0 A_Explode(50, 400);
			Stop;
	}
}
class TankTreadsDamage : actor { 
	Default {
		
		+NOTARGET;
		Radius 1;
		Height 1;
		DamageType Stomp;
		+NOGRAVITY;
		+NOTELEPORT;
		+NODAMAGETHRUST;
		+THRUGHOST;
		+NORADIUSDMG;
		+FORCERADIUSDMG;
		PROJECTILE;
		+DEHEXPLOSION;
		+ACTIVATEMCROSS;
		+EXPLODEONWATER;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(200,50,0);
			TNT1 A 0 A_SpawnItemEx("TreadsDamage2", 0, 50);
			TNT1 A 0 A_SpawnItemEx("TreadsDamage2", 0, -50);
			TNT1 A 0 A_SpawnItemEx("TreadsDamage3", 0, 50, 70);
			TNT1 A 0 A_SpawnItemEx("TreadsDamage3", 0, -50, 70);
			TNT1 A 0 A_SpawnItemEx("TreadsDamage3", 0, 0, 70);
			TNT1 A 1 A_Noblocking();
			PLAY A 0;
			Stop;
	}
}
class TreadsDamage2: TankTreadsDamage { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(200,50,0);
			PLAY A 0;
			TNT1 A 1 A_Noblocking();
			Stop;
	}
}
class TreadsDamage3: TankTreadsDamage { 
	Default {
		
		DamageType Kick;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(10,30,0);
			PLAY A 0;
			TNT1 A 1 A_Noblocking();
			Stop;
	}
}
class Tankammo : Ammo { 
	Default {
		
		
		Inventory.PickupMessage "Picked up a Magazine.";
		Inventory.Amount 10;
		Inventory.MaxAmount 100;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 100;
		Inventory.Icon "NULL";
	}
	States
	{
		Spawn:
			CLIP A -1;
			Stop;
	}
}
class Mechammo : Ammo { 
	Default {
		
		
		Inventory.PickupMessage "Picked up a Magazine.";
		Inventory.Amount 10;
		Inventory.MaxAmount 100;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 100;
		Inventory.Icon "NULL";
	}
	States
	{
		Spawn:
			CLIP A -1;
			Stop;
	}
}
class HeavyMachinegunammo : Ammo { 
	Default {
		
		
		Inventory.PickupMessage "Picked up a Magazine.";
		Inventory.Amount 100;
		Inventory.MaxAmount 2000;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 2000;
		Inventory.Icon "NULL";
	}
	States
	{
		Spawn:
			CLIP A -1;
			Stop;
	}
}
class MechRocketammo : Ammo { 
	Default {
		
		
		Inventory.PickupMessage "Picked up a Magazine.";
		Inventory.Amount 5;
		Inventory.MaxAmount 60;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 60;
		Inventory.Icon "NULL";
	}
	States
	{
		Spawn:
			CLIP A -1;
			Stop;
	}
}
class MechLaserammo : Ammo { 
	Default {
		
		
		Inventory.PickupMessage "Picked up a Magazine.";
		Inventory.Amount 30;
		Inventory.MaxAmount 200;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 200;
		Inventory.Icon "NULL";
	}
	States
	{
		Spawn:
			CLIP A -1;
			Stop;
	}
}
class MechMOrtarammo : Ammo { 
	Default {
		
		
		Inventory.PickupMessage "Picked up a Magazine.";
		Inventory.Amount 1;
		Inventory.MaxAmount 20;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 20;
		Inventory.Icon "NULL";
	}
	States
	{
		Spawn:
			CLIP A -1;
			Stop;
	}
}
class HelicopterRocketammo : Ammo { 
	Default {
		
		
		Inventory.PickupMessage "Picked up a Magazine.";
		Inventory.Amount 1;
		Inventory.MaxAmount 40;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 40;
		Inventory.Icon "NULL";
	}
	States
	{
		Spawn:
			CLIP A -1;
			Stop;
	}
}
class TankBlood: Blood { 
	Default {
		
		+NOCLIP;
		-ALLOWPARTICLES;
		+NOBLOODDECALS;
		-BLOODSPLATTER;
	}
	States
	{
		Spawn:
		See:
		Death:
			TNT1 A 1;
			TNT1 A 0 A_SpawnItem("BulletPuff");
			TNT1 A 0 A_PlaySound("RICMET");
			TNT1 A 60;
Stop}}
class TankWeakSpotBase : actor { 
	Default {
		
		+NOTARGET;
		damagefactor "Taunt", 0.0;
		damagefactor "Blood", 0.0;
		damagefactor "BlueBlood", 0.0;
		damagefactor "Head", 0.0;
		damagefactor "MinorHead", 0.0;
		damagefactor "KillMe", 0.0;
		damagefactor "Control", 0.0;
		damagefactor "Trample", 0.0;
		damagefactor "GibRemoving", 0.0;
		//damagefactor "Melee", 0.3
		damagefactor "Alert", 0.0;
		damagefactor "SSG", 1.0;
		damagefactor "ExplosiveImpact", 0.0;
		damagefactor "Bullet", 1.5;
		damagefactor "GibRemoving", 0.0;
		damagefactor "Kick", 0.0;
		damagefactor "Stomp", 0.0;
		damagefactor "TeleportRemover", 0.0;
		damagefactor "TankShell", 5.5;
		damagefactor "Plasma", 1.2;
		damagefactor "Plasma2", 1.2;
		damagefactor "Railgun", 1.2 damagefactor "Explosives", 1.2;
		damagefactor "Repair", 0.0 damagefactor "CheckRepair", 0.0;
		//MONSTER
		-COUNTKILL;
		Health 300;
		GibHealth 10000;
		Radius 32;
		Height 52;
		DamageType TankWeakSpot;
		BloodType "TankBlood";
		PainChance 255;
		+NOGRAVITY;
		+SHOOTABLE;
		+NOTELEPORT;
		+FORCERADIUSDMG;
		-SOLID;
		+NODAMAGETHRUST;
		+NORADIUSDMG;
		-COUNTKILL;
		-CLIENTSIDEONLY;
		+NORADIUSDMG;
		damagefactor "Trample", 0;
		damagefactor "TankWeakSpot", 0;
		Species "VehicleSpecial";
	}
	States
	{
		Spawn:
			TNT1 A 4;
			XXXX A 0 A_NoBlocking();
			Stop;
		Pain.Explosive:
			TNT1 A 3;
			Goto Pain;
		Pain.ExplosiveImpact:
			TNT1 A 3;
			Goto Pain;
		Pain:
			TNT1 A 0;
			//TNT1 A 0 ThrustThingZ(0,-40,0,1)
			TNT1 A 0 A_NoBlocking();
			TNT1 A 0 A_JumpIfHealthLower(-100, "SuperDeath");
			TNT1 A 0 A_JumpIfHealthLower(25, "Pain550");
			TNT1 A 0 A_JumpIfHealthLower(50, "Pain500");
			TNT1 A 0 A_JumpIfHealthLower(75, "Pain450");
			TNT1 A 0 A_JumpIfHealthLower(100, "Pain400");
			TNT1 A 0 A_JumpIfHealthLower(125, "Pain350");
			TNT1 A 0 A_JumpIfHealthLower(150, "Pain300");
			TNT1 A 0 A_JumpIfHealthLower(175, "Pain250");
			TNT1 A 0 A_JumpIfHealthLower(200, "Pain200");
			TNT1 A 0 A_JumpIfHealthLower(225, "Pain150");
			TNT1 A 0 A_JumpIfHealthLower(250, "Pain100");
			TNT1 A 0 A_JumpIfHealthLower(275, "Pain50");
			TNT1 A 0 A_JumpIfHealthLower(288, "Pain35");
			TNT1 A 0 A_JumpIfHealthLower(292, "Pain25");
			XDT3 A 0 A_Explode(20,20,0);//hs
			PLAY A 0;
			Stop;
		Pain25:
			TNT1 A 0;
			XDT3 A 0 A_Explode(10,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain35:
			TNT1 A 0;
			XDT3 A 0 A_Explode(15,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain50:
			TNT1 A 0;
			XDT3 A 0 A_Explode(30,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain100:
			TNT1 A 0;
			XDT3 A 0 A_Explode(80,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain150:
			TNT1 A 0;
			XDT3 A 0 A_Explode(100,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain200:
			TNT1 A 0;
			XDT3 A 0 A_Explode(150,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain250:
			TNT1 A 0;
			XDT3 A 0 A_Explode(200,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain300:
			TNT1 A 0;
			XDT3 A 0 A_Explode(300,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain350:
			TNT1 A 0;
			XDT3 A 0 A_Explode(350,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain400:
			TNT1 A 0;
			XDT3 A 0 A_Explode(400,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain450:
			TNT1 A 0;
			XDT3 A 0 A_Explode(600,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain500:
			TNT1 A 0;
			XDT3 A 0 A_Explode(1200,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain550:
			TNT1 A 0;
			XDT3 A 0 A_Explode(1550,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		Pain600:
			TNT1 A 0;
			XDT3 A 0 A_Explode(1600,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
		SuperDeath:
		Death:
			TNT1 A 0;
			XDT3 A 0 A_Explode(1800,80,0);//hs
			TNT1 A 0 A_NoBlocking();
			Stop;
	}
}	
class TankWeakSpot3: TankWeakSpotBase { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 3;
			XXXX A 0 A_NoBlocking();
			Stop;
	}
}
class ZombieHelicopter 9953 : actor { 
	Default {
		
		
		Health 1000;
		Radius 56;
		Height 96;
		Mass 400;
		Speed 3;
		PainChance 128;
		BloodType "TankBlood", "TankBlood", "TankBlood";
		PainChance "HitGround", 255;
		Monster;
		+FLOAT +NOGRAVITY +FLOATBOB;
		DamageFactor "TankShell", 2.0;
		Obituary "%o was destroyed by a zombie-seized helicopter.";
	}
	States
	{
		Spawn:
			HELZ ABCD 1 A_Look();
			Loop;
		See:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("HELILOP", 6, 1, 1);
			TNT1 A 0 A_PlaySound("HELILOP2", 7, 1, 1);
			TNT1 A 0 A_CustomMissile ("HelicopterHitDetectionGround", -20, 0, 0, 2, -90);
			HELZ A 1 A_Chase();
			HELZ A 1 A_Chase("","");
			HELZ B 1 A_Chase();
			HELZ B 1 A_Chase("","");
			HELZ C 1 A_Chase();
			HELZ C 1 A_Chase("","");
			HELZ D 1 A_Chase();
			HELZ D 1 A_Chase("","");
			HELZ A 1 A_Chase();
			HELZ A 1 A_Chase("","");
			HELZ B 1 A_Chase();
			HELZ B 1 A_Chase("","");
			HELZ C 1 A_Chase();
			HELZ C 1 A_Chase("","");
			HELZ D 1 A_Chase();
			HELZ D 1 A_Chase("","");
			HELZ A 0 A_Recoil(-1);
			TNT1 A 0 A_JumpIfCloser(900, "fallBack");
			Loop;
		FallBack:
			HELZ ABCD 1;
			HELZ A 0 A_Recoil(-4);
			HELZ ABCD 1;
			HELZ A 0 A_Recoil(-4);
			HELZ ABCD 1;
			HELZ A 0 A_Recoil(-4);
		Missile:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128, "Machinegun");
			HELZ ABCDABCDABCDABCD 1 A_FaceTarget();
			TNT1 A 0 A_CustomMissile("JuggernautRocket", 15, -42, random(-3, 3), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 15, -42, random(-3, 3), 0);
			HELZ ABCDABCD 1 A_FaceTarget();
			TNT1 A 0 A_CustomMissile("JuggernautRocket", 15, 42, random(-3, 3), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 15, 42, random(-3, 3), 0);
			HELZ ABCDABCD 1 A_FaceTarget();
			TNT1 A 0 A_CustomMissile("JuggernautRocket", 15, -42, random(-3, 3), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 15, -42, random(-3, 3), 0);
			HELZ ABCDABCD 1 A_FaceTarget();
			TNT1 A 0 A_CustomMissile("JuggernautRocket", 15, 42, random(-3, 3), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 15, 42, random(-3, 3), 0);
			HELZ ABCDABCDABCDABCD 1 A_FaceTarget();
			Goto See;
		Machinegun:
			HELZ ABCD 1 A_FaceTarget();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 40, 0, random(-4, 4), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunFlash", 40, 0, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 40, 0, 0, 0);
			HELZ ABCD 1 A_FaceTarget();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 40, 0, random(-4, 4), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunFlash", 40, 0, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 40, 0, 0, 0);
			HELZ ABCD 1 A_FaceTarget();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 40, 0, random(-4, 4), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunFlash", 40, 0, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 40, 0, 0, 0);
			HELZ ABCD 1 A_FaceTarget();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 40, 0, random(-4, 4), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunFlash", 40, 0, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 40, 0, 0, 0);
			HELZ ABCD 1 A_FaceTarget();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 40, 0, random(-4, 4), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunFlash", 40, 0, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 40, 0, 0, 0);
			HELZ ABCD 1 A_FaceTarget();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 40, 0, random(-4, 4), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunFlash", 40, 0, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 40, 0, 0, 0);
			HELZ ABCD 1 A_FaceTarget();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 40, 0, random(-4, 4), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunFlash", 40, 0, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 40, 0, 0, 0);
			HELZ ABCD 1 A_FaceTarget();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 40, 0, random(-4, 4), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunFlash", 40, 0, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 40, 0, 0, 0);
			Goto See;
		Pain:
			HELZ ABCD 1;
			Goto See;
		Pain.HitGround:
			PLAY G 0;
			TNT1 A 0 ThrustThingZ(0,10,0,1);
			TNT1 A 0 A_SpawnItem("HeliBase1");
			HELZ A 1 A_Pain();
			Goto See;
		Death:
			TNT1 A 0;
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_Recoil(-3);
			TNT1 A 0 A_StopSound(6);
			TNT1 A 0 A_StopSound(7);
			TNT1 A 0 A_TakeInventory("AttackhelicopterGun", 1);
			TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
			TNT1 A 0 SetPlayerProperty(0,0,4);
			TNT1 A 0 A_PlaySound("HELSTOP", 6);
			TNT1 A 0 A_ChangeFlag("QUARTERGRAVITY", 1);
		falling:
			TNT1 A 0 A_Scream();
			TNT1 A 0 A_ClearTarget();
			TNT1 A 0 A_NoBlocking();
			HEL1 AB 1 A_CustomMissile ("HollywoodFire", 32, 0, random (0, 360), 2, random (0, 180));
			TNT1 A 0 A_SetAngle(10 + angle);
			HEL1 CD 1 A_CustomMissile ("HollywoodFire", 32, 0, random (0, 360), 2, random (0, 180));
			TNT1 A 0 A_SetAngle(10 + angle);
			TNT1 A 0 A_CheckFloor("Crashed");
			Loop;
		Crashed:
			TNT1 A 0 A_SpawnItem("BigExplosion1112");
			TNT1 A 0 A_PlaySound("weapons/explode");
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_StopSound(6);
			ELEC A 0 A_Explode(100, 250);
			TNT1 A 0 A_SpawnItem("DestroyedAircraft");
			8762 A 500;
			8762 A 2000;
			8762 A -1;
			Stop;
	}
}
class ZombieLightTank : Fatso 9950 { 
	Default {
		
		YScale 1.8;
		XScale 1.9;
		
		GibHealth 25;
		damagefactor "Avoid", 0.0;
		PainChance "Kick", 255;
		damagefactor "Head", 2.0;
		damagefactor "Stomp", 0.0;
		damagefactor "GibRemoving", 0.0;
		damagefactor "MINORHead", 1.0;
		damagefactor "TeleportRemover", 0.0;
		DamageFactor "CauseObjectsToSplash", 0.0;
		Health 2000;
		+NOICEDEATH;
		PainSound "juggernaut/pain";
		DeathSound "juggernaut/death";
		ActiveSound "juggernaut/roam";
		SeeSound "juggernaut/see";
		BloodType "TankBlood", "TankBlood", "TankBlood";
		damagefactor "Blood", 0.0 damagefactor "BlueBlood", 0.0 damagefactor "GreenBlood", 0.0;
		BloodType "Brutal_Blood";
		damagefactor "Shrapnel", 0.4;
		damagefactor "Explosive", 1.5;
		damagefactor "Plasma", 1.5;
		Obituary "%o was destroyed by a zombie-seized light tank.";
		MaxStepHeight 24;
		MaxDropOffHeight 32;
		Speed 1;
		Height 100;
		Radius 64;
		Mass 99999;
		Painchance 10;
		Painchance "Explosive", 150;
		+MISSILEMORE;
		+MISSILEEVENMORE;
		+BOSS;
		+FULLVOLACTIVE;
		+DONTHURTSPECIES;
		+MTHRUSPECIES;
		+NORADIUSDMG;
		Species "EnemyTank";
		MinMissileChance 150;
	}
	States
	{
		/////////////////////
		Spawn:
			TNK1 B 1;
			TNT1 A 0 A_SpawnItemEx ("KillTreads",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			Goto Standby;
		Standby:
			TNK1 B 0;
			TNT1 A 0 A_SpawnItemEx ("ZombieLightTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 B 4 A_Look();
			Loop;
			//////////////////
		See:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx ("ZombieLightTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 B 1;
			//TNT1 A 0 A_SpawnItem("KillTreads")
			Goto Rolling;
		Rolling:
			TNT1 A 0 A_PlaySound("juggernaut/engine");
			TNT1 A 0 A_SpawnItemEx ("ZombieLightTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 B 2 A_Chase("","");
			TNT1 A 0 A_SpawnItemEx ("ZombieLightTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 D 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNT1 A 0 A_SpawnItemEx ("ZombieLightTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 E 2 A_Recoil(-2);
			TNT1 A 0 A_SpawnItemEx ("ZombieLightTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 B 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNK1 D 2 A_Recoil(-2);
			TNT1 A 0 A_SpawnItemEx ("ZombieLightTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 E 2 A_Recoil(-1);
			TNT1 A 0 A_Jump(32, "FireCannon");
			Loop;
			///////////////////	
		FireCannon:
		Missile:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("juggernaut/engine");
			TNT1 A 0 A_CustomMissile ("ZombieLightTankBody2", 0);
			TNK1 B 2 A_Chase("","");
			TNT1 A 0 A_PlaySound("ACANO1", 1);
			TNT1 A 0 A_PlaySound("ACANO2", 14);
			TNT1 A 0 A_CustomMissile("AutoCannonProjectileEnemy", 80, 24, random(-4, 4), 0);
			TNT1 AAA 0 A_CustomMissile("AutoCannonFlash", 80, 32, 0, 0);
			TNT1 A 0 A_CustomMissile ("ZombieLightTankBody2", 0);
			TNK1 D 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNT1 A 0 A_CustomMissile ("ZombieLightTankBody2", 0);
			TNK1 E 2 A_Recoil(-2);
			TNT1 A 0 A_PlaySound("ACANO1", 1);
			TNT1 A 0 A_PlaySound("ACANO2", 14);
			TNT1 A 0 A_CustomMissile("AutoCannonProjectileEnemy", 80, -24, random(-4, 4), 0);
			TNT1 AAA 0 A_CustomMissile("AutoCannonFlash", 80, -32, 0, 0);
			TNT1 A 0 A_CustomMissile ("ZombieLightTankBody2", 0);
			TNK1 B 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNT1 A 0 A_GiveInventory("JuggernautMachinegunammo", 1);
			TNT1 A 0 A_JumpIfInventory("JuggernautMachinegunammo", 4, "stopfiring");
			TNT1 A 0 A_CheckSight("StopFiring");
			Loop;
		StopFiring:
			TNT1 A 0;
			TNT1 A 0 A_TakeInventory("JuggernautMachinegunammo", 30);
			TNT1 A 0 A_TakeInventory("JuggernautRocketammo", 6);
			Goto See;
			////////////////////
		Pain:
			TNT1 A 0;
			TNK1 B 2;
			TNK1 B 2 A_Pain();
			Goto Rolling;
			///////////////////////
		Death:
			TNT1 A 1;
			TNT1 A 0 A_SpawnItem("BigExplosion1112");
			TNT1 A 0 A_PlaySound("weapons/explode");
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 0 A_Scream();
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
			ELEC A 0 A_Explode(100, 250);
			TNT1 A 15 A_NoBlocking();
			TNT1 A 0;
			Stop;
	}
} 
class KillTreads3 : actor { 
	Default {
		
		+NOTARGET;
		Radius 1;
		Height 1;
		DamageType Killme;
		+NOGRAVITY;
		+NOTELEPORT;
		+NODAMAGETHRUST;
		+THRUGHOST;
		+NORADIUSDMG;
		+NOEXTREMEDEATH;
		+FORCERADIUSDMG;
		PROJECTILE;
		+DEHEXPLOSION;
		+ACTIVATEMCROSS;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(20,80,0);
			Stop;
	}
}
class TreadsDamage333 : actor { 
	Default {
		
		+NOTARGET;
		Radius 1;
		Height 1;
		DamageType Stomp;
		+NOGRAVITY;
		+NOTELEPORT;
		+NODAMAGETHRUST;
		+THRUGHOST;
		+NORADIUSDMG;
		+NOEXTREMEDEATH;
		+FORCERADIUSDMG;
		PROJECTILE;
		+DEHEXPLOSION;
		+ACTIVATEMCROSS;
		+EXPLODEONWATER;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(500,50,0);
			TNT1 A 1 A_Noblocking();
			Stop;
	}
}
class ZombieLightTankBody1 : actor { 
	Default {
		
		+RANDOMIZE;
		+FORCEXYBILLBOARD;
		+DONTSPLASH;
		+NOEXTREMEDEATH;
		+THRUactorS;
		+NOGRAVITY;
		+NOCLIP;
		Projectile;
		damage 0;
		radius 2;
		height 0;
		speed 1;
		Scale 1.2;
	}
	States
	{
		Spawn:
			TN2Z TTTTTT 1();//A_FaceTarget
			Stop;
			Goto Death;
		Death:
			TNT1 A 0;
			Stop;
		XDeath:
			TNT1 A 0;
			Stop;
	}
}
class ZombieLightTankBody2: ZombieLightTankBody1 { 
	Default {
		
	}
	States
	{
		Spawn:
			TN2Z TTTT 1;
			Stop;
			Goto Death;
	}
}
class JuggernautMachinegunammo3 : Inventory { 
	Default {
		
		Inventory.MaxAmount 30;
	}
}
class JuggernautRocketammo3 : Inventory { 
	Default {
		
		Inventory.MaxAmount 6;
	}
}
class JuggernautRocket3 : actor { 
	Default {
		
		Radius 11;
		Height 8;
		Speed 30;
		Damage (random (300, 400));
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+ROCKETTRAIL;
		+MISSILE;
		+NOGRAVITY;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "$OB_MPROCKET";
		//+DONTHURTSHOOTER
	}
	States
	{
		Spawn:
			MISL I 1 Bright;
			Loop;
		Death:
			MISL B 0 Bright A_Explode();
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_SpawnItem("TankShotExplosion");
			TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (0, 360), 2, random (30, 160));
			TNT1 A 6;
			TNT1 A 0 A_PlaySound("FAREXPL", 1);
			TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 12;
			Stop;
	}
}
class ZombieMech 9954 : actor { 
	Default {
		
		
		Health 3000;
		Scale 1.3;
		Radius 48;
		Height 160;
		Mass 1000;
		Speed 16;
		PainChance 20;
		Monster;
		MinMissileChance 160;
		+BOSS;
		+FULLVOLACTIVE;
		+MISSILEMORE;
		+FLOORCLIP;
		+NORADIUSDMG;
		+DONTMORPH;
		+BOSSDEATH;
		BloodType "TankBlood", "TankBlood", "TankBlood";
		SeeSound "none";
		PainSound "none";
		DeathSound "none";
		ActiveSound "none";
		Obituary "%o was destroyed by a zombie-seized Mech.";
	}
	States
	{
		Spawn:
			MEKE A 5 A_Look();
			Loop;
		See:
			MEKE BBB 2 A_Chase();
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNT1 A 0 A_PlaySound("MECHWLK", 15);
			MEKE CCC 2 A_Chase();
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			MEKE DDD 2;
			MEKE EEE 2 A_Chase();
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNT1 A 0 A_PlaySound("MECHWLK", 15);
			MEKE FFF 2 A_Chase();
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			MEKE GGG 2;
			Loop;
		Missile:
			TNT1 A 0;
			MEKE AAA 5 A_FaceTarget();
			TNT1 A 0 A_JUmp(256, "Machinegun", "Machinegun", "Rockets", "Rockets", "Plasma", "Mortar");
		Machinegun:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 100, 82, random(-11, 11), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 100, -82, random(-11, 11), 0);
			TNT1 Aa 0 A_CustomMissile("HeavyMachinegunFlash", 100, 82, 0, 0);
			TNT1 Aa 0 A_CustomMissile("HeavyMachinegunFlash", 100, -82, 0, 0);
			TNT1 A 0 A_CustomMissile("RifleCaseSpawn", 72, 42, 0, 0);
			TNT1 A 0 A_CustomMissile("RifleCaseSpawn", 72, -42, 180, 0);
			TNT1 A 0 A_GiveInventory("JuggernautMachinegunammo", 1);
			TNT1 A 0 A_JumpIfInventory("JuggernautMachinegunammo", 30, "stopfiring");
			MEKE A 1 A_FaceTarget();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			MEKE A 1 A_FaceTarget();
			Loop;
		Rockets:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("MISLFIRE", 1);
			TNT1 A 0 A_CustomMissile("JuggernautROcket", 120, -72, random(-9, 9), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 120, -72, 0, 0);
			MEKE A 8 A_FaceTarget();
			TNT1 A 0 A_PlaySound("MISLFIRE", 1);
			TNT1 A 0 A_CustomMissile("JuggernautROcket", 120, 72, random(-9, 9), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 120, 72, 0, 0);
			MEKE A 8 A_FaceTarget();
			TNT1 A 0 A_PlaySound("MISLFIRE", 1);
			TNT1 A 0 A_CustomMissile("JuggernautROcket", 120, -72, random(-9, 9), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 120, -72, 0, 0);
			MEKE A 8 A_FaceTarget();
			TNT1 A 0 A_PlaySound("MISLFIRE", 1);
			TNT1 A 0 A_CustomMissile("JuggernautROcket", 120, 72, random(-9, 9), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 120, 72, 0, 0);
			MEKE A 16 A_FaceTarget();
			Goto See;
		PLasma:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("BIGPLSM1", 1);
			TNT1 A 0 A_CustomMissile("heavyplasmaProjectileEnemy", 100, 64, random(-3, 3), 0);
			TNT1 Aa 0 A_CustomMissile("heavyplasmaFlash", 100, 64, 0, 0);
			MEKE A 4 A_FaceTarget();
			TNT1 A 0 A_CustomMissile("heavyplasmaProjectileEnemy", 100, -64, random(-3, 3), 0);
			TNT1 Aa 0 A_CustomMissile("heavyplasmaFlash", 100, -64, 0, 0);
			MEKE A 4 A_FaceTarget();
			TNT1 A 0 A_GiveInventory("JuggernautMachinegunammo", 1);
			TNT1 A 0 A_JumpIfInventory("JuggernautMachinegunammo", 4, "stopfiring");
			MEKE A 4 A_FaceTarget();
			Loop;
		Mortar:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("MISLFIRE", 1);
			TNT1 A 0 A_CustomMissile("MechMortar", 140, -72, random(-9, 9), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 140, -72, 0, 0);
			MEKE A 8 A_FaceTarget();
			MEKE A 16 A_FaceTarget();
			Goto See;
		StopFiring:
			MEKE A 3;
			TNT1 A 0 A_TakeInventory("JuggernautMachinegunammo", 999);
			Goto See;
		Pain:
			MEKE B 1 A_Pain();
			Goto See;
		Death:
			TNT1 A 1;
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 0 A_SpawnItem("BigExplosion1112");
			TNT1 A 0 A_PlaySound("weapons/explode");
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_Scream();
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
			ELEC A 0 A_Explode(100, 250);
			TNT1 A 15;
			TNT1 A 0;
			Stop;
	}
}
class ZombieMainBattleTank : Fatso 9951 { 
	Default {
		
		YScale 1.8;
		XScale 1.9;
		
		GibHealth 25;
		damagefactor "Avoid", 0.0;
		PainChance "Kick", 255;
		damagefactor "Head", 2.0;
		damagefactor "Stomp", 0.0;
		damagefactor "GibRemoving", 0.0;
		damagefactor "MINORHead", 1.0;
		damagefactor "TeleportRemover", 0.0;
		DamageFactor "CauseObjectsToSplash", 0.0;
		Health 4000;
		+NOICEDEATH;
		PainSound "juggernaut/pain";
		DeathSound "juggernaut/death";
		ActiveSound "juggernaut/roam";
		SeeSound "juggernaut/see";
		BloodType "TankBlood", "TankBlood", "TankBlood";
		damagefactor "Blood", 0.0 damagefactor "BlueBlood", 0.0 damagefactor "GreenBlood", 0.0;
		BloodType "Brutal_Blood";
		damagefactor "Shrapnel", 0.4;
		damagefactor "Explosive", 1.5;
		damagefactor "Plasma", 1.5;
		Obituary "%o was destroyed by a zombie-seized tank.";
		MaxStepHeight 24;
		MaxDropOffHeight 32;
		Speed 1;
		Height 100;
		Radius 64;
		Mass 99999;
		Painchance 10;
		Painchance "Explosive", 150;
		+MISSILEMORE;
		+MISSILEEVENMORE;
		+BOSS;
		+FULLVOLACTIVE;
		+DONTHURTSPECIES;
		+MTHRUSPECIES;
		+NORADIUSDMG;
		Species "EnemyTank";
		MinMissileChance 150;
	}
	States
	{
		/////////////////////
		Spawn:
			TNK1 B 1;
			TNT1 A 0 A_SpawnItemEx ("KillTreads",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			Goto Standby;
		Standby:
			TNK1 B 0;
			TNT1 A 0 A_SpawnItemEx ("ZombieMainBattleTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 B 4 A_Look();
			Loop;
			//////////////////
		See:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx ("ZombieMainBattleTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 B 1;
			//TNT1 A 0 A_SpawnItem("KillTreads")
			Goto Rolling;
		Rolling:
			TNT1 A 0 A_PlaySound("juggernaut/engine");
			TNT1 A 0 A_SpawnItemEx ("ZombieMainBattleTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 B 2 A_Chase();
			TNT1 A 0 A_SpawnItemEx ("ZombieMainBattleTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 D 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNT1 A 0 A_SpawnItemEx ("ZombieMainBattleTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 E 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItemEx ("ZombieMainBattleTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 B 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNK1 D 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItemEx ("ZombieMainBattleTankBody1", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
			TNK1 E 2 A_Recoil(-1);
			TNT1 A 0 A_Jump(32, "FireMachinegun");
			Loop;
			///////////////////	
		FireMachinegun:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("juggernaut/engine");
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody2", 0);
			TNK1 B 2 A_Chase();
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 100, 24, random(-4, 4), 0);
			TNT1 AAA 0 A_CustomMissile("HeavyMachinegunFlash", 100, 24, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 100, 24, 0, 0);
			TNT1 A 0 A_CustomMissile("RifleCaseSpawn", 100, 24, 0, 0);
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody2", 0);
			TNK1 D 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody2", 0);
			TNK1 E 2 A_Recoil(-1);
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 100, 24, random(-4, 4), 0);
			TNT1 AAA 0 A_CustomMissile("HeavyMachinegunFlash", 100, 24, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 100, 24, 0, 0);
			TNT1 A 0 A_CustomMissile("RifleCaseSpawn", 100, 24, 0, 0);
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody2", 0);
			TNK1 B 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNK1 D 2 A_Recoil(-1);
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 100, 24, random(-4, 4), 0);
			TNT1 AAA 0 A_CustomMissile("HeavyMachinegunFlash", 100, 24, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 100, 24, 0, 0);
			TNT1 A 0 A_CustomMissile("RifleCaseSpawn", 100, 24, 0, 0);
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody2", 0);
			TNK1 E 2 A_Recoil(-1);
			TNT1 A 0 A_GiveInventory("JuggernautMachinegunammo", 1);
			TNT1 A 0 A_JumpIfInventory("JuggernautMachinegunammo", 10, "stopfiring");
			TNT1 A 0 A_CheckSight("StopFiring");
			Loop;
		Missile:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("TANK3", 2);
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_PlaySound("TANKF", 1);
			TNT1 A 0 A_CustomMissile("EnemyTankShell", 110, 0, random(-5, 5), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 90, 0, 0, 0);
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_CustomMissile ("ZombieMainBattleTankBody1", 0);
			TNK1 B 4;
			TNT1 A 0 A_PlaySound("TANK1", 2);
			Goto Rolling;
		StopFiring:
			TNT1 A 0;
			TNT1 A 0 A_TakeInventory("JuggernautMachinegunammo", 30);
			TNT1 A 0 A_TakeInventory("JuggernautRocketammo", 6);
			Goto See;
			////////////////////
		Pain:
			TNT1 A 0;
			TNK1 B 2;
			TNK1 B 2 A_Pain();
			Goto Rolling;
			///////////////////////
		Death:
			TNT1 A 1;
			TNT1 A 0 A_SpawnItem("BigExplosion1112");
			TNT1 A 0 A_PlaySound("weapons/explode");
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 0 A_Scream();
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
			ELEC A 0 A_Explode(100, 250);
			TNT1 A 15 A_NoBlocking();
			TNT1 A 0;
			Stop;
	}
} 
class KillTreads2 : actor { 
	Default {
		
		+NOTARGET;
		Radius 1;
		Height 1;
		DamageType Killme;
		+NOGRAVITY;
		+NOTELEPORT;
		+NODAMAGETHRUST;
		+THRUGHOST;
		+NORADIUSDMG;
		+NOEXTREMEDEATH;
		+FORCERADIUSDMG;
		PROJECTILE;
		+DEHEXPLOSION;
		+ACTIVATEMCROSS;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(20,80,0);
			Stop;
	}
}
class TreadsDamage222 : actor { 
	Default {
		
		+NOTARGET;
		Radius 1;
		Height 1;
		DamageType Stomp;
		+NOGRAVITY;
		+NOTELEPORT;
		+NODAMAGETHRUST;
		+THRUGHOST;
		+NORADIUSDMG;
		+NOEXTREMEDEATH;
		+FORCERADIUSDMG;
		PROJECTILE;
		+DEHEXPLOSION;
		+ACTIVATEMCROSS;
		+EXPLODEONWATER;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(500,50,0);
			TNT1 A 1 A_Noblocking();
			Stop;
	}
}
class ZombieMainBattleTankBody1 : actor { 
	Default {
		
		+RANDOMIZE;
		+FORCEXYBILLBOARD;
		+DONTSPLASH;
		+NOEXTREMEDEATH;
		+THRUactorS;
		+NOGRAVITY;
		+NOCLIP;
		Projectile;
		damage 0;
		radius 2;
		height 0;
		speed 1;
		Scale 1.2;
	}
	States
	{
		Spawn:
			TNKZ TTTTTT 1();//A_FaceTarget
			Stop;
			Goto Death;
		Death:
			TNT1 A 0;
			Stop;
		XDeath:
			TNT1 A 0;
			Stop;
	}
}
class ZombieMainBattleTankBody2: ZombieMainBattleTankBody1 { 
	Default {
		
	}
	States
	{
		Spawn:
			TNKZ TTTT 1;
			Stop;
			Goto Death;
	}
}
class JuggernautMachinegunammo2 : Inventory { 
	Default {
		
		Inventory.MaxAmount 30;
	}
}
class JuggernautRocketammo2 : Inventory { 
	Default {
		
		Inventory.MaxAmount 6;
	}
}
class JuggernautRocket2 : actor { 
	Default {
		
		Radius 11;
		Height 8;
		Speed 30;
		Damage (random (300, 400));
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+ROCKETTRAIL;
		+MISSILE;
		+NOGRAVITY;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "$OB_MPROCKET";
		//+DONTHURTSHOOTER
	}
	States
	{
		Spawn:
			MISL I 1 Bright;
			Loop;
		Death:
			MISL B 0 Bright A_Explode();
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_SpawnItem("TankShotExplosion");
			TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (0, 360), 2, random (30, 160));
			TNT1 A 6;
			TNT1 A 0 A_PlaySound("FAREXPL", 1);
			TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 12;
			Stop;
	}
}
class NewfagExplosionFlare : Flare_General { 
	Default {
		
		XScale 0.8;
		YScale 0.4;
		Alpha 1.0;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			FLAR A 2 bright;
			FLAR AAAAAAAAAAAAAAAA 1 BRIGHT A_FadeOut(0.11);
			Stop;
	}
}
class ArmageDoomExplosionFlare : Flare_General { 
	Default {
		
		XScale 1.0;
		YScale 0.5;
		Alpha 1.0;
		+FORCEXYBILLBOARD;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			LENY A 2 bright;
			LENY AAAAAAAAAAAAAAAA 1 BRIGHT A_FadeOut(0.11);
			Stop;
	}
}
class RedFlare : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			LENR A 2 bright;
			Stop;
			TNT1 A 0;
			LENR B 2 bright;
			Stop;
	}
}
class RedFlare3 : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,4);
			LENR AAB 1 bright;
			Stop;
			TNT1 A 0;
			LENR BAB 1 bright;
			Stop;
	}
}
class BlueFlare : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			LENB A 2 bright;
			Stop;
			TNT1 A 0;
			LENB B 2 bright;
			Stop;
	}
}
class BlueFlare3 : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,4);
			LENB AAB 1 bright;
			Stop;
			TNT1 A 0;
			LENB BAB 1 bright;
			Stop;
	}
}
class GreenFlare : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			LENG A 2 bright;
			Stop;
			TNT1 A 0;
			LENG B 2 bright;
			Stop;
	}
}
class GreenFlare3 : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,4);
			LENG AAB 1 bright;
			Stop;
			TNT1 A 0;
			LENG BAB 1 bright;
			Stop;
	}
}
class YellowFlare : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			LENY A 2 bright;
			Stop;
			TNT1 A 0;
			LENY B 2 bright;
			Stop;
	}
}
class YellowFlareSmall : YellowFlare { 
	Default {
		
		scale 0.15;
	}
}
class YellowFlareMedium : YellowFlare { 
	Default {
		
		scale 0.20;
	}
}
class YellowFlareLarge1X : YellowFlare { 
	Default {
		
		scale 1.0;
	}
}
class RedFlareMedium : RedFlare { 
	Default {
		
		scale 0.25;
	}
}
class RedFlareBig : RedFlare { 
	Default {
		
		scale 0.9;
	}
}
class RedFlareLarge1X : RedFlare { 
	Default {
		
		scale 1.0;
	}
}
class RedFlareSmall : RedFlare { 
	Default {
		
		scale 0.15;
	}
}
class RedFlareVerySmall : RedFlare { 
	Default {
		
		alpha 0.15;
		scale 0.2;
	}
}
class RedFlareSmall2 : RedFlare { 
	Default {
		
		scale 0.10;
	}
}
class GreenFlareSmall : GreenFlare { 
	Default {
		
		alpha 0.4;
		scale 0.2;
	}
}
class GreenFlareMedium : GreenFlare { 
	Default {
		
		alpha 0.3;
		scale 0.25;
	}
}
class BlueFlareMedium : BlueFlare { 
	Default {
		
		alpha 0.3;
		scale 0.15;
	}
}
class BlueFlareMedium2 : BlueFlare { 
	Default {
		
		alpha 0.3;
		scale 0.25;
	}
}
class BlueFlareMedium3 : BlueFlare { 
	Default {
		
		alpha 0.3;
		scale 0.35;
	}
}
class BlueFlareSmall : BlueFlare { 
	Default {
		
		alpha 0.3;
		scale 0.15;
	}
}
class PlasmaFlare : Flare_General { 
	Default {
		
		alpha 0.4;
		scale 0.15;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			L2NB A 1 bright;
			Stop;
			TNT1 A 0;
			L2NB B 1 bright;
			Stop;
	}
}
class FireballFlare : Flare_General { 
	Default {
		
		alpha 0.6;
		scale 0.15;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			LENY A 1 bright;
			Stop;
			TNT1 A 0;
			LENY B 1 bright;
			Stop;
	}
}
class RocketFlare : Flare_General { 
	Default {
		
		alpha 1.0;
		yscale 0.6;
		xscale 0.6;
	}
	States
	{
		Spawn:
			LEYS O 2 BRIGHT;
			Stop;
	}
}
class GreenFlareSmall2 : GreenFlare { 
	Default {
		
		alpha 0.15;
		scale 0.15;
	}
}
class LensFlare : Flare_General { 
	Default {
		
		alpha 0.45;
		scale 0.5;
	}
	States
	{
		Spawn:
			LENS A 5 bright;
			Stop;
	}
}
class WhiteFlareSmall : Flare_General { 
	Default {
		
		alpha 0.05;
		scale 0.15;
	}
	States
	{
		Spawn:
			LENW A 5 bright;
			Stop;
	}
}
class FireFightFlare : Flare_General { 
	Default {
		
		+FORCEXYBILLBOARD;
		scale 0.20;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			L2NY A 4 bright;
			Stop;
			TNT1 A 0;
			L2NY B 4 bright;
			Stop;
	}
}
class YellowFlareSmallB : YellowFlare { 
	Default {
		
		+FORCEXYBILLBOARD;
		scale 0.15;
		Alpha 0.3;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			LENY A 1 bright;
			Stop;
			TNT1 A 0;
			LENY B 1 bright;
			Stop;
	}
}
class RedFlareSpawn : actor { 
	Default {
		
		Speed 20;
		PROJECTILE;
		+NOCLIP;
	}
	States
	{
		Spawn:
			TNT1 AA 1 A_CustomMissile("RedFlareSmall2",-5,0,-85,0,random(-10,10));
			Stop;
	}
}
class YellowFlareSpawn : actor { 
	Default {
		
		Speed 20;
		PROJECTILE;
		+NOCLIP;
		+NOGRAVITY;
	}
	States
	{
		Spawn:
			TNT1 AA 1 A_CustomMissile("YellowFlareSmallB",-5,0,-85,0,random(-10,10));
			//TNT1 AA 0 A_CustomMissile("OrangeLensFlareAlt",2,0,0,0,0)
			Stop;
	}
}
class BlueFlareSpawn : actor { 
	Default {
		
		Speed 20;
		PROJECTILE;
		+NOCLIP;
	}
	States
	{
		Spawn:
			TNT1 AA 1 A_CustomMissile("BlueFlareSmall",-5,0,-85,0,random(-10,10));
			Stop;
	}
}
class GreenFlareSpawn : actor { 
	Default {
		
		Speed 20;
		PROJECTILE;
		+NOCLIP;
	}
	States
	{
		Spawn:
			TNT1 AA 1 A_CustomMissile("GreenFlareSmall",-5,0,-85,0,random(-10,10));
			Stop;
	}
}
class RedFlare22 : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			L2NR A 2 bright;
			Stop;
			TNT1 A 0;
			L2NR B 2 bright;
			Stop;
	}
}
class RedFlareSmall22 : RedFlare22 { 
	Default {
		
		scale 0.15;
	}
}
class BlueFlare22 : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			L2NB A 2 bright;
			Stop;
			TNT1 A 0;
			L2NB B 2 bright;
			Stop;
	}
}
class GreenFlare22 : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			L2NG A 2 bright;
			Stop;
			TNT1 A 0;
			L2NG B 2 bright;
			Stop;
	}
}
class GreenFlareSmall22 : GreenFlare22 { 
	Default {
		
		scale 0.22;
	}
}
class YellowFlare22 : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,2);
			L2NY A 2 bright;
			Stop;
			TNT1 A 0;
			L2NY B 2 bright;
			Stop;
	}
}
class YellowFlareSmall22 : YellowFlare22 { 
	Default {
		
		scale 0.15;
	}
}
class ExplosionFlareSpawner : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItem("NewfagExplosionFlare");
			L2NR AAA 1 BRIGHT;//A_SpawnItem("RedFlareLarge1x")
			L2NR A 5;
			Stop;
	}
}
class ExplosionFlareSpawnerSmall : Flare_General { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItem("ArmageDoomExplosionFlare");
			L2NR AAA 1 BRIGHT;//A_SpawnItem("RedFlareLarge1x")
			L2NR A 5;
			Stop;
	}
}
class LensFlareAlt : Flare_General { 
	Default {
		
		alpha 0.5;
		xscale 0.6;
		yscale 0.3;
	}
	States
	{
		Spawn:
			LENS A 5 bright;
			Stop;
	}
}
class YellowLensFlareAlt : Flare_General { 
	Default {
		
		alpha 0.5;
		xscale 0.6;
		yscale 0.2;
	}
	States
	{
		Spawn:
			LEYS A 5 bright;
			Stop;
	}
}
class GreenLensFlareAltSmall : Flare_General { 
	Default {
		
		+FORCEYBILLBOARD;
		alpha 0.3;
		xscale 0.4;
		yscale 0.1;
	}
	States
	{
		Spawn:
			LEYS G 8 bright;
			Stop;
	}
}
class OrangeLensFlareAlt : Flare_General { 
	Default {
		
		+MISSILE;
		-NOINTERACTION;
		Speed 3;
		alpha 0.5;
		xscale 0.5;
		yscale 0.2;
	}
	States
	{
		Spawn:
			LEYS O 5 bright;
			Stop;
	}
}
class OrangeLensFlareAltFast : OrangeLensFlareAlt { 
	Default {
		
	}
	States
	{
		Spawn:
			LEYS O 2 bright;
			Stop;
	}
}
class GreenLensFlareAltSmallZZ : Flare_General { 
	Default {
		
		+FORCEYBILLBOARD;
		alpha 0.4;
		xscale 0.2;
		yscale 0.2;
	}
	States
	{
		Spawn:
			LEYS G 3 bright;
			Stop;
	}
}
class BlueLensFlareAltSmallZZ : Flare_General { 
	Default {
		
		+FORCEYBILLBOARD;
		alpha 0.4;
		xscale 0.2;
		yscale 0.2;
	}
	States
	{
		Spawn:
			LEYS B 3 bright;
			Stop;
	}
}
class HeavyMachinegun: SwitchableDecoration 5462 { 
	Default {
		
		Radius 24;
		Height 64;
		+SOLID;
		+USESPECIAL;
		MONSTER;
		-COUNTKILL;
		-SHOOTABLE;
		+THRUactorS;
		+LOOKALLAROUND;
		-COUNTKILL;
		Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial;
		Mass 999999;
		Speed 0;
		damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0;
		damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0;
		damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0;
		damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0;
		damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0;
		DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0;
	}
	States
	{
		Spawn:
			TTR1 A 1;
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TTR1 A 1 A_ChangeFlag("FRIENDLY", 0);
			TTR1 A 3();
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TTR1 A 0 A_ChangeFlag("THRUactorS", 0);
			TTR1 A -1;
			Stop;
		Active:
			TNT1 A 0();
			TTR1 A 0 A_ChangeFlag("FRIENDLY", 0);
		See:
			//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
			TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
			TTR1 A 3;
			TNT1 A 0 A_GiveToTarget("HeavyMachinegunMorpher", 1);
			TNT1 A 0 A_GiveToTarget("HeavyMachinegunammo", 200);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 A_NoBlocking();
			TNT1 A 1;
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 10;
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNT1 A 1;
			Stop;
	}
}
class HeavyMachinegunUsed: HeavyMachinegun { 
	Default {
		
	}
	States
	{
		Active:
			TNT1 A 0();
			TTR1 A 0 A_ChangeFlag("FRIENDLY", 0);
		See:
			//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
			TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
			TTR1 A 3;
			TNT1 A 0 A_GiveToTarget("HeavyMachinegunMorpher", 1);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 A_NoBlocking();
			TNT1 A 1;
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 10;
			TNT1 A 0 Thing_ChangeTID(0, 0);
			Stop;
	}
}
class PlayerHeavyMachinegun : PlayerPawn { 
	Default {
		
		Speed 0;
		Scale 1.0;
		Radius 24;
		Height 56;
		Mass 999999;
		PainChance 0;
		Health 100;
		Speed 0;
		Player.Morphweapon "HeavyMachinegunGunHUD";
		Player.JumpZ 0;
		+NOSKIN;
		Player.ColorRange 112, 127;
		PainSound "*pain";
		DeathSound "*death";
		damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0;
		damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0;
		damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0;
		damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0;
		damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0;
		DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0;
	}
	States
	{
		Spawn:
			TTR2 A 1;
			TTR2 A 4;
			TNT2 A 0 A_TakeInventory("PressedUse", 1);
		Spawn2:
			TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
			TTR2 A 1;
			Loop;
		PAIN:
			TTR2 A 1;
			TTR2 A 1 A_Pain();
			Goto Spawn;
		ExitVehicle:
			TNT1 A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_SpawnItemEx ("TransferPlayerOutOfVehicle", -64, 0, 16);
			TTR2 A 4;
			TNT1 A 0 A_JumpIfInventory("CanLeaveVehicle", 1, "CanExit");
			TNT1 A 0 A_Print("Can't leave from this direction", 1);
			Goto Spawn;
		CanExit:
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_TakeInventory("CanLeaveVehicle", 1);
			TNT1 A 0 A_SpawnItemEx ("HeavyMachinegunUsed", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			TNT1 A 0 ACS_Execute(133);
			TNT1 A 100;
			TNT1 A -1;
			Stop;
		Death:
			TNT1 A 0;
			TNT1 A 0 A_Scream();
			TNT1 A 0 A_NoBlocking();
			TNT1 A 0 A_TakeInventory("HeavyMachinegunHUD", 1);
			TNT1 A 0 A_SpawnItemEx ("HeavyMachinegun", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			PLAY HIJKLM 4;
			PLAY N -1;
			Stop;
	}
}
class PowerHeavyMachinegunSwitch : PowerMorph {PowerMorph.Playerclass "PlayerHeavyMachinegun"} { 
	Default {
	actor HeavyMachinegunMorpher : CustomInventory 
		
	}
	States
	{
	PickUp:
		TNT1 A 1;
		TNT1 A 0 ACS_ExecuteAlways(132, 0, 0, 0, 0);//Grab Tripod Gun.
		TNT1 A 0 A_GiveInventory("HeavyMachinegunMorphActivation");
		TNT1 A 0 A_SpawnItem("CancelTeleportFog");
		TNT1 A 1;
		Stop;
}
}
class CheckingMorphingPlayerHealth : CustomInventory  { 
	Default {
	
	}
	States
	{
	PickUp:
		TNT1 A 0;
		TNT1 A 0 ACS_ExecuteAlways(131, 0, 0, 0, 0);//Grab Tripod Gun.
		Stop;
}
} 
class HeavyMachinegunMorphActivation : PowerupGiver { 
	Default {
	
	Powerup.Type "PowerHeavyMachinegunSwitch";
	Powerup.Duration 252000;
	+Inventory.AUTOACTIVATE;
	+Inventory.ALWAYSPICKUP;
	Inventory.MaxAmount 1;
	Health 100;
	GibHealth 1;
	Scale 0.5;
	Mass 999999999;
	Height 96;
	Radius 32;
	}
	States
	{
	Spawn:
		TNT1 A 100;
		Stop;
	PickUp:
		TNT1 A 1;
		TNT1 A 1;
		Stop;
}
}
class HeavyMachinegunGunHUD : Doomweapon { 
	Default {
	
	
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse 0;
	Weapon.AmmoGive 0;
	Weapon.AmmoType "HeavyMachinegunammo";
	Obituary "$OB_MPPISTOL";
	//+WEAPON.NOAUTOFIRE
	Inventory.PickupMessage "$PICKUP_PISTOL_DROPPED";
	Tag "$TAG_PISTOL";
	}
	States
	{
	Ready:
		TNT1 A 0;
		HMGH A 2 A_WeaponReady(1);
		Loop;
	Noammo:
		TNT1 A 0;
		HMGH A 2;
		Goto Ready;
	DeSelect:
		TNT1 A 1 A_Lower();
		Loop;
	Select:
		HMGH A 0 A_Raise();
		TNT1 A 1 A_TakeInventory("PressedUse", 1);
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		HMGH AAAAAAA 1 A_Raise();
		HMGH AAAAAAAAAAA 0 A_Raise();
		TNT1 A 0;
		Goto Ready;
	Fire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("HeavyMachinegunammo", 1, 1);
		Goto Noammo;
		HMGH C 2 BRIGHT;
		TNT1 A 0 A_FireCustomMissile("HeavyMachinegunProjectile", 0, 1, 5, -1);
		TNT1 AA 0 A_FireCustomMissile("HeavyMachinegunFlash", 0, 0, 5, 0);
		TNT1 A 0 A_TakeInventory("HeavyMachinegunammo", 1);
		TNT1 A 0 A_PlaySound("TANKMG", 1);
		HMGH A 2;
		HMGH B 2 BRIGHT;
		TNT1 A 0 A_FireCustomMissile("HeavyMachinegunProjectile", 0, 1, -5, -1);
		TNT1 AA 0 A_FireCustomMissile("HeavyMachinegunFlash", 0, 0, -5, 0);
		TNT1 A 0 A_TakeInventory("HeavyMachinegunammo", 1);
		TNT1 A 0 A_PlaySound("TANKMG", 1);
		HMGH A 2;
		Goto Ready;
	Spawn:
		LAUN A -1;
		Stop;
}
}
class HeavyMachinegunProjectile: FastProjectile { 
	Default {
	
	
	Radius 2;
	Height 0;
	Speed 200;
	Damage 7;
	+RANDOMIZE;
	+MISSILE;
	-NOGRAVITY;
	+BLOODSPLATTER;
	Gravity 0.1;
	RenderStyle "Add";
	damagetype "Blast";
	Alpha 1.0;
	Decal "BulletChip";
	Scale 1.0;
	Obituary "$OB_MPPLASMARIFLE";
	}
	States
	{
	Spawn:
		TNT1 A 1 Bright;
		TNT1 A 0 A_SpawnItemEx("HeavyMachinegunProjectileTracerTrail2", (2 *momx)/-35.0, -(2 *momy)/-35.0, 2+(2 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("HeavyMachinegunProjectileTracerTrail3", (4 *momx)/-35.0, -(4 *momy)/-35.0, 2+(4 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("HeavyMachinegunProjectileTracerTrail4", (6 *momx)/-35.0, -(6 *momy)/-35.0, 2+(6 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("HeavyMachinegunProjectileTracerTrail5", (8 *momx)/-35.0, -(8 *momy)/-35.0, 2+(8 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("HeavyMachinegunProjectileTracerTrail6", (10*momx)/-35.0, -(10*momy)/-35.0, 2+(10*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItem("HeavyMachinegunHitsProjectiles", 0, 5);
		Loop;
	Death:
		TNT1 A 0 A_SpawnItem("BulletPuff");
		TNT1 A 0 A_NoBlocking();
		TNT1 AA 0 A_CustomMissile ("ExplosionParticleVeryFast", 0, 0, random (0, 360), 2, random (0, 40));
		TNT1 A 0 A_CustomMissile ("PlasmaSmoke", 2, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 1;
		Stop;
}
}
class HeavyMachinegunProjectile2: HeavyMachinegunProjectile { 
	Default {
	
	Damage 4;
	}
}
class HeavyMachinegunProjectileEnemy: HeavyMachinegunProjectile { 
	Default {
	
	Speed 180;
	Damage 1;
	}
}
class HeavyMachinegunFlash: FastProjectile { 
	Default {
	
	
	Radius 2;
	Height 2;
	Speed 15;
	Damage 0;
	+RANDOMIZE;
	+MISSILE;
	-NOGRAVITY;
	+BLOODSPLATTER;
	Gravity 0.1;
	RenderStyle "Add";
	damagetype "Blast";
	Alpha 0.2;
	Scale 0.4;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		//TNT1 A 0 Radius_Quake(4, 4, 0, 1, 0)
		TNT1 A 1;
		TNT1 A 0 A_Stop();
	Death:
		TNT1 A 0 A_SpawnItem("YellowFlare");
		HMGH F 2;
		Stop;
}
}
class HeavyMachinegunHitsProjectiles : actor { 
	Default {
	
	Scale 1.0;
	+SHOOTABLE;
	+NOBLOOD;
	MONSTER;
	-COUNTKILL;
	Radius 6;
	Height 8;
	Health 2;
	}
	States
	{
	Spawn:
		TNT1 A 3;
		TNT1 A 0 A_NoBlocking();
		Stop;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_NoBlocking();
		Stop;
}
}	
class HeavyMachinegunProjectileTracerTrail : actor { 
	Default {
	
	Scale 0.8;
	RenderStyle "Add";
	Alpha 0.9;
	+NOINTERACTION;
	+CLIENTSIDEONLY;
	}
	States
	{
	Spawn:
		MG74 A 2 BRIGHT;
		Stop;
}
}
class HeavyMachinegunProjectileTracerTrail2: HeavyMachinegunProjectileTracerTrail {    Alpha 0.85 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail3: HeavyMachinegunProjectileTracerTrail {    Alpha 0.80 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail4: HeavyMachinegunProjectileTracerTrail {    Alpha 0.75 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail5: HeavyMachinegunProjectileTracerTrail {    Alpha 0.70 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail6: HeavyMachinegunProjectileTracerTrail {    Alpha 0.65 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail7: HeavyMachinegunProjectileTracerTrail {    Alpha 0.60 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail8: HeavyMachinegunProjectileTracerTrail {    Alpha 0.55 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail9: HeavyMachinegunProjectileTracerTrail {    Alpha 0.50 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail10: HeavyMachinegunProjectileTracerTrail {    Alpha 0.45 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail11: HeavyMachinegunProjectileTracerTrail {    Alpha 0.40 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail12: HeavyMachinegunProjectileTracerTrail {    Alpha 0.35 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail13: HeavyMachinegunProjectileTracerTrail {    Alpha 0.30 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail14: HeavyMachinegunProjectileTracerTrail {    Alpha 0.25 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail15: HeavyMachinegunProjectileTracerTrail {    Alpha 0.20 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail16: HeavyMachinegunProjectileTracerTrail {    Alpha 0.15 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail17: HeavyMachinegunProjectileTracerTrail {    Alpha 0.10 } { 
	Default {
	}
}
class HeavyMachinegunProjectileTracerTrail18: HeavyMachinegunProjectileTracerTrail {    Alpha 0.05 } { 
	Default {
class AutoCannonProjectile: HeavyMachinegunProjectile { 
	Default {
		
		Damage 14;
		Speed 250;
		Scale 0.7;
	}
	States
	{
		Spawn:
			TNT1 A 1 Bright;
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail2", (2 *momx)/-35.0, -(2 *momy)/-35.0, 2+(2 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail3", (4 *momx)/-35.0, -(4 *momy)/-35.0, 2+(4 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail4", (6 *momx)/-35.0, -(6 *momy)/-35.0, 2+(6 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail5", (8 *momx)/-35.0, -(8 *momy)/-35.0, 2+(8 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail6", (10*momx)/-35.0, -(10*momy)/-35.0, 2+(10*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail7", (12*momx)/-35.0, -(12*momy)/-35.0, 2+(12*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail8", (14*momx)/-35.0, -(14*momy)/-35.0, 2+(14*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail9", (16*momx)/-35.0, -(16*momy)/-35.0, 2+(16*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail10", (18*momx)/-35.0, -(18*momy)/-35.0, 2+(18*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail11", (20*momx)/-35.0, -(20*momy)/-35.0, 2+(20*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItemEx("AutoCannonTracerTrail12", (22*momx)/-35.0, -(22*momy)/-35.0, 2+(22*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
			TNT1 A 0 A_SpawnItem("HeavyMachinegunHitsProjectiles", 0, 5);
			Loop;
		Death:
			TNT1 A 0 A_SpawnItem("BulletPuff");
			TNT1 A 0 A_NoBlocking();
			TNT1 A 0 A_Explode(30, 100);
			TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticleVeryFast", 0, 0, random (0, 360), 2, random (0, 40));
			TNT1 A 0 A_CustomMissile ("PlasmaSmoke", 2, 0, random (0, 360), 2, random (0, 360));
			XPAC EFGHIJK 1 BRIGHT A_SpawnItem("RedFlare");
			TNT1 A 1;
			Stop;
	}
}
class AutoCannonTracerTrail : actor { 
	Default {
		
		Scale 0.8;
		RenderStyle "Add";
		Alpha 0.9;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
	}
	States
	{
		Spawn:
			MG74 C 2 BRIGHT;
			Stop;
	}
}
class AutoCannonTracerTrail2: AutoCannonTracerTrail {    Alpha 0.85 } { 
	Default {
	}
}
class AutoCannonTracerTrail3: AutoCannonTracerTrail {    Alpha 0.80 } { 
	Default {
	}
}
class AutoCannonTracerTrail4: AutoCannonTracerTrail {    Alpha 0.75 } { 
	Default {
	}
}
class AutoCannonTracerTrail5: AutoCannonTracerTrail {    Alpha 0.70 } { 
	Default {
	}
}
class AutoCannonTracerTrail6: AutoCannonTracerTrail {    Alpha 0.65 } { 
	Default {
	}
}
class AutoCannonTracerTrail7: AutoCannonTracerTrail {    Alpha 0.60 } { 
	Default {
	}
}
class AutoCannonTracerTrail8: AutoCannonTracerTrail {    Alpha 0.55 } { 
	Default {
	}
}
class AutoCannonTracerTrail9: AutoCannonTracerTrail {    Alpha 0.50 } { 
	Default {
	}
}
class AutoCannonTracerTrail10: AutoCannonTracerTrail {    Alpha 0.45 } { 
	Default {
	}
}
class AutoCannonTracerTrail11: AutoCannonTracerTrail {    Alpha 0.40 } { 
	Default {
	}
}
class AutoCannonTracerTrail12: AutoCannonTracerTrail {    Alpha 0.35 } { 
	Default {
	actor AutoCannonFlash: HeavyMachinegunFlash
		
		Scale 0.9;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		//TNT1 A 0 Radius_Quake(4, 4, 0, 1, 0)
		TNT1 A 1;
		TNT1 A 0 A_Stop();
	Death:
		TNT1 A 0 A_SpawnItem("RedFlare");
		HMGH F 2;
		Stop;
}
}
class heavyplasmaProjectile: FastProjectile { 
	Default {
	
	
	Radius 2;
	Height 0;
	Speed 220;
	Damage 13;
	+RANDOMIZE;
	+MISSILE;
	-NOGRAVITY;
	+BLOODSPLATTER;
	Gravity 0.1;
	RenderStyle "Add";
	damagetype "Plasma";
	Alpha 1.0;
	Decal "Scorch";
	Scale 1.0;
	Obituary "$OB_MPPLASMARIFLE";
	}
	States
	{
	Spawn:
		TNT1 A 1 Bright a_SpawnITEM("BlueFlareSmall");
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail2", (2 *momx)/-35.0, -(2 *momy)/-35.0, 2+(2 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail3", (4 *momx)/-35.0, -(4 *momy)/-35.0, 2+(4 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail4", (6 *momx)/-35.0, -(6 *momy)/-35.0, 2+(6 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail5", (8 *momx)/-35.0, -(8 *momy)/-35.0, 2+(8 *momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail6", (10*momx)/-35.0, -(10*momy)/-35.0, 2+(10*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail7", (12*momx)/-35.0, -(12*momy)/-35.0, 2+(12*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail8", (14*momx)/-35.0, -(14*momy)/-35.0, 2+(14*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail9", (16*momx)/-35.0, -(16*momy)/-35.0, 2+(16*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail10", (18*momx)/-35.0, -(18*momy)/-35.0, 2+(18*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail11", (20*momx)/-35.0, -(20*momy)/-35.0, 2+(20*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx("heavyplasmaProjectileTracerTrail12", (22*momx)/-35.0, -(22*momy)/-35.0, 2+(22*momz)/-35.0, 0,0,0, 0, SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItem("heavyplasmaHitsProjectiles", 0, 5);
		Loop;
	Death:
		TNT1 A 0 A_SpawnItem("BulletPuff");
		TNT1 A 0 A_NoBlocking();
		TNT1 AAAA 0 A_SpawnItem("BlueFlare");
		TNT1 AAA 0 A_CustomMissile ("HeavyPlasmaProjectileHit", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAA 0 A_CustomMissile ("ExplosionParticleVeryFast", 0, 0, random (0, 360), 2, random (0, 40));
		TNT1 AAA 0 A_CustomMissile ("PlasmaSmoke", 2, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 1;
		Stop;
}
}
class heavyplasmaProjectileEnemy: heavyplasmaProjectile { 
	Default {
	
	Speed 100;
	Damage 10;
	}
}
class AutoCannonProjectileEnemy: AutoCannonProjectile { 
	Default {
	
	Speed 100;
	Damage 10;
	}
}
class heavyplasmaFlash: FastProjectile { 
	Default {
	
	
	Radius 2;
	Height 2;
	Speed 15;
	Damage 0;
	+RANDOMIZE;
	+MISSILE;
	-NOGRAVITY;
	+BLOODSPLATTER;
	Gravity 0.1;
	RenderStyle "Add";
	damagetype "Plasma";
	Alpha 0.2;
	Scale 0.4;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 1;
		TNT1 A 0 A_Stop();
	Death:
		TNT1 AA 0 A_SpawnItem("BlueFlare");
		HMGH W 2;
		Stop;
}
}
class heavyplasmaHitsProjectiles : actor { 
	Default {
	
	Scale 1.0;
	+SHOOTABLE;
	+NOBLOOD;
	MONSTER;
	-COUNTKILL;
	Radius 6;
	Height 8;
	Health 2;
	}
	States
	{
	Spawn:
		TNT1 A 3;
		TNT1 A 0 A_NoBlocking();
		Stop;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_NoBlocking();
		Stop;
}
}	
class heavyplasmaProjectileTracerTrail : actor { 
	Default {
	
	Scale 1.0;
	RenderStyle "Add";
	Alpha 0.9;
	+NOINTERACTION;
	+CLIENTSIDEONLY;
	}
	States
	{
	Spawn:
		HPLP A 2 BRIGHT;
		Stop;
}
}
class heavyplasmaProjectileHit : actor { 
	Default {
	
	Scale 2.1;
	RenderStyle "Add";
	Alpha 0.7;
	+MISSILE;
	Speed 2;
	+NOGRAVITY;
	+DOOMBOUNCE;
	+CLIENTSIDEONLY;
	Radius 1;
	Height 1;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		HPLP BCDEF 3 BRIGHT A_SpawnItem("BlueFlareSmall");
		Stop;
}
}
class heavyplasmaProjectileTracerTrail2: heavyplasmaProjectileTracerTrail {    Alpha 0.85 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail3: heavyplasmaProjectileTracerTrail {    Alpha 0.80 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail4: heavyplasmaProjectileTracerTrail {    Alpha 0.75 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail5: heavyplasmaProjectileTracerTrail {    Alpha 0.70 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail6: heavyplasmaProjectileTracerTrail {    Alpha 0.65 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail7: heavyplasmaProjectileTracerTrail {    Alpha 0.60 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail8: heavyplasmaProjectileTracerTrail {    Alpha 0.55 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail9: heavyplasmaProjectileTracerTrail {    Alpha 0.50 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail10: heavyplasmaProjectileTracerTrail {    Alpha 0.45 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail11: heavyplasmaProjectileTracerTrail {    Alpha 0.40 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail12: heavyplasmaProjectileTracerTrail {    Alpha 0.35 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail13: heavyplasmaProjectileTracerTrail {    Alpha 0.30 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail14: heavyplasmaProjectileTracerTrail {    Alpha 0.25 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail15: heavyplasmaProjectileTracerTrail {    Alpha 0.20 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail16: heavyplasmaProjectileTracerTrail {    Alpha 0.15 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail17: heavyplasmaProjectileTracerTrail {    Alpha 0.10 } { 
	Default {
	}
}
class heavyplasmaProjectileTracerTrail18: heavyplasmaProjectileTracerTrail {    Alpha 0.05 } { 
	Default {
class HeliBase1 : actor { 
	Default {
		
		Scale 1.0;
		+FORCEXYBILLBOARD;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			HEL1 A 1;
			Stop;
}}
class HeliBase2: HeliBase1 { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			HEL1 B 1;
			Stop;
}}
class HeliBase3: HeliBase1 { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			HEL1 C 1;
			Stop;
}}
class HeliBase4: HeliBase1 { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			HEL1 D 1;
			Stop;
}}
class HeliBase8 : actor { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			HEL1 A 8;
			Stop;
}}
class attackhelicopter: SwitchableDecoration 7262 { 
	Default {
		
		var int user_helicopterdirection;
		Scale 1.0;
		Radius 36;
		Height 96;
		+SOLID;
		+USESPECIAL;
		MONSTER;
		-COUNTKILL;
		+SHOOTABLE;
		+LOOKALLAROUND;
		+THRUactorS;
		+NOINFIGHTING;
		+NORADIUSDMG;
		-COUNTKILL;
		MaxTargetRange 120;
		PainChance "Repair", 255;
		BloodType "TankBlood", "TankBlood", "TankBlood";
		Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial;
		Mass 9999;
		Speed 0;
		health 600;
		damagefactor "stomp", 0;
		damagefactor "Repair", 1.0 damagefactor "CheckRepair", 0.0;
		damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0;
		damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0;
		damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0;
		damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0;
		damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0;
		DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0;
		DamageFactor "attackhelicopterWeakSpot", 3.0 damagefactor "Plasma", 1.5 damagefactor "Plasma2", 1.5;
		damagefactor "Desintegrate", 3.0;
	}
	States
	{
		Spawn:
			HELA A 0;
			TNT1 A 1;
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 ACS_ExecuteAlways(137, 0, 0, 0, 0);//Check vehicle initial angle.
			TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
			TNT1 A 0 A_SpawnItem("HeliBase8");
			TNT1 A 5();
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNK1 C 0 A_ChangeFlag("THRUactorS", 0);
			TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
			Goto StandingHere;
		StandingHere:
			TNT1 A 7;
			TNT1 A 0 A_SpawnItem("HeliBase8");
			TNT1 A 0 A_SpawnItem("StationedVehicleCheckRepairs");
			Loop;
		Active:
			TNT1 A 0();
			//TNT1 A 0 A_Look
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health	
			//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
			TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
			HELA A 3;
			TNT1 A 0 A_GiveToTarget("attackhelicopterMorpher", 1);
			TNT1 A 0 A_GiveToTarget("HeavyMachinegunammo", 999);
			TNT1 A 0 A_GiveToTarget("HelicopterRocketammo", 2000);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 A_NoBlocking();
			TNT1 A 1;
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 10;
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNT1 A 1;
			Stop;
		Death:
			TNT1 A 1;
			TNT1 A 0 A_SpawnItem("BigExplosion1112");
			TNT1 A 0 A_PlaySound("weapons/explode");
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_Scream();
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
			ELEC A 0 A_Explode(100, 250);
			TNT1 A 15;
			TNT1 A 0;
			Stop;
		Pain.Repair:
			TNT1 A 0;
			TNT1 A 0 A_ChangeFLag("NOPAIN", 1);
			TNT1 A 0 HealThing(5);
			HELA A 1;
			TNT1 A 0 HealThing(5);
			TNT1 A 0 A_ChangeFLag("NOPAIN", 0);
			Goto StandingHere;
	}
}
class attackhelicopterUsed: attackhelicopter { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 1;
			TNT1 A 0 ACS_ExecuteAlways(136, 0, 0, 0, 0);//SpawnVehicleBase
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
			TNT1 A 5();
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNK1 C 0 A_ChangeFlag("THRUactorS", 0);
			TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
			TNT1 A 0 ACS_Execute(129);
			Goto StandingHere;
		IsOnline:
			TNT1 A 0;
			TNT1 A 1;
			TNT1 A 0 A_TAkeInventory("attackhelicopterBaseDirection", 500);
			Goto StandingHere;
		Active:
			TNT1 A 0();
			TTR1 A 0 A_ChangeFlag("FRIENDLY", 0);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health
			//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
			TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
			TNT1 A 3;
			TNT1 A 0 A_GiveToTarget("attackhelicopterMorpher", 1);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 A_NoBlocking();
			TNT1 A 1;
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 10;
			TNT1 A 0 Thing_ChangeTID(0, 0);
			Stop;
	}
}
class PowerattackhelicopterSwitch : PowerMorph {PowerMorph.Playerclass "Playerattackhelicopter"} { 
	Default {
	actor attackhelicopterMorpher : CustomInventory 
		
	}
	States
	{
	PickUp:
		TNT1 A 1;
		TNT1 A 0 ACS_ExecuteAlways(134, 0, 0, 0, 0);//Get into attackhelicopter
		TNT1 A 0 A_GiveInventory("attackhelicopterMorphActivation");
		TNT1 A 0 A_SpawnItem("CancelTeleportFog");
		TNT1 A 1;
		Stop;
}
}
class attackhelicopterMorphActivation : PowerupGiver { 
	Default {
	
	Powerup.Type "PowerattackhelicopterSwitch";
	Powerup.Duration 252000;
	+Inventory.AUTOACTIVATE;
	+Inventory.ALWAYSPICKUP;
	Inventory.MaxAmount 1;
	Health 100;
	GibHealth 1;
	Mass 9999;
	Height 96;
	Radius 32;
	}
	States
	{
	Spawn:
		TNT1 A 100;
		Stop;
	PickUp:
		TNT1 A 1;
		TNT1 A 1;
		Stop;
}
}
class Playerattackhelicopter : PlayerPawn { 
	Default {
	
	var int user_attackhelicopterbasedirection;
	Speed 0.8;
	Scale 1.0;
	Radius 36;
	Height 96;
	Mass 9999;
	PainChance 0;
	PainChance "HitGround", 255;
	health 600;
	-PICKUP;
	player.viewheight90;
	player.attackzoffset 40;
	MaxStepHeight 64;
	Player.Morphweapon "attackhelicopterGun";
	Player.JumpZ 0;
	BloodType "TankBlood", "TankBlood", "TankBlood";
	damagefactor "stomp", 0;
	+NOSKIN;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	+FIXMAPTHINGPOS;
	+DONTRIP;
	-CANUSEWALLS;
	-PICKUP;
	+FLOAT;
	+FORCEXYBILLBOARD;
	DamageFactor "Repair", 0.0 damagefactor "CheckRepair", 0.0;
	damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0;
	damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0;
	damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0;
	damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0;
	damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0;
	DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0;
	DamageFactor "attackhelicopterWeakSpot", 3.0 damagefactor "Plasma", 1.5 damagefactor "Plasma2", 1.5;
	damagefactor "Desintegrate", 3.0;
	damagefactor "HitGround", 3.0;
	}
	States
	{
	ExitVehicle:
		TNT1 A 0;
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 0 A_StopSound(6);
		TNT1 A 0 A_PlaySound("HELSTOP", 4);
		TNT1 A 0 ThrustThingZ(0,-20,0,1);
		HEL1 ABABAB 1;
		TNT1 A 0 ThrustThingZ(0,-20,0,1);
		HEL1 ABCD 1;
		TNT1 A 0 ThrustThingZ(0,-30,0,1);
		HEL1 ABCD 1;
		TNT1 A 0 ThrustThingZ(0,-40,0,1);
		HEL1 ABCD 2;
		TNT1 A 0 ThrustThingZ(0,-50,0,1);
		HEL1 ABCD 3;
		TNT1 A 0 ThrustThingZ(0,-60,0,1);
		HEL1 ABCD 4;
		TNT1 A 0 ThrustThingZ(0,-60,0,1);
		HEL1 ABCD 5;
		TNT1 A 0 ThrustThingZ(0,-20,0,1);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		TNT1 A 0 A_TAKEInventory("PowerFlight", 1);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_SpawnItemEx ("TransferPlayerOutOfVehicle", 100, 150, 0);
		HEL1 A 3;
		TNT1 A 0 A_JumpIfInventory("CanLeaveVehicle", 1, "CanExit");
		TNT1 A 0 A_Print("Can't leave from this direction", 1);
		Goto Stay;
	CanExit:
		TNT1 A 0;
		TNT1 A 2;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("HelicopterIsFlying", 1);
		TNT1 A 0 A_TakeInventory("CanLeaveVehicle", 1);
		TNT1 A 0 ACS_Execute(135);
		TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
		TNT1 A 0 A_SpawnItemEx ("attackhelicopterUsed", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
		Goto FinishExit;
	FinishExit:
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 AAA 10 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		Goto Stay;
	Spawn2: //Taking Off
		HELA A 1;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("PressedJump", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("Accelerate", 1);
		TNT1 A 0 A_TakeInventory("BackPedal", 1);
		TNT1 A 0 ACS_ExecuteAlways(877, 0, 0, 0, 0);//Camera
		HEL1 A 1;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("FiredTankMainGun", 1);
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 0 A_PlaySound("HELSTAR", 1);
		TNT1 A 0 A_ChangeFlag("NOPAIN", 1);
		HEL1 ABCD 6;
		HEL1 ABCD 5;
		HEL1 ABCD 4;
		HEL1 ABCD 3;
		TNT1 A 0 A_GIVEInventory("PowerFlight", 1);
		TNT1 A 0 ThrustThingZ(0,25,0,1);
		HEL1 ABCD 2;
		TNT1 A 0 ThrustThingZ(0,25,0,1);
		HEL1 ABCDABCD 1;
		TNT1 A 0 ThrustThingZ(0,25,0,1);
		HEL1 AB 1;
		TNT1 A 0 A_ChangeFlag("NOPAIN", 0);
		TNT1 A 0 A_GiveInventory("HelicopterIsFlying", 1);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		Goto Stay;
	See:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItem("HeliBase1");
		Goto Stay;
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("HelicopterIsFlying", 1, "Stay");
		TNT1 A 0 A_SpawnItem("HeliBase1");
		Goto Spawn2;
	Stay:
		TNT1 A 1 A_SpawnItem("HeliBase1");
		TNT1 A 1 A_SpawnItem("HeliBase2");
		TNT1 A 1 A_SpawnItem("HeliBase3");
		TNT1 A 1 A_SpawnItem("HeliBase4");
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 70, 0, 0, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 70, 0, 90, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 70, 0, 45, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 70, 0, 135, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 70, 0, 180, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 70, 0, 225, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 70, 0, 270, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 70, 0, 315, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetectionGround", 0, 0, 0, 2, -90);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_PlaySound("HELILOP", 6, 1, 1);
		TNT1 A 0 A_PlaySound("HELILOP2", 7, 1, 1);
		TNT1 A 0 A_GIVEInventory("PowerFlight", 1);
		TNT1 A 0 A_SpawnItem("HeliBase4");
		Loop;
	Pain.HitGround:
		PLAY G 0;
		TNT1 A 0 ThrustThingZ(0,60,0,1);
		TNT1 A 0 A_SpawnItem("HeliBase1");
		HEL1 A 1 A_Pain();
		Goto Stay;
	Death:
	XDeath:
		TNT1 A 0;
		TNT1 A 0 A_StopSound(6);
		TNT1 A 0 A_StopSound(7);
		TNT1 A 0 A_TakeInventory("AttackhelicopterGun", 1);
		TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		TNT1 A 0 A_PlaySound("HELSTOP", 6);
		TNT1 A 0 A_ChangeFlag("QUARTERGRAVITY", 1);
	falling:
		TNT1 A 0 A_Scream();
		TNT1 A 0 A_ClearTarget();
		TNT1 A 0 A_NoBlocking();
		HEL1 AB 1 A_CustomMissile ("HollywoodFire", 32, 0, random (0, 360), 2, random (0, 180));
		TNT1 A 0 A_SetAngle(10 + angle);
		HEL1 CD 1 A_CustomMissile ("HollywoodFire", 32, 0, random (0, 360), 2, random (0, 180));
		TNT1 A 0 A_SetAngle(10 + angle);
		TNT1 A 0 A_CheckFloor("Crashed");
		Loop;
	Crashed:
		TNT1 A 0 A_SpawnItem("BigExplosion1112");
		TNT1 A 0 A_PlaySound("weapons/explode");
		TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_StopSound(6);
		ELEC A 0 A_Explode(100, 250);
		TNT1 A 0 A_SpawnItem("DestroyedAircraft");
		8762 A 500;
		8762 A 2000;
		8762 A -1;
		Stop;
}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Vehicle's weapons and misc
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class attackhelicopterGun : Doomweapon { 
	Default {
	
	
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "HelicopterRocketammo";
	Weapon.AmmoType2 "HeavyMachinegunammo";
	Obituary "$OB_MPPISTOL";
	+WEAPON.Ammo_OPTIONAL;
	+WEAPON.ALT_ammo_OPTIONAL;
	//+WEAPON.NOAUTOFIRE
	Inventory.PickupMessage "$PICKUP_PISTOL_DROPPED";
	Tag "$TAG_PISTOL";
	}
	States
	{
	Ready:
		HELH A 1 A_WeaponReady(1);
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck2");
		NULL A 0 A_JumpIf (pitch > 22, "TooLowCheck2");
		Loop;
	NotReady:
		TNT1 A 1 A_GiveInventory("attackhelicopterReady", 1);
		Goto Ready;
	DeSelect:
		TNT1 A 1 A_Lower();
		TNT1 A 0 SetPlayerProperty(0,0,4);
		Loop;
	Select:
		HELH AAAAAAAAAAAA 0 A_Raise();
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 1 A_TakeInventory("PressedUse", 1);
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		HELH AAA 1 A_Raise();
		TNT1 A 0;
		Goto Ready;
	Noammo:
		HELH A 1;
		TNT1 A 0 A_Print("Ammunition Depleted", 2);
		Goto Ready;
	Fire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("HelicopterRocketammo", 1, 1);
		Goto Noammo;
		TNT1 A 0 A_PlaySound("MISLFIRE", 1);
		TNT1 A 0 A_TakeInventory("HelicopterRocketammo", 1);
		MISG A 0 A_FireCustomMissile("AssaultHelicopterRocket", 0, 0, -20, -40);
		MISG A 0 A_FireCustomMissile("TankFireEffect", 0, 1, -45, -45);
		HELH A 1 BRIGHT;
		TNT1 A 0 A_GunFlash();
		HELH AA 4;
		TNT1 AAAA 0;
		TNT1 A 0 A_PlaySound("MISLFIRE", 2);
		TNT1 A 0 A_TakeInventory("HelicopterRocketammo", 1);
		MISG A 0 A_FireCustomMissile("AssaultHelicopterRocket", 0, 0, 20, -40);
		MISG A 0 A_FireCustomMissile("TankFireEffect", 0, 1, 45, -45);
		HELH A 1 BRIGHT;
		TNT1 A 0 A_GunFlash();
		HELH AA 4;
		TNT1 A 0 A_GunFlash();
		HELH AA 4;
		TNT1 A 0 A_GunFlash();
		HELH AA 4;
		TNT1 A 0 A_GunFlash();
		Goto Ready;
	AltFire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("HeavyMachinegunammo", 1, 1);
		Goto Noammo;
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_PlaySound("TANKMG", 1);
		TNT1 A 0 A_TakeInventory("HeavyMachinegunammo", 1);
		TNT1 A 0 A_FireCustomMissile("HeavyMachinegunProjectile", 0, 1, 0, -10);
		TNT1 AA 0 A_FireCustomMissile("HeavyMachinegunFlash", 0, 1, 0, -10);
		HELH A 1 BRIGHT;
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 A_GiveInventory("TankReady", 1);
		HELH AA 1 A_GiveInventory("TankReady", 1);
		HELH A 1 A_GiveInventory("TankReady", 1);
		Goto Ready;
	Flash:
		TNT1 A 1;
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 22, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 22, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 22, "TooLowCheck1");
		Stop;
	Spawn:
		LAUN A -1;
		Stop;
	TooHigh2:
		TNT1 A 0 A_SetPitch(346);
		Goto Ready;
	TooLowCheck2:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1")
		TNT1 A 0 A_SetPitch(22);
		Goto Ready;
	TooHighCheck2:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 345, "TooHigh2");
		Goto Ready;
	TooHigh:
		TNT1 A 0 A_SetPitch(346);
		Goto Flash;
	TooLowCheck1:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1")
		TNT1 A 0 A_SetPitch(22);
		Goto Flash;
	TooHighCheck1:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 345, "TooHigh");
		Goto Flash;
	LightEnd:
		TNT1 A 10;
		Stop;
}
}
class AssaultHelicopterRocket : actor { 
	Default {
	
	Radius 11;
	Height 8;
	Speed 40;
	Damage (random (250, 350));
	Projectile;
	+RANDOMIZE;
	+DEHEXPLOSION;
	+ROCKETTRAIL;
	+MISSILE;
	+NOGRAVITY;
	+FORCERADIUSDMG;
	SeeSound "weapons/rocklf";
	DeathSound "weapons/rocklx";
	Obituary "$OB_MPROCKET";
	//+DONTHURTSHOOTER
	}
	States
	{
	Spawn:
		MISL I 1 Bright;
		Loop;
	Death:
		MISL B 0 Bright A_Explode();
		TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
		TNT1 A 0 A_SpawnItem("TankShotExplosion");
		TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (0, 360), 2, random (30, 160));
		TNT1 A 6;
		TNT1 A 0 A_PlaySound("FAREXPL", 1);
		TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 12;
		Stop;
}
}
class PlayerAssaultHelicopter : PlayerPawn { 
	Default {
	
	Speed 0;
	Scale 0.9;
	Radius 64;
	Height 96;
	Mass 999999;
	PainChance 0;
	PainChance "HitGround", 255;
	Health 100;
	-PICKUP;
	Speed 0.8;
	player.viewheight96;
	player.attackzoffset 50;
	MaxStepHeight 48;
	Player.Morphweapon "AssaultHelicopterGun";
	damagefactor "stomp", 0;
	damagefactor "normal", 0.3;
	damagefactor "AssaultHelicopterhealth", 1.0;
	damagefactor "HitGround", 2.0;
	bloodtype "AssaultHelicopterblood";
	damagetype "AssaultHelicopterhealth";
	damagefactor "bullet", 0.3;
	BloodType "TankBlood";
	+NOSKIN;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	+FIXMAPTHINGPOS;
	+FLOAT;
	+FORCEXYBILLBOARD;
	+DONTRIP;
	-PICKUP;
	}
	States
	{
	Spawn:
	Spawn2:
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("Accelerate", 1);
		TNT1 A 0 A_TakeInventory("BackPedal", 1);
		TNT1 A 0 A_GIVEInventory("PowerFlight", 1);
		TNT1 A 0 ACS_ExecuteAlways(877, 0, 0, 0, 0);
		HEL1 A 1;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("FiredTankMainGun", 1);
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 0 A_PlaySound("HELSTAR", 1);
		HEL1 ABCD 6;
		HEL1 ABCD 5;
		HEL1 ABCD 4;
		HEL1 ABCD 3;
		TNT1 A 0 ThrustThingZ(0,25,0,1);
		HEL1 ABCD 2;
		TNT1 A 0 ThrustThingZ(0,25,0,1);
		HEL1 ABCDABCD 1;
		TNT1 A 0 ThrustThingZ(0,25,0,1);
		HEL1 AB 1;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		Goto Stay;
	Stay:
		HEL1 ACBD 1;
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 0, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 90, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 45, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 135, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 180, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 225, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 270, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 315, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetectionGround", 0, 0, 0, 2, -90);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_PlaySound("HELILOP", 6, 1, 1);
		TNT1 A 0 A_PlaySound("HELILOP2", 7, 1, 1);
		TNT1 A 0 A_GIVEInventory("PowerFlight", 1);
		Loop;
	See:
		HEL1 ACBD 1;
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 0, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 90, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 45, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 135, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 180, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 225, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 270, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetection", 50, 0, 315, 2, 0);
		TNT1 A 0 A_CustomMissile ("HelicopterHitDetectionGround", 0, 0, 0, 2, -90);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_PlaySound("HELILOP", 6, 1, 1);
		TNT1 A 0 A_GIVEInventory("PowerFlight", 1);
		Goto Stay;
	Pain:
		PLAY G 0;
		HEL1 A 1 A_Pain();
		Goto Stay;
	Pain.HitGround:
		PLAY G 0;
		TNT1 A 0 ThrustThingZ(0,60,0,1);
		HEL1 A 1 A_Pain();
		Goto Stay;
	Death:
	XDeath:
		TNT1 A 0;
		TNT1 A 0 A_StopSound(6);
		TNT1 A 0 A_StopSound(7);
		TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		TNT1 A 0 A_PlaySound("HELSTOP", 6);
		TNT1 A 0 A_ChangeFlag("QUARTERGRAVITY", 1);
	falling:
		TNT1 A 0 A_Scream();
		TNT1 A 0 A_ClearTarget();
		TNT1 A 0 A_NoBlocking();
		HEL1 AB 1 A_CustomMissile ("HollywoodFire", 32, 0, random (0, 360), 2, random (0, 180));
		TNT1 A 0 A_SetAngle(10 + angle);
		HEL1 CD 1 A_CustomMissile ("HollywoodFire", 32, 0, random (0, 360), 2, random (0, 180));
		TNT1 A 0 A_SetAngle(10 + angle);
		TNT1 A 0 A_CheckFloor("Crashed");
		Loop;
	Crashed:
		TNT1 A 0 A_SpawnItem("BigExplosion1112");
		TNT1 A 0 A_PlaySound("weapons/explode");
		TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_StopSound(6);
		ELEC A 0 A_Explode(100, 250);
		TNT1 A 0 A_SpawnItem("DestroyedAircraft");
		8762 A 500;
		8762 A 2000;
		8762 A -1;
		Stop;
		//ExitVehicle
	ExitVehicle:
		TNT1 A 0;
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 0 A_StopSound(6);
		TNT1 A 0 A_PlaySound("HELSTOP", 4);
		TNT1 A 0 ThrustThingZ(0,-20,0,1);
		HEL1 ABABAB 1;
		TNT1 A 0 ThrustThingZ(0,-20,0,1);
		HEL1 ABCD 1;
		TNT1 A 0 ThrustThingZ(0,-30,0,1);
		HEL1 ABCD 1;
		TNT1 A 0 ThrustThingZ(0,-40,0,1);
		HEL1 ABCD 2;
		TNT1 A 0 ThrustThingZ(0,-50,0,1);
		HEL1 ABCD 3;
		TNT1 A 0 ThrustThingZ(0,-60,0,1);
		HEL1 ABCD 4;
		TNT1 A 0 ThrustThingZ(0,-60,0,1);
		HEL1 ABCD 5;
		TNT1 A 0 ThrustThingZ(0,-20,0,1);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		TNT1 A 0 A_TAKEInventory("PowerFlight", 1);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
		TNT1 A 0 A_JumpIfHealthLower(2, "ExitVehicle1");
		TNT1 A 0 A_JumpIfHealthLower(3, "ExitVehicle2");
		TNT1 A 0 A_JumpIfHealthLower(4, "ExitVehicle3");
		TNT1 A 0 A_JumpIfHealthLower(5, "ExitVehicle4");
		TNT1 A 0 A_JumpIfHealthLower(6, "ExitVehicle5");
		TNT1 A 0 A_JumpIfHealthLower(7, "ExitVehicle6");
		TNT1 A 0 A_JumpIfHealthLower(8, "ExitVehicle7");
		TNT1 A 0 A_JumpIfHealthLower(9, "ExitVehicle8");
		TNT1 A 0 A_JumpIfHealthLower(10, "ExitVehicle9");
		TNT1 A 0 A_JumpIfHealthLower(11, "ExitVehicle10");
		TNT1 A 0 A_JumpIfHealthLower(12, "ExitVehicle11");
		TNT1 A 0 A_JumpIfHealthLower(13, "ExitVehicle12");
		TNT1 A 0 A_JumpIfHealthLower(14, "ExitVehicle13");
		TNT1 A 0 A_JumpIfHealthLower(15, "ExitVehicle14");
		TNT1 A 0 A_JumpIfHealthLower(16, "ExitVehicle15");
		TNT1 A 0 A_JumpIfHealthLower(17, "ExitVehicle16");
		TNT1 A 0 A_JumpIfHealthLower(18, "ExitVehicle17");
		TNT1 A 0 A_JumpIfHealthLower(19, "ExitVehicle18");
		TNT1 A 0 A_JumpIfHealthLower(20, "ExitVehicle19");
		TNT1 A 0 A_JumpIfHealthLower(21, "ExitVehicle20");
		TNT1 A 0 A_JumpIfHealthLower(22, "ExitVehicle21");
		TNT1 A 0 A_JumpIfHealthLower(23, "ExitVehicle22");
		TNT1 A 0 A_JumpIfHealthLower(24, "ExitVehicle23");
		TNT1 A 0 A_JumpIfHealthLower(25, "ExitVehicle24");
		TNT1 A 0 A_JumpIfHealthLower(26, "ExitVehicle25");
		TNT1 A 0 A_JumpIfHealthLower(27, "ExitVehicle26");
		TNT1 A 0 A_JumpIfHealthLower(28, "ExitVehicle27");
		TNT1 A 0 A_JumpIfHealthLower(29, "ExitVehicle28");
		TNT1 A 0 A_JumpIfHealthLower(30, "ExitVehicle29");
		TNT1 A 0 A_JumpIfHealthLower(31, "ExitVehicle30");
		TNT1 A 0 A_JumpIfHealthLower(32, "ExitVehicle31");
		TNT1 A 0 A_JumpIfHealthLower(33, "ExitVehicle32");
		TNT1 A 0 A_JumpIfHealthLower(34, "ExitVehicle33");
		TNT1 A 0 A_JumpIfHealthLower(35, "ExitVehicle34");
		TNT1 A 0 A_JumpIfHealthLower(36, "ExitVehicle35");
		TNT1 A 0 A_JumpIfHealthLower(37, "ExitVehicle36");
		TNT1 A 0 A_JumpIfHealthLower(38, "ExitVehicle37");
		TNT1 A 0 A_JumpIfHealthLower(39, "ExitVehicle38");
		TNT1 A 0 A_JumpIfHealthLower(40, "ExitVehicle39");
		TNT1 A 0 A_JumpIfHealthLower(41, "ExitVehicle40");
		TNT1 A 0 A_JumpIfHealthLower(42, "ExitVehicle41");
		TNT1 A 0 A_JumpIfHealthLower(43, "ExitVehicle42");
		TNT1 A 0 A_JumpIfHealthLower(44, "ExitVehicle43");
		TNT1 A 0 A_JumpIfHealthLower(45, "ExitVehicle44");
		TNT1 A 0 A_JumpIfHealthLower(46, "ExitVehicle45");
		TNT1 A 0 A_JumpIfHealthLower(47, "ExitVehicle46");
		TNT1 A 0 A_JumpIfHealthLower(48, "ExitVehicle47");
		TNT1 A 0 A_JumpIfHealthLower(49, "ExitVehicle48");
		TNT1 A 0 A_JumpIfHealthLower(50, "ExitVehicle49");
		TNT1 A 0 A_JumpIfHealthLower(51, "ExitVehicle50");
		TNT1 A 0 A_JumpIfHealthLower(52, "ExitVehicle51");
		TNT1 A 0 A_JumpIfHealthLower(53, "ExitVehicle52");
		TNT1 A 0 A_JumpIfHealthLower(54, "ExitVehicle53");
		TNT1 A 0 A_JumpIfHealthLower(55, "ExitVehicle54");
		TNT1 A 0 A_JumpIfHealthLower(56, "ExitVehicle55");
		TNT1 A 0 A_JumpIfHealthLower(57, "ExitVehicle56");
		TNT1 A 0 A_JumpIfHealthLower(58, "ExitVehicle57");
		TNT1 A 0 A_JumpIfHealthLower(59, "ExitVehicle58");
		TNT1 A 0 A_JumpIfHealthLower(60, "ExitVehicle59");
		TNT1 A 0 A_JumpIfHealthLower(61, "ExitVehicle60");
		TNT1 A 0 A_JumpIfHealthLower(62, "ExitVehicle61");
		TNT1 A 0 A_JumpIfHealthLower(63, "ExitVehicle62");
		TNT1 A 0 A_JumpIfHealthLower(64, "ExitVehicle63");
		TNT1 A 0 A_JumpIfHealthLower(65, "ExitVehicle64");
		TNT1 A 0 A_JumpIfHealthLower(66, "ExitVehicle65");
		TNT1 A 0 A_JumpIfHealthLower(67, "ExitVehicle66");
		TNT1 A 0 A_JumpIfHealthLower(68, "ExitVehicle67");
		TNT1 A 0 A_JumpIfHealthLower(69, "ExitVehicle68");
		TNT1 A 0 A_JumpIfHealthLower(70, "ExitVehicle69");
		TNT1 A 0 A_JumpIfHealthLower(71, "ExitVehicle70");
		TNT1 A 0 A_JumpIfHealthLower(72, "ExitVehicle71");
		TNT1 A 0 A_JumpIfHealthLower(73, "ExitVehicle72");
		TNT1 A 0 A_JumpIfHealthLower(74, "ExitVehicle73");
		TNT1 A 0 A_JumpIfHealthLower(75, "ExitVehicle74");
		TNT1 A 0 A_JumpIfHealthLower(76, "ExitVehicle75");
		TNT1 A 0 A_JumpIfHealthLower(77, "ExitVehicle76");
		TNT1 A 0 A_JumpIfHealthLower(78, "ExitVehicle77");
		TNT1 A 0 A_JumpIfHealthLower(79, "ExitVehicle78");
		TNT1 A 0 A_JumpIfHealthLower(80, "ExitVehicle79");
		TNT1 A 0 A_JumpIfHealthLower(81, "ExitVehicle80");
		TNT1 A 0 A_JumpIfHealthLower(82, "ExitVehicle81");
		TNT1 A 0 A_JumpIfHealthLower(83, "ExitVehicle82");
		TNT1 A 0 A_JumpIfHealthLower(84, "ExitVehicle83");
		TNT1 A 0 A_JumpIfHealthLower(85, "ExitVehicle84");
		TNT1 A 0 A_JumpIfHealthLower(86, "ExitVehicle85");
		TNT1 A 0 A_JumpIfHealthLower(87, "ExitVehicle86");
		TNT1 A 0 A_JumpIfHealthLower(88, "ExitVehicle87");
		TNT1 A 0 A_JumpIfHealthLower(89, "ExitVehicle88");
		TNT1 A 0 A_JumpIfHealthLower(90, "ExitVehicle89");
		TNT1 A 0 A_JumpIfHealthLower(91, "ExitVehicle90");
		TNT1 A 0 A_JumpIfHealthLower(92, "ExitVehicle91");
		TNT1 A 0 A_JumpIfHealthLower(93, "ExitVehicle92");
		TNT1 A 0 A_JumpIfHealthLower(94, "ExitVehicle93");
		TNT1 A 0 A_JumpIfHealthLower(95, "ExitVehicle94");
		TNT1 A 0 A_JumpIfHealthLower(96, "ExitVehicle95");
		TNT1 A 0 A_JumpIfHealthLower(97, "ExitVehicle96");
		TNT1 A 0 A_JumpIfHealthLower(98, "ExitVehicle97");
		TNT1 A 0 A_JumpIfHealthLower(99, "ExitVehicle98");
		TNT1 A 0 A_JumpIfHealthLower(100, "ExitVehicle99");
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter100", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle99:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter99", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle98:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter98", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle97:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter97", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle96:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter96", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle95:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter95", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle94:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter94", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle93:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter93", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle92:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter92", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle91:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter91", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle90:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter90", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle89:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter89", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle88:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter88", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle87:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter87", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle86:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter86", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle85:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter85", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle84:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter84", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle83:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter83", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle82:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter82", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle81:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter81", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle80:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter80", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle79:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter79", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle78:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter78", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle77:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter77", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle76:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter76", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle75:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter75", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle74:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter74", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle73:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter73", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle72:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter72", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle71:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter71", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle70:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter70", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle69:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter69", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle68:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter68", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle67:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter67", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle66:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter66", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle65:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter65", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle64:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter64", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle63:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter63", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle62:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter62", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle61:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter61", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle60:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter60", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle59:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter59", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle58:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter58", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle57:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter57", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle56:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter56", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle55:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter55", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle54:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter54", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle53:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter53", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle52:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter52", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle51:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter51", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle50:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter50", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle49:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter49", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle48:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter48", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle47:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter47", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle46:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter46", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle45:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter45", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle44:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter44", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle43:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter43", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle42:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter42", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle41:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter41", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle40:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter40", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle39:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter39", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle38:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter39", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle37:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter39", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle36:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter36", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle35:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter35", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle34:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter34", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle33:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter33", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle32:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter32", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle31:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter31", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle30:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter30", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle29:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter29", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle28:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter28", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle27:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter27", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle26:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter26", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle25:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter25", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle24:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter24", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle23:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter23", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle22:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter22", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle21:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter21", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle20:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter20", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle19:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter19", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle18:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter18", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle17:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter17", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle16:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter16", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle15:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter15", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle14:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter14", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle13:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter13", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle12:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter12", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle11:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter11", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle10:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter10", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle9:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter9", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle8:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter8", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle7:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter7", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle6:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter6", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle5:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter5", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle4:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter4", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle3:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter3", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle2:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter2", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	ExitVehicle1:
		TNT1 A 0 A_SpawnItemEx ("AssaultHelicopter1", 0, 0, 0, 0, 0, 5);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ACS_ExecuteAlways(429);
		TNT1 A 1;
		Goto FinishExit;
	FinishExit:
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 10;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		Goto Stay;
}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Vehicle's weapons and misc
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class AssaultHelicopterGun : Doomweapon { 
	Default {
	
	
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse 0;
	Weapon.AmmoGive 0;
	Weapon.AmmoType "TankReady";
	Obituary "$OB_MPPISTOL";
	//+WEAPON.NOAUTOFIRE
	Inventory.PickupMessage "$PICKUP_PISTOL_DROPPED";
	Tag "$TAG_PISTOL";
	}
	States
	{
	Ready:
		TNT1 A 0;
		TNT1 A 0 A_TakeInventory("FiredTankMainGun", 1);
		TNHD A 2 A_WeaponReady(1);
		TNT1 A 0 A_GiveInventory("TankReady", 1);
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		Loop;
	NotReady:
		TNT1 AAA 2 A_GiveInventory("TankReady", 1);
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_TakeInventory("FiredTankMainGun", 1);
		Goto Ready;
	Depleted:
		TNT1 AA 6 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_TakeInventory("FiredTankMainGun", 1);
		Goto Ready;
	DeSelect:
		TNT1 A 1 A_Lower();
		Loop;
	Select:
		TNHD AAAAAAAAAAAA 0 A_Raise();
		TNT1 A 1 A_TakeInventory("PressedUse", 1);
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNT1 A 0;
		Goto Ready;
	Fire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("FiredTankMainGun", 1, "KeepFiringRockets");
		TNT1 A 0 A_JumpIfInventory("TankReady", 60, 3);
		Goto NotReady;
		TNT1 AAAA 0;
		TNHD A 1;
		TNT1 A 0 A_GiveInventory("FiredTankMainGun", 1);
	KeepFiringRockets:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("TankReady", 10, 3);
		Goto NotReady;
		TNT1 AAAA 0;
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_TakeInventory("TankReady", 10, 1);
		TNT1 A 0 A_PlaySound("MISLFIRE", 1);
		MISG A 0 A_FireCustomMissile("AssaultHelicopterRocket", 0, 0, -15, -40);
		MISG A 0 A_FireCustomMissile("TankFireEffect", 0, 1, -45, -45);
		TNHD B 1 BRIGHT;
		TNT1 A 0 A_GunFlash();
		TNHD EF 4;
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("TankReady", 10, 3);
		Goto NotReady;
		TNT1 AAAA 0;
		TNT1 A 0 A_TakeInventory("TankReady", 10, 1);
		TNT1 A 0 A_PlaySound("MISLFIRE", 2);
		MISG A 0 A_FireCustomMissile("AssaultHelicopterRocket", 0, 0, 15, -40);
		MISG A 0 A_FireCustomMissile("TankFireEffect", 0, 1, 45, -45);
		TNHD B 1 BRIGHT;
		TNT1 A 0 A_GunFlash();
		TNHD EF 4;
		TNT1 A 0 A_JumpIfInventory("TankReady", 10, 3);
		Goto Depleted;
		TNT1 AAAA 0;
		TNT1 A 0 A_ReFire();
		Goto Ready;
	AltFire:
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_PlaySound("TANKMG", 1);
		TNT1 A 0 A_FireCustomMissile("HeavyMachinegunProjectile", 0, 1, 0, -10);
		TNT1 AA 0 A_FireCustomMissile("HeavyMachinegunFlash", 0, 1, 0, -10);
		TNHA A 1 BRIGHT;
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 A_GiveInventory("TankReady", 1);
		TNHA BC 1 A_GiveInventory("TankReady", 1);
		TNHD A 1 A_GiveInventory("TankReady", 1);
		TNT1 A 0 A_ReFire();
		Goto Ready;
	Flash:
		TNHS A 0 BRIGHT;
		TNHS A 4 BRIGHT;
		Stop;
	Spawn:
		LAUN A -1;
		Stop;
}
}
class FiredAssaultHelicopterMainGun : Inventory { 
	Default {
	
	Inventory.MaxAmount 1;
	}
}
class AssaultHelicopterRocket2 : actor { 
	Default {
	
	Radius 11;
	Height 8;
	Speed 40;
	Damage (random (300, 500));
	Projectile;
	+RANDOMIZE;
	+DEHEXPLOSION;
	+ROCKETTRAIL;
	+MISSILE;
	+NOGRAVITY;
	+FORCERADIUSDMG;
	SeeSound "weapons/rocklf";
	DeathSound "weapons/rocklx";
	Obituary "$OB_MPROCKET";
	+EXTREMEDEATH;
	//+DONTHURTSHOOTER
	}
	States
	{
	Spawn:
		MISL I 1 Bright;
		Loop;
	Death:
		MISL B 0 Bright A_Explode();
		TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
		TNT1 A 0 A_SpawnItem("TankShotExplosion");
		TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (0, 360), 2, random (30, 160));
		TNT1 A 6;
		TNT1 A 0 A_PlaySound("FAREXPL", 1);
		TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 12;
		Stop;
}
}
class AssaultHelicopterFireEffect : actor { 
	Default {
	
	Radius 1;
	Height 1;
	Speed 70;
	Damage 1;
	Projectile;
	+RANDOMIZE;
	+MISSILE;
	}
	States
	{
	Spawn:
		TNT1 A 2;
		Goto Death;
	Death:
		TNT1 A 0;
		TNT1 A 0 Radius_Quake(6, 12, 0, 4, 0);
		TNT1 AAAAA 0 A_SpawnItem("RedFlare");
		TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 1;
		TNT1 AAAAA 0 A_SpawnItem("RedFlare");
		TNT1 A 12;
		Stop;
}
}
class AssaultHelicopterShotExplosionImpact : actor { 
	Default {
	
	damagetype "ExplosiveImpact";
	+MISSILE;
	+NOCLIP;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		TNT1 A 0 A_Explode(50, 400);
		Stop;
}
}
class AssaultHelicopterMachinegunProjectile : actor { 
	Default {
	
	
	Radius 13;
	Height 8;
	Speed 130;
	Damage 12;
	Projectile;
	+RANDOMIZE;
	+MISSILE;
	-NOGRAVITY;
	+BLOODSPLATTER;
	+NOEXTREMEDEATH;
	Gravity 0.2;
	RenderStyle "Translucent";
	damagetype "Blast";
	Alpha 0.9;
	Scale 1.1;
	Obituary "$OB_MPPLASMARIFLE";
	}
	States
	{
	Spawn:
		MG74 A 1 Bright;
		Loop;
	Death:
		TNT1 A 0 A_SpawnItem("RicoChet");
		TNT1 A 10;
		Stop;
}
}
class AssaultHelicopterTreadsDamage : actor { 
	Default {
	
	+NOTARGET;
	Radius 1;
	Height 1;
	DamageType Stomp;
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
	+EXPLODEONWATER;
	+EXTREMEDEATH;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Explode(200,50,0);
		TNT1 A 0 A_SpawnItemEx("TreadsDamage2", 0, 50);
		TNT1 A 0 A_SpawnItemEx("TreadsDamage2", 0, -50);
		TNT1 A 1 A_Noblocking();
		PLAY A 0;
		Stop;
}
}
class TreadsDamage22 : actor { 
	Default {
	
	+NOTARGET;
	Radius 1;
	Height 1;
	DamageType Stomp;
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
	+EXPLODEONWATER;
	+EXTREMEDEATH;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Explode(200,50,0);
		PLAY A 0;
		TNT1 A 1 A_Noblocking();
		Stop;
}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Base vehicle actor
class AssaultHelicopter : PowerupGiver 17262 { 
	Default {
	
	Powerup.Type "AssaultHelicopterSwitch";
	Powerup.Duration 252000;
	+Inventory.AUTOACTIVATE;
	+Inventory.ALWAYSPICKUP;
	Inventory.MaxAmount 1;
	Health 100;
	GibHealth 1;
	Scale 0.9;
	+SHOOTABLE;
	+NOBLOOD;
	+FIXMAPTHINGPOS;
	+NORADIUSDMG;
	+DONTRIP;
	//+INVULNERABLE
	//+THRUactorS
	Mass 999999999;
	Height 96;
	Radius 32;
	damagefactor "stomp", 0;
	damagefactor "normal", 0.3;
	painchance 255;
	GibHealth 10;
	}
	States
	{
	Spawn:
		HELA A 10;
		TNT1 A 0 A_ChangeFlag("THRUactorS", 0);
		NULL A 0 A_JumpIf (momZ == 0, "Spawn2");
		TNT1 A 0 A_ChangeFlag("THRUactorS", 1);
		TNT1 A 1;
		HELA ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB 1;
		HELA A 1 A_ChangeFlag("THRUactorS", 0);
		Goto Spawn2;
	Spawn2:
		HELA A 1;
		Loop;
		TNT1 A 0;
	Death:
	XDeath:
		TNT1 A 1;
		TNT1 A 0 A_SpawnItem("BigExplosion1112");
		TNT1 A 0 A_PlaySound("weapons/explode");
		TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
		TNT1 A 0 A_Scream();
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_SpawnItem("DestroyedAircraft");
		ELEC A 0 A_Explode(100, 250);
		TNT1 A 15;
		TNT1 A 0;
		Stop;
	Pain:
		HELI C 1;
		TNT1 A 0 A_JumpIfHealthLower(2, "ReSpawn1");
		TNT1 A 0 A_JumpIfHealthLower(3, "ReSpawn2");
		TNT1 A 0 A_JumpIfHealthLower(4, "ReSpawn3");
		TNT1 A 0 A_JumpIfHealthLower(5, "ReSpawn4");
		TNT1 A 0 A_JumpIfHealthLower(6, "ReSpawn5");
		TNT1 A 0 A_JumpIfHealthLower(7, "ReSpawn6");
		TNT1 A 0 A_JumpIfHealthLower(8, "ReSpawn7");
		TNT1 A 0 A_JumpIfHealthLower(9, "ReSpawn8");
		TNT1 A 0 A_JumpIfHealthLower(10, "ReSpawn9");
		TNT1 A 0 A_JumpIfHealthLower(11, "ReSpawn10");
		TNT1 A 0 A_JumpIfHealthLower(12, "ReSpawn11");
		TNT1 A 0 A_JumpIfHealthLower(13, "ReSpawn12");
		TNT1 A 0 A_JumpIfHealthLower(14, "ReSpawn13");
		TNT1 A 0 A_JumpIfHealthLower(15, "ReSpawn14");
		TNT1 A 0 A_JumpIfHealthLower(16, "ReSpawn15");
		TNT1 A 0 A_JumpIfHealthLower(17, "ReSpawn16");
		TNT1 A 0 A_JumpIfHealthLower(18, "ReSpawn17");
		TNT1 A 0 A_JumpIfHealthLower(19, "ReSpawn18");
		TNT1 A 0 A_JumpIfHealthLower(20, "ReSpawn19");
		TNT1 A 0 A_JumpIfHealthLower(21, "ReSpawn20");
		TNT1 A 0 A_JumpIfHealthLower(22, "ReSpawn21");
		TNT1 A 0 A_JumpIfHealthLower(23, "ReSpawn22");
		TNT1 A 0 A_JumpIfHealthLower(24, "ReSpawn23");
		TNT1 A 0 A_JumpIfHealthLower(25, "ReSpawn24");
		TNT1 A 0 A_JumpIfHealthLower(26, "ReSpawn25");
		TNT1 A 0 A_JumpIfHealthLower(27, "ReSpawn26");
		TNT1 A 0 A_JumpIfHealthLower(28, "ReSpawn27");
		TNT1 A 0 A_JumpIfHealthLower(29, "ReSpawn28");
		TNT1 A 0 A_JumpIfHealthLower(30, "ReSpawn29");
		TNT1 A 0 A_JumpIfHealthLower(31, "ReSpawn30");
		TNT1 A 0 A_JumpIfHealthLower(32, "ReSpawn31");
		TNT1 A 0 A_JumpIfHealthLower(33, "ReSpawn32");
		TNT1 A 0 A_JumpIfHealthLower(34, "ReSpawn33");
		TNT1 A 0 A_JumpIfHealthLower(35, "ReSpawn34");
		TNT1 A 0 A_JumpIfHealthLower(36, "ReSpawn35");
		TNT1 A 0 A_JumpIfHealthLower(37, "ReSpawn36");
		TNT1 A 0 A_JumpIfHealthLower(38, "ReSpawn37");
		TNT1 A 0 A_JumpIfHealthLower(39, "ReSpawn38");
		TNT1 A 0 A_JumpIfHealthLower(40, "ReSpawn39");
		TNT1 A 0 A_JumpIfHealthLower(41, "ReSpawn40");
		TNT1 A 0 A_JumpIfHealthLower(42, "ReSpawn41");
		TNT1 A 0 A_JumpIfHealthLower(43, "ReSpawn42");
		TNT1 A 0 A_JumpIfHealthLower(44, "ReSpawn43");
		TNT1 A 0 A_JumpIfHealthLower(45, "ReSpawn44");
		TNT1 A 0 A_JumpIfHealthLower(46, "ReSpawn45");
		TNT1 A 0 A_JumpIfHealthLower(47, "ReSpawn46");
		TNT1 A 0 A_JumpIfHealthLower(48, "ReSpawn47");
		TNT1 A 0 A_JumpIfHealthLower(49, "ReSpawn48");
		TNT1 A 0 A_JumpIfHealthLower(50, "ReSpawn49");
		TNT1 A 0 A_JumpIfHealthLower(51, "ReSpawn50");
		TNT1 A 0 A_JumpIfHealthLower(52, "ReSpawn51");
		TNT1 A 0 A_JumpIfHealthLower(53, "ReSpawn52");
		TNT1 A 0 A_JumpIfHealthLower(54, "ReSpawn53");
		TNT1 A 0 A_JumpIfHealthLower(55, "ReSpawn54");
		TNT1 A 0 A_JumpIfHealthLower(56, "ReSpawn55");
		TNT1 A 0 A_JumpIfHealthLower(57, "ReSpawn56");
		TNT1 A 0 A_JumpIfHealthLower(58, "ReSpawn57");
		TNT1 A 0 A_JumpIfHealthLower(59, "ReSpawn58");
		TNT1 A 0 A_JumpIfHealthLower(60, "ReSpawn59");
		TNT1 A 0 A_JumpIfHealthLower(61, "ReSpawn60");
		TNT1 A 0 A_JumpIfHealthLower(62, "ReSpawn61");
		TNT1 A 0 A_JumpIfHealthLower(63, "ReSpawn62");
		TNT1 A 0 A_JumpIfHealthLower(64, "ReSpawn63");
		TNT1 A 0 A_JumpIfHealthLower(65, "ReSpawn64");
		TNT1 A 0 A_JumpIfHealthLower(66, "ReSpawn65");
		TNT1 A 0 A_JumpIfHealthLower(67, "ReSpawn66");
		TNT1 A 0 A_JumpIfHealthLower(68, "ReSpawn67");
		TNT1 A 0 A_JumpIfHealthLower(69, "ReSpawn68");
		TNT1 A 0 A_JumpIfHealthLower(70, "ReSpawn69");
		TNT1 A 0 A_JumpIfHealthLower(71, "ReSpawn70");
		TNT1 A 0 A_JumpIfHealthLower(72, "ReSpawn71");
		TNT1 A 0 A_JumpIfHealthLower(73, "ReSpawn72");
		TNT1 A 0 A_JumpIfHealthLower(74, "ReSpawn73");
		TNT1 A 0 A_JumpIfHealthLower(75, "ReSpawn74");
		TNT1 A 0 A_JumpIfHealthLower(76, "ReSpawn75");
		TNT1 A 0 A_JumpIfHealthLower(77, "ReSpawn76");
		TNT1 A 0 A_JumpIfHealthLower(78, "ReSpawn77");
		TNT1 A 0 A_JumpIfHealthLower(79, "ReSpawn78");
		TNT1 A 0 A_JumpIfHealthLower(80, "ReSpawn79");
		TNT1 A 0 A_JumpIfHealthLower(81, "ReSpawn80");
		TNT1 A 0 A_JumpIfHealthLower(82, "ReSpawn81");
		TNT1 A 0 A_JumpIfHealthLower(83, "ReSpawn82");
		TNT1 A 0 A_JumpIfHealthLower(84, "ReSpawn83");
		TNT1 A 0 A_JumpIfHealthLower(85, "ReSpawn84");
		TNT1 A 0 A_JumpIfHealthLower(86, "ReSpawn85");
		TNT1 A 0 A_JumpIfHealthLower(87, "ReSpawn86");
		TNT1 A 0 A_JumpIfHealthLower(88, "ReSpawn87");
		TNT1 A 0 A_JumpIfHealthLower(89, "ReSpawn88");
		TNT1 A 0 A_JumpIfHealthLower(90, "ReSpawn89");
		TNT1 A 0 A_JumpIfHealthLower(91, "ReSpawn90");
		TNT1 A 0 A_JumpIfHealthLower(92, "ReSpawn91");
		TNT1 A 0 A_JumpIfHealthLower(93, "ReSpawn92");
		TNT1 A 0 A_JumpIfHealthLower(94, "ReSpawn93");
		TNT1 A 0 A_JumpIfHealthLower(95, "ReSpawn94");
		TNT1 A 0 A_JumpIfHealthLower(96, "ReSpawn95");
		TNT1 A 0 A_JumpIfHealthLower(97, "ReSpawn96");
		TNT1 A 0 A_JumpIfHealthLower(98, "ReSpawn97");
		TNT1 A 0 A_JumpIfHealthLower(99, "ReSpawn98");
		TNT1 A 0 A_JumpIfHealthLower(100, "ReSpawn99");
		TNT1 A 0 A_NoBlocking();
		Goto XDeath;
	ReSpawn99:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter99");
		Stop;
	ReSpawn98:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter98");
		Stop;
	ReSpawn97:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter97");
		Stop;
	ReSpawn96:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter96");
		Stop;
	ReSpawn95:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter95");
		Stop;
	ReSpawn94:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter94");
		Stop;
	ReSpawn93:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter93");
		Stop;
	ReSpawn92:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter92");
		Stop;
	ReSpawn91:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter91");
		Stop;
	ReSpawn90:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter90");
		Stop;
	ReSpawn89:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter89");
		Stop;
	ReSpawn88:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter88");
		Stop;
	ReSpawn87:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter87");
		Stop;
	ReSpawn86:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter86");
		Stop;
	ReSpawn85:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter85");
		Stop;
	ReSpawn84:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter84");
		Stop;
	ReSpawn83:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter83");
		Stop;
	ReSpawn82:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter82");
		Stop;
	ReSpawn81:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter81");
		Stop;
	ReSpawn80:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter80");
		Stop;
	ReSpawn79:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter79");
		Stop;
	ReSpawn78:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter78");
		Stop;
	ReSpawn77:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter77");
		Stop;
	ReSpawn76:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter76");
		Stop;
	ReSpawn75:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter75");
		Stop;
	ReSpawn74:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter74");
		Stop;
	ReSpawn73:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter73");
		Stop;
	ReSpawn72:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter72");
		Stop;
	ReSpawn71:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter71");
		Stop;
	ReSpawn70:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter70");
		Stop;
	ReSpawn69:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter69");
		Stop;
	ReSpawn68:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter68");
		Stop;
	ReSpawn67:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter67");
		Stop;
	ReSpawn66:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter66");
		Stop;
	ReSpawn65:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter65");
		Stop;
	ReSpawn64:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter64");
		Stop;
	ReSpawn63:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter63");
		Stop;
	ReSpawn62:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter62");
		Stop;
	ReSpawn61:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter61");
		Stop;
	ReSpawn60:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter60");
		Stop ;
	ReSpawn59:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter59");
		Stop;
	ReSpawn58:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter58");
		Stop;
	ReSpawn57:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter57");
		Stop;
	ReSpawn56:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter56");
		Stop;
	ReSpawn55:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter55");
		Stop;
	ReSpawn54:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter54");
		Stop;
	ReSpawn53:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter53");
		Stop;
	ReSpawn52:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter52");
		Stop;
	ReSpawn51:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter51");
		Stop;
	ReSpawn50:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter50");
		Stop ;
	ReSpawn49:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter49");
		Stop;
	ReSpawn48:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter48");
		Stop;
	ReSpawn47:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter47");
		Stop;
	ReSpawn46:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter46");
		Stop;
	ReSpawn45:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter45");
		Stop;
	ReSpawn44:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter44");
		Stop;
	ReSpawn43:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter43");
		Stop;
	ReSpawn42:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter42");
		Stop;
	ReSpawn41:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter41");
		Stop;
	ReSpawn40:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter40");
		Stop;
	ReSpawn39:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter39");
		Stop;
	ReSpawn38:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter38");
		Stop;
	ReSpawn37:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter37");
		Stop;
	ReSpawn36:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter36");
		Stop;
	ReSpawn35:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter35");
		Stop;
	ReSpawn34:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter34");
		Stop;
	ReSpawn33:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter33");
		Stop;
	ReSpawn32:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter32");
		Stop;
	ReSpawn31:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter31");
		Stop;
	ReSpawn30:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter30");
		Stop;
	ReSpawn29:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter29");
		Stop;
	ReSpawn28:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter28");
		Stop;
	ReSpawn27:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter27");
		Stop;
	ReSpawn26:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter26");
		Stop;
	ReSpawn25:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter25");
		Stop;
	ReSpawn24:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter24");
		Stop;
	ReSpawn23:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter23");
		Stop;
	ReSpawn22:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter22");
		Stop;
	ReSpawn21:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter21");
		Stop;
	ReSpawn20:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter20");
		Stop;
	ReSpawn19:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter19");
		Stop;
	ReSpawn18:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter18");
		Stop;
	ReSpawn17:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter17");
		Stop;
	ReSpawn16:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter16");
		Stop;
	ReSpawn15:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter15");
		Stop;
	ReSpawn14:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter14");
		Stop;
	ReSpawn13:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter13");
		Stop;
	ReSpawn12:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter12");
		Stop;
	ReSpawn11:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter11");
		Stop;
	ReSpawn10:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter10");
		Stop ;
	ReSpawn9:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter9");
		Stop;
	ReSpawn8:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter8");
		Stop;
	ReSpawn7:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter7");
		Stop;
	ReSpawn6:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter6");
		Stop;
	ReSpawn5:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter5");
		Stop;
	ReSpawn4:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter4");
		Stop;
	ReSpawn3:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter3");
		Stop;
	ReSpawn2:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter2");
		Stop;
	ReSpawn1:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_SpawnItem("AssaultHelicopter1");
		Stop;
}
}
//2
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///// DIFFERENT PLAYERS FOR EVERY HEALTH POINT THE VEHICLE HAD WHEN ENTERED////
//////DEATH STATE SHOULD ALWAYS MAKE THE HEALTH class DROP BY 10 POINTS ///////
////// THIS SHIT WAS AN ASS TO CODE ///////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class AssaultHelicopter100 : AssaultHelicopter {Health 100 Powerup.Type "AssaultHelicopterSwitch100"} { 
	Default {
	}
}
class AssaultHelicopter99 : AssaultHelicopter {Health 99 Powerup.Type "AssaultHelicopterSwitch99"} { 
	Default {
	}
}
class AssaultHelicopter98 : AssaultHelicopter {Health 98 Powerup.Type "AssaultHelicopterSwitch98"} { 
	Default {
	}
}
class AssaultHelicopter97 : AssaultHelicopter {Health 97 Powerup.Type "AssaultHelicopterSwitch97"} { 
	Default {
	}
}
class AssaultHelicopter96 : AssaultHelicopter {Health 96 Powerup.Type "AssaultHelicopterSwitch96"} { 
	Default {
	}
}
class AssaultHelicopter95 : AssaultHelicopter {Health 95 Powerup.Type "AssaultHelicopterSwitch95"} { 
	Default {
	}
}
class AssaultHelicopter94 : AssaultHelicopter {Health 94 Powerup.Type "AssaultHelicopterSwitch94"} { 
	Default {
	}
}
class AssaultHelicopter93 : AssaultHelicopter {Health 93 Powerup.Type "AssaultHelicopterSwitch93"} { 
	Default {
	}
}
class AssaultHelicopter92 : AssaultHelicopter {Health 92 Powerup.Type "AssaultHelicopterSwitch92"} { 
	Default {
	}
}
class AssaultHelicopter91 : AssaultHelicopter {Health 91 Powerup.Type "AssaultHelicopterSwitch91"} { 
	Default {
	}
}
class AssaultHelicopter90 : AssaultHelicopter {Health 90 Powerup.Type "AssaultHelicopterSwitch90"} { 
	Default {
	}
}
class AssaultHelicopter89 : AssaultHelicopter {Health 89 Powerup.Type "AssaultHelicopterSwitch89"} { 
	Default {
	}
}
class AssaultHelicopter88 : AssaultHelicopter {Health 88 Powerup.Type "AssaultHelicopterSwitch88"} { 
	Default {
	}
}
class AssaultHelicopter87 : AssaultHelicopter {Health 87 Powerup.Type "AssaultHelicopterSwitch87"} { 
	Default {
	}
}
class AssaultHelicopter86 : AssaultHelicopter {Health 86 Powerup.Type "AssaultHelicopterSwitch86"} { 
	Default {
	}
}
class AssaultHelicopter85 : AssaultHelicopter {Health 85 Powerup.Type "AssaultHelicopterSwitch85"} { 
	Default {
	}
}
class AssaultHelicopter84 : AssaultHelicopter {Health 84 Powerup.Type "AssaultHelicopterSwitch84"} { 
	Default {
	}
}
class AssaultHelicopter83 : AssaultHelicopter {Health 83 Powerup.Type "AssaultHelicopterSwitch83"} { 
	Default {
	}
}
class AssaultHelicopter82 : AssaultHelicopter {Health 82 Powerup.Type "AssaultHelicopterSwitch82"} { 
	Default {
	}
}
class AssaultHelicopter81 : AssaultHelicopter {Health 81 Powerup.Type "AssaultHelicopterSwitch81"} { 
	Default {
	}
}
class AssaultHelicopter80 : AssaultHelicopter {Health 80 Powerup.Type "AssaultHelicopterSwitch80"} { 
	Default {
	}
}
class AssaultHelicopter79 : AssaultHelicopter {Health 79 Powerup.Type "AssaultHelicopterSwitch79"} { 
	Default {
	}
}
class AssaultHelicopter78 : AssaultHelicopter {Health 78 Powerup.Type "AssaultHelicopterSwitch78"} { 
	Default {
	}
}
class AssaultHelicopter77 : AssaultHelicopter {Health 77 Powerup.Type "AssaultHelicopterSwitch77"} { 
	Default {
	}
}
class AssaultHelicopter76 : AssaultHelicopter {Health 76 Powerup.Type "AssaultHelicopterSwitch76"} { 
	Default {
	}
}
class AssaultHelicopter75 : AssaultHelicopter {Health 75 Powerup.Type "AssaultHelicopterSwitch75"} { 
	Default {
	}
}
class AssaultHelicopter74 : AssaultHelicopter {Health 74 Powerup.Type "AssaultHelicopterSwitch74"} { 
	Default {
	}
}
class AssaultHelicopter73 : AssaultHelicopter {Health 73 Powerup.Type "AssaultHelicopterSwitch73"} { 
	Default {
	}
}
class AssaultHelicopter72 : AssaultHelicopter {Health 72 Powerup.Type "AssaultHelicopterSwitch72"} { 
	Default {
	}
}
class AssaultHelicopter71 : AssaultHelicopter {Health 71 Powerup.Type "AssaultHelicopterSwitch71"} { 
	Default {
	}
}
class AssaultHelicopter70 : AssaultHelicopter {Health 70 Powerup.Type "AssaultHelicopterSwitch70"} { 
	Default {
	}
}
class AssaultHelicopter69 : AssaultHelicopter {Health 69 Powerup.Type "AssaultHelicopterSwitch69"} { 
	Default {
	}
}
class AssaultHelicopter68 : AssaultHelicopter {Health 68 Powerup.Type "AssaultHelicopterSwitch68"} { 
	Default {
	}
}
class AssaultHelicopter67 : AssaultHelicopter {Health 67 Powerup.Type "AssaultHelicopterSwitch67"} { 
	Default {
	}
}
class AssaultHelicopter66 : AssaultHelicopter {Health 66 Powerup.Type "AssaultHelicopterSwitch66"} { 
	Default {
	}
}
class AssaultHelicopter65 : AssaultHelicopter {Health 65 Powerup.Type "AssaultHelicopterSwitch65"} { 
	Default {
	}
}
class AssaultHelicopter64 : AssaultHelicopter {Health 64 Powerup.Type "AssaultHelicopterSwitch64"} { 
	Default {
	}
}
class AssaultHelicopter63 : AssaultHelicopter {Health 63 Powerup.Type "AssaultHelicopterSwitch63"} { 
	Default {
	}
}
class AssaultHelicopter62 : AssaultHelicopter {Health 62 Powerup.Type "AssaultHelicopterSwitch62"} { 
	Default {
	}
}
class AssaultHelicopter61 : AssaultHelicopter {Health 61 Powerup.Type "AssaultHelicopterSwitch61"} { 
	Default {
	}
}
class AssaultHelicopter60 : AssaultHelicopter {Health 60 Powerup.Type "AssaultHelicopterSwitch60"} { 
	Default {
	}
}
class AssaultHelicopter59 : AssaultHelicopter {Health 59 Powerup.Type "AssaultHelicopterSwitch59"} { 
	Default {
	}
}
class AssaultHelicopter58 : AssaultHelicopter {Health 58 Powerup.Type "AssaultHelicopterSwitch58"} { 
	Default {
	}
}
class AssaultHelicopter57 : AssaultHelicopter {Health 57 Powerup.Type "AssaultHelicopterSwitch57"} { 
	Default {
	}
}
class AssaultHelicopter56 : AssaultHelicopter {Health 56 Powerup.Type "AssaultHelicopterSwitch56"} { 
	Default {
	}
}
class AssaultHelicopter55 : AssaultHelicopter {Health 55 Powerup.Type "AssaultHelicopterSwitch55"} { 
	Default {
	}
}
class AssaultHelicopter54 : AssaultHelicopter {Health 54 Powerup.Type "AssaultHelicopterSwitch54"} { 
	Default {
	}
}
class AssaultHelicopter53 : AssaultHelicopter {Health 53 Powerup.Type "AssaultHelicopterSwitch53"} { 
	Default {
	}
}
class AssaultHelicopter52 : AssaultHelicopter {Health 52 Powerup.Type "AssaultHelicopterSwitch52"} { 
	Default {
	}
}
class AssaultHelicopter51 : AssaultHelicopter {Health 51 Powerup.Type "AssaultHelicopterSwitch51"} { 
	Default {
	}
}
class AssaultHelicopter50 : AssaultHelicopter {Health 50 Powerup.Type "AssaultHelicopterSwitch50"} { 
	Default {
	}
}
class AssaultHelicopter49 : AssaultHelicopter {Health 49 Powerup.Type "AssaultHelicopterSwitch49"} { 
	Default {
	}
}
class AssaultHelicopter48 : AssaultHelicopter {Health 48 Powerup.Type "AssaultHelicopterSwitch48"} { 
	Default {
	}
}
class AssaultHelicopter47 : AssaultHelicopter {Health 47 Powerup.Type "AssaultHelicopterSwitch47"} { 
	Default {
	}
}
class AssaultHelicopter46 : AssaultHelicopter {Health 46 Powerup.Type "AssaultHelicopterSwitch46"} { 
	Default {
	}
}
class AssaultHelicopter45 : AssaultHelicopter {Health 45 Powerup.Type "AssaultHelicopterSwitch45"} { 
	Default {
	}
}
class AssaultHelicopter44 : AssaultHelicopter {Health 44 Powerup.Type "AssaultHelicopterSwitch44"} { 
	Default {
	}
}
class AssaultHelicopter43 : AssaultHelicopter {Health 43 Powerup.Type "AssaultHelicopterSwitch43"} { 
	Default {
	}
}
class AssaultHelicopter42 : AssaultHelicopter {Health 42 Powerup.Type "AssaultHelicopterSwitch42"} { 
	Default {
	}
}
class AssaultHelicopter41 : AssaultHelicopter {Health 41 Powerup.Type "AssaultHelicopterSwitch41"} { 
	Default {
	}
}
class AssaultHelicopter40 : AssaultHelicopter {Health 40 Powerup.Type "AssaultHelicopterSwitch40"} { 
	Default {
	}
}
class AssaultHelicopter39 : AssaultHelicopter {Health 39 Powerup.Type "AssaultHelicopterSwitch39"} { 
	Default {
	}
}
class AssaultHelicopter38 : AssaultHelicopter {Health 38 Powerup.Type "AssaultHelicopterSwitch38"} { 
	Default {
	}
}
class AssaultHelicopter37 : AssaultHelicopter {Health 37 Powerup.Type "AssaultHelicopterSwitch37"} { 
	Default {
	}
}
class AssaultHelicopter36 : AssaultHelicopter {Health 36 Powerup.Type "AssaultHelicopterSwitch36"} { 
	Default {
	}
}
class AssaultHelicopter35 : AssaultHelicopter {Health 35 Powerup.Type "AssaultHelicopterSwitch35"} { 
	Default {
	}
}
class AssaultHelicopter34 : AssaultHelicopter {Health 34 Powerup.Type "AssaultHelicopterSwitch34"} { 
	Default {
	}
}
class AssaultHelicopter33 : AssaultHelicopter {Health 33 Powerup.Type "AssaultHelicopterSwitch33"} { 
	Default {
	}
}
class AssaultHelicopter32 : AssaultHelicopter {Health 32 Powerup.Type "AssaultHelicopterSwitch32"} { 
	Default {
	}
}
class AssaultHelicopter31 : AssaultHelicopter {Health 31 Powerup.Type "AssaultHelicopterSwitch31"} { 
	Default {
	}
}
class AssaultHelicopter30 : AssaultHelicopter {Health 30 Powerup.Type "AssaultHelicopterSwitch30"} { 
	Default {
	}
}
class AssaultHelicopter29 : AssaultHelicopter {Health 29 Powerup.Type "AssaultHelicopterSwitch29"} { 
	Default {
	}
}
class AssaultHelicopter28 : AssaultHelicopter {Health 28 Powerup.Type "AssaultHelicopterSwitch28"} { 
	Default {
	}
}
class AssaultHelicopter27 : AssaultHelicopter {Health 27 Powerup.Type "AssaultHelicopterSwitch27"} { 
	Default {
	}
}
class AssaultHelicopter26 : AssaultHelicopter {Health 26 Powerup.Type "AssaultHelicopterSwitch26"} { 
	Default {
	}
}
class AssaultHelicopter25 : AssaultHelicopter {Health 25 Powerup.Type "AssaultHelicopterSwitch25"} { 
	Default {
	}
}
class AssaultHelicopter24 : AssaultHelicopter {Health 24 Powerup.Type "AssaultHelicopterSwitch24"} { 
	Default {
	}
}
class AssaultHelicopter23 : AssaultHelicopter {Health 23 Powerup.Type "AssaultHelicopterSwitch23"} { 
	Default {
	}
}
class AssaultHelicopter22 : AssaultHelicopter {Health 22 Powerup.Type "AssaultHelicopterSwitch22"} { 
	Default {
	}
}
class AssaultHelicopter21 : AssaultHelicopter {Health 21 Powerup.Type "AssaultHelicopterSwitch21"} { 
	Default {
	}
}
class AssaultHelicopter20 : AssaultHelicopter {Health 20 Powerup.Type "AssaultHelicopterSwitch20"} { 
	Default {
	}
}
class AssaultHelicopter19 : AssaultHelicopter {Health 19 Powerup.Type "AssaultHelicopterSwitch19"} { 
	Default {
	}
}
class AssaultHelicopter18 : AssaultHelicopter {Health 18 Powerup.Type "AssaultHelicopterSwitch18"} { 
	Default {
	}
}
class AssaultHelicopter17 : AssaultHelicopter {Health 17 Powerup.Type "AssaultHelicopterSwitch17"} { 
	Default {
	}
}
class AssaultHelicopter16 : AssaultHelicopter {Health 16 Powerup.Type "AssaultHelicopterSwitch16"} { 
	Default {
	}
}
class AssaultHelicopter15 : AssaultHelicopter {Health 15 Powerup.Type "AssaultHelicopterSwitch15"} { 
	Default {
	}
}
class AssaultHelicopter14 : AssaultHelicopter {Health 14 Powerup.Type "AssaultHelicopterSwitch14"} { 
	Default {
	}
}
class AssaultHelicopter13 : AssaultHelicopter {Health 13 Powerup.Type "AssaultHelicopterSwitch13"} { 
	Default {
	}
}
class AssaultHelicopter12 : AssaultHelicopter {Health 12 Powerup.Type "AssaultHelicopterSwitch12"} { 
	Default {
	}
}
class AssaultHelicopter11 : AssaultHelicopter {Health 11 Powerup.Type "AssaultHelicopterSwitch11"} { 
	Default {
	}
}
class AssaultHelicopter10 : AssaultHelicopter {Health 10 Powerup.Type "AssaultHelicopterSwitch10"} { 
	Default {
	}
}
class AssaultHelicopter9 : AssaultHelicopter {Health 9 Powerup.Type "AssaultHelicopterSwitch9"} { 
	Default {
	}
}
class AssaultHelicopter8 : AssaultHelicopter {Health 8 Powerup.Type "AssaultHelicopterSwitch8"} { 
	Default {
	}
}
class AssaultHelicopter7 : AssaultHelicopter {Health 7 Powerup.Type "AssaultHelicopterSwitch7"} { 
	Default {
	}
}
class AssaultHelicopter6 : AssaultHelicopter {Health 6 Powerup.Type "AssaultHelicopterSwitch6"} { 
	Default {
	}
}
class AssaultHelicopter5 : AssaultHelicopter {Health 5 Powerup.Type "AssaultHelicopterSwitch5"} { 
	Default {
	}
}
class AssaultHelicopter4 : AssaultHelicopter {Health 4 Powerup.Type "AssaultHelicopterSwitch4"} { 
	Default {
	}
}
class AssaultHelicopter3 : AssaultHelicopter {Health 3 Powerup.Type "AssaultHelicopterSwitch3"} { 
	Default {
	}
}
class AssaultHelicopter2 : AssaultHelicopter {Health 2 Powerup.Type "AssaultHelicopterSwitch2"} { 
	Default {
	}
}
class AssaultHelicopter1 : AssaultHelicopter {Health 1 Powerup.Type "AssaultHelicopterSwitch1"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch100 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch99 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter99"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch98 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter98"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch97 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter97"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch96 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter96"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch95 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter95"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch94 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter94"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch93 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter93"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch92 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter92"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch91 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter91"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch90 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter90"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch89 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter89"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch88 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter88"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch87 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter87"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch86 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter86"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch85 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter85"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch84 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter84"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch83 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter83"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch82 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter82"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch81 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter81"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch80 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter80"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch79 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter79"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch78 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter78"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch77 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter77"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch76 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter76"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch75 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter75"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch74 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter74"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch76_WTF : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter76"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch75_WTF : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter75"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch74_WTF : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter74"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch73 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter73"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch72 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter72"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch71 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter71"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch70 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter70"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch69 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter69"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch68 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter68"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch67 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter67"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch66 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter66"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch65 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter65"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch64 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter64"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch63 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter63"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch62 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter62"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch61 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter61"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch60 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter60"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch59 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter59"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch58 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter58"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch57 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter57"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch56 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter56"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch55 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter55"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch54 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter54"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch53 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter53"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch52 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter52"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch51 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter51"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch50 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter50"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch49 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter49"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch48 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter48"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch47 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter47"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch46 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter46"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch45 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter45"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch44 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter44"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch43 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter43"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch42 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter42"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch41 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter41"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch40 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter40"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch39 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter39"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch38 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter38"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch37 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter37"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch36 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter36"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch35 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter35"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch34 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter34"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch33 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter33"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch32 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter32"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch31 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter31"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch30 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter30"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch29 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter29"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch28 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter28"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch27 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter27"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch26 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter26"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch25 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter25"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch24 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter24"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch23 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter23"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch22 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter22"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch21 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter21"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch20 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter20"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch19 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter19"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch18 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter18"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch17 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter17"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch16 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter16"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch15 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter15"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch14 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter14"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch13 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter13"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch12 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter12"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch11 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter11"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch10 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter10"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch9 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter9"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch8 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter8"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch7 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter7"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch6 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter6"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch5 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter5"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch4 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter4"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch3 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter3"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch2 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter2"} { 
	Default {
	}
}
class PowerAssaultHelicopterSwitch1 : PowerMorph {PowerMorph.Playerclass "PlayerAssaultHelicopter1"} { 
	Default {
class PlayerAssaultHelicopter99: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(1, 5, 1);
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter98: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(2, 5, 1);
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter97: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(3, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter96: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(4, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter95: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(5, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter94: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(6, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter93: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(7, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter92: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(8, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter91: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(9, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter90: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(10, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter89: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(11, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter88: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(12, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter87: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(13, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter86: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(14, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter85: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(15, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter84: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(16, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter83: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(17, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter82: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(18, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter81: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(19, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter80: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(20, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter79: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(21, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter78: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(22, 5, 1);////
			Goto Spawn2;
	}
}
// FIX
class PlayerAssaultHelicopter77: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(22, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter76: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(22, 5, 1);////
			Goto Spawn2;
	}
}
// FIX END
/*actor PlayerAssaultHelicopter74 : PlayerAssaultHelicopter
{	States
	{
Spawn:
		HELI A 1
		TNT1 A 0 A_TakeInventory("PressedUse", 1)
		TNT1 A 0 A_Explode(23, 5, 1)/////
		Goto Spawn2}}	*/
class PlayerAssaultHelicopter75: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(25, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter74: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(26, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter73: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(27, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter72: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(28, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter71: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(29, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter70: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(30, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter69: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(31, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter68: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(32, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter67: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(33, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter66: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(34, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter65: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(35, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter64: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(36, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter63: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(37, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter62: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(38, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter61: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(39, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter60: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(40, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter59: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(41, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter58: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(42, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter57: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(43, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter56: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(44, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter55: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(45, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter54: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(46, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter53: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(47, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter52: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(48, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter51: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(49, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter50: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(50, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter49: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(51, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter48: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(52, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter47: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(53, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter46: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(54, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter45: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(55, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter44: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(56, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter43: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(57, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter42: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(58, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter41: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(59, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter40: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(60, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter39: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(61, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter38: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(62, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter37: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(63, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter36: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(64, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter35: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(65, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter34: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(66, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter33: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(67, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter32: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(68, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter31: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(69, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter30: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(70, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter29: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(71, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter28: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(72, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter27: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(73, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter26: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(74, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter25: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(75, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter24: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(76, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter23: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(77, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter22: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(78, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter21: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(79, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter20: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(80, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter19: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(81, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter18: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(82, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter17: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(83, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter16: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(84, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter15: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(85, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter14: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(86, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter13: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(87, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter12: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(88, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter11: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(89, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter10: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(90, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter9: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(91, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter8: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(92, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter7: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(93, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter6: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(94, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter5: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(95, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter4: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(96, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter3: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(97, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter2: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(98, 5, 1);////
			Goto Spawn2;
	}
}
class PlayerAssaultHelicopter1: PlayerAssaultHelicopter { 
	Default {
		
	}
	States
	{
		Spawn: 
			HELI A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_Explode(99, 5, 1);////
			Goto Spawn2;
	}
}
class SuperJuggernaut : Fatso 9952 { 
	Default {
		
		Scale 2.0;
		
		GibHealth 25;
		damagefactor "Avoid", 0.0;
		PainChance "Kick", 255;
		damagefactor "Head", 2.0;
		damagefactor "Stomp", 0.0;
		damagefactor "GibRemoving", 0.0;
		damagefactor "MINORHead", 1.0;
		damagefactor "TeleportRemover", 0.0;
		DamageFactor "CauseObjectsToSplash", 0.0;
		Health 8000;
		+NOICEDEATH;
		PainSound "juggernaut/pain";
		DeathSound "juggernaut/death";
		ActiveSound "juggernaut/roam";
		SeeSound "juggernaut/see";
		damagefactor "Blood", 0.0 damagefactor "BlueBlood", 0.0 damagefactor "GreenBlood", 0.0;
		BloodType "Brutal_Blood";
		damagefactor "Shrapnel", 0.4;
		Obituary "%o was destroyed by the Juggernaut";
		MaxStepHeight 24;
		MaxDropOffHeight 32;
		Speed 1;
		Height 100;
		Radius 64;
		Mass 99999;
		Painchance 10;
		Painchance "Explosive", 150;
		damagefactor "Explosive", 1.5;
		damagefactor "Plasma", 1.5;
		damagefactor "TankShell", 1.5;
		+MISSILEMORE;
		+MISSILEEVENMORE;
		+BOSS;
		+FULLVOLACTIVE;
		MinMissileChance 150;
	}
	States
	{
		/////////////////////
		Spawn:
			BS1W A 1;
			TNT1 A 0 A_SpawnItemEx ("KillTreads",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			Goto Standby;
		Standby:
			BS1W A 1;
			BS1W AC 10 A_Look();
			Loop;
			//////////////////
		See:
			BS1W A 1;
			//TNT1 A 0 A_SpawnItem("KillTreads")
			Goto Rolling;
		Rolling:
			TNT1 A 0 A_PlaySound("juggernaut/engine");
			BS1W A 2 A_Chase("","");
			BS1W B 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1W A 2 A_Recoil(-1);
			BS1W B 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1W C 2 A_Recoil(-1);
			BS1W D 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1W C 2 A_Recoil(-1);
			BS1W D 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1W A 2 A_Chase("","");
			BS1W B 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1W A 2 A_Recoil(-1);
			BS1W B 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1W C 2 A_Recoil(-1);
			BS1W D 2 A_Recoil(-1);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1W C 2 A_Recoil(-1);
			BS1W D 2 A_Recoil(-1);
			TNT1 A 0 A_Jump (128, "Rolling2");
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			Loop;
		Rolling2:
			TNT1 A 0 A_PlaySound("juggernaut/engine");
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Chase("","");
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Chase("","");
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CheckSight("See");
			Goto Missile;
			///////////////////	
		Missile:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfCloser(150, "Rolling");
			TNT1 A 0 A_Jump (128, "FireRockets");
			Goto FireMachinegun;
		FireMachinegun:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("juggernaut/engine");
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Chase("","");
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody2", 0);
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 72, 42, random(-12, 12), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 72, -42, random(-12, 12), 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 72, 42, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 72, -42, 0, 0);
			TNT1 A 0 A_CustomMissile("RifleCaseSpawn", 72, 42, 0, 0);
			TNT1 A 0 A_CustomMissile("RifleCaseSpawn", 72, -42, 180, 0);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B B 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody2", 0);
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 72, 42, random(-12, 12), 0);
			TNT1 A 0 A_CustomMissile("HeavyMachinegunProjectileEnemy", 72, -42, random(-12, 12), 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 72, 42, 0, 0);
			TNT1 A 0 A_CustomMissile("YellowFlareSmall", 72, -42, 0, 0);
			TNT1 A 0 A_CustomMissile("RifleCaseSpawn", 72, 42, 0, 0);
			TNT1 A 0 A_CustomMissile("RifleCaseSpawn", 72, -42, 180, 0);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNT1 A 0 A_GiveInventory("JuggernautMachinegunammo", 1);
			TNT1 A 0 A_JumpIfInventory("JuggernautMachinegunammo", 20, "stopfiring");
			TNT1 A 0 A_CheckSight("StopFiring");
			Loop;
		FireRockets:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("juggernaut/engine");
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Chase("","");
			TNT1 A 0 A_PlaySound("MISLFIRE", 1);
			TNT1 A 0 A_CustomMissile("JuggernautRocket", 110, -42, random(-3, 3), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 110, -42, random(-3, 3), 0);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Chase("","");
			TNT1 A 0 A_PlaySound("MISLFIRE", 1);
			TNT1 A 0 A_CustomMissile("JuggernautRocket", 110, 42, random(-3, 3), 0);
			TNT1 A 0 A_CustomMissile("TankFireEffect", 110, 42, random(-3, 3), 0);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			BS1B A 2 A_Recoil(-1);
			TNT1 A 0 A_CustomMissile ("SuperJuggernautBody1", 0);
			TNT1 A 0 A_SpawnItem("TreadsDamage",65);
			TNT1 A 0 A_GiveInventory("JuggernautRocketammo", 2);
			TNT1 A 0 A_JumpIfInventory("JuggernautRocketammo", 4, "stopfiring");
			TNT1 A 0 A_CheckSight("StopFiring");
			Loop;
		StopFiring:
			TNT1 A 0;
			TNT1 A 0 A_TakeInventory("JuggernautMachinegunammo", 30);
			TNT1 A 0 A_TakeInventory("JuggernautRocketammo", 6);
			Goto See;
			////////////////////
		Pain:
			TNT1 A 0;
			BS1W A 2;
			BS1W A 2 A_Pain();
			Goto Rolling;
			///////////////////////
		Death:
			TNT1 A 0;
			TNT1 A 0 A_Scream();
			TNT1 A 0 A_NoBlocking();
			TNT1 A 0 A_SpawnItem("KillTreads");
			EXPL A 0 Radius_Quake (6, 100, 0, 22, 0);
			TNT1 A 0 A_SpawnItem("BigExplosion1112");
			TNT1 A 0 A_PlaySound("weapons/explode");
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 AAAA 0 A_CustomMissile ("ExplosionSpawner", 90, 0, random (0, 360), 2, random (0, 180));
			TNT1 AAAAAA 0 A_CustomMissile ("ExplosionSpawner", 90, 0, random (0, 180), 2, random (0, 180));
			TNT1 AAAA 0 A_CustomMissile ("UltraGoreSpawner", 90, 0, random (0, 360), 2, random (0, 180));
			TNT1 AAAAAA 0 A_CustomMissile ("UltraGoreSpawner", 90, 0, random (0, 180), 2, random (0, 180));
			TNT1 A 0 A_CustomMissile ("CyberXDeath", 0, 0, random (0, 360), 2, random (0, 160));
			TNT1 A 0;
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			BS1B B 5 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			BS1B B 5 A_CustomMissile ("RealFlameTrailsMedium", 60, 0, random (0, 360), 2, random (0, 160));
			Goto Decay;
		Decay:
			BS1B B 8 A_CustomMissile ("ExplosionSmoke", 60, 0, random (0, 360), 2, random (70, 110));
			Loop;
	}
} 
class JuggernautBase : actor { 
	Default {
		
		Health 10000;
		damagefactor "Killme", 9999.0;
		Radius 64;
		Height 2;
		Scale 2.0;
		Monster;
		+NOBLOOD;
		+SOLID;
		-NOBLOCKMAP;
		-COUNTKILL;
		Mass 99999;
	}
	States
	{
		Spawn:
			BS1B A 5;
			Loop;
		Death:
			TNT1 A 0;
			TNT1 A 0 A_NoBlocking();
			Stop;
	}
}
class KillTreads : actor { 
	Default {
		
		+NOTARGET;
		Radius 1;
		Height 1;
		DamageType Killme;
		+NOGRAVITY;
		+NOTELEPORT;
		+NODAMAGETHRUST;
		+THRUGHOST;
		+NORADIUSDMG;
		+NOEXTREMEDEATH;
		+FORCERADIUSDMG;
		PROJECTILE;
		+DEHEXPLOSION;
		+ACTIVATEMCROSS;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(20,80,0);
			Stop;
	}
}
class TreadsDamage : actor { 
	Default {
		
		+NOTARGET;
		Radius 1;
		Height 1;
		DamageType Stomp;
		+NOGRAVITY;
		+NOTELEPORT;
		+NODAMAGETHRUST;
		+THRUGHOST;
		+NORADIUSDMG;
		+NOEXTREMEDEATH;
		+FORCERADIUSDMG;
		PROJECTILE;
		+DEHEXPLOSION;
		+ACTIVATEMCROSS;
		+EXPLODEONWATER;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(500,50,0);
			TNT1 A 1 A_Noblocking();
			Stop;
	}
}
class SuperJuggernautBody1 : actor { 
	Default {
		
		+RANDOMIZE;
		+FORCEXYBILLBOARD;
		+DONTSPLASH;
		+NOEXTREMEDEATH;
		+THRUactorS;
		+NOGRAVITY;
		+NOCLIP;
		Projectile;
		damage 0;
		radius 2;
		height 0;
		speed 1;
		Scale 2.0;
	}
	States
	{
		Spawn:
			BS1T AAAA 1();//A_FaceTarget
			Stop;
			Goto Death;
		Death:
			TNT1 A 0;
			Stop;
		XDeath:
			TNT1 A 0;
			Stop;
	}
}
class SuperJuggernautBody2: SuperJuggernautBody1 { 
	Default {
		
	}
	States
	{
		Spawn:
			BS1T BBBB 1 BRIGHT;//A_FaceTarget
			Stop;
			Goto Death;
	}
}
class JuggernautMachinegunammo : Inventory { 
	Default {
		
		Inventory.MaxAmount 30;
	}
}
class JuggernautRocketammo : Inventory { 
	Default {
		
		Inventory.MaxAmount 6;
	}
}
class JuggernautRocket : actor { 
	Default {
		
		Radius 11;
		Height 8;
		Speed 30;
		Damage (random (200, 250));
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+ROCKETTRAIL;
		+MISSILE;
		+NOGRAVITY;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "$OB_MPROCKET";
		//+DONTHURTSHOOTER
	}
	States
	{
		Spawn:
			MISL I 1 Bright;
			Loop;
		Death:
			MISL B 0 Bright A_Explode();
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_SpawnItem("TankShotExplosion");
			TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (0, 360), 2, random (30, 160));
			TNT1 A 6;
			TNT1 A 0 A_PlaySound("FAREXPL", 1);
			TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 12;
			Stop;
	}
}
class MetalTrashParticle1: BasicParticle { 
	Default {
		
		Height 2;
		Radius 2;
		Mass 0;
		RenderStyle "Normal";
		+DOOMBOUNCE;
		BounceFactor 0.2;
		Scale 1.0;
		Gravity 1.0;
		Speed 16;
	}
	States
	{
		Spawn:
			TRSP ABCD 3;
			Loop;
		Death:
			TRSP E 1;
			TRSP E 400;
			Stop;
	}
}
class MetalTrashParticle2: MetalTrashParticle1 { 
	Default {
		
		BounceFactor 0.4;
	}
	States
	{
		Death:
			TRSP F 1;
			TRSP F 400;
			Stop;
	}
}
class MechBaseNotReal : actor { 
	Default {
		
		+THRUactorS;
		YScale 1.8;
		XScale 1.9;
		+NOTIMEFREEZE;
		+CLIENTSIDEONLY;
		+FLOORCLIP;
		+NOGRAVITY;
		+FLOAT;
		+NOBLOCKMAP;
		Mass 99999;
		Radius 0;
		Height 0;
		Gravity 0;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			MECH A 8;
			Stop;
}}
// WORKER
class MechPlaceholderReplacer 7263 : actor {
	Default {
	actor Mech: SwitchableDecoration //7263
		
		var int user_stationedMechbasedirection;
		Scale 1.3;
		Radius 48;
		Height 160;
		+SOLID;
		+USESPECIAL;
		MONSTER;
		-COUNTKILL;
		+SHOOTABLE;
		+LOOKALLAROUND;
		+THRUactorS;
		+NOINFIGHTING;
		+NORADIUSDMG;
		-COUNTKILL;
		MaxTargetRange 120;
		PainChance "Repair", 255;
		BloodType "TankBlood", "TankBlood", "TankBlood"();
		Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial();
		Mass 9999;
		Speed 0;
		health 1000;
		damagefactor "stomp", 0;
		damagefactor "Repair", 1.0 damagefactor "CheckRepair", 0.0();
		damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0();
		damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0();
		damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0();
		damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0();
		damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0();
		DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0();
		DamageFactor "MechWeakSpot", 3.0 damagefactor "Plasma", 1.5 damagefactor "Plasma2", 1.5();
		damagefactor "Desintegrate", 3.0;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(137, 0, 0, 0, 0);//Check vehicle initial angle.
		TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 0 A_SpawnItem("MechBaseNotReal");
		TNT1 A 5();
		TNT1 A 0 Thing_ChangeTID(0, 0);
		TNK1 C 0 A_ChangeFlag("THRUactorS", 0);
		TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
		Goto StandingHere;
	StandingHere:
		TNT1 A 7;
		TNT1 A 0 A_SpawnItem("MechBaseNotReal");
		TNT1 A 0 A_SpawnItem("StationedVehicleCheckRepairs");
		Loop;
	Active:
		TNT1 A 0();
		MECH A 0 A_ChangeFlag("FRIENDLY", 0);
		//TNT1 A 0 A_Look
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health	
		//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
		TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
		TNT1 A 0 A_SpawnItem("MechBaseNotReal");
		TNT1 A 3;
		TNT1 A 0 A_GiveToTarget("MechMorpher", 1);
		TNT1 A 0 A_GiveToTarget("HeavyMachinegunammo", 2000);
		TNT1 A 0 A_GiveToTarget("Mechlaserammo", 2000);
		TNT1 A 0 A_GiveToTarget("MechRocketammo", 2000);
		TNT1 A 0 A_GiveToTarget("MechMortarammo", 2000);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 A_NoBlocking();
		TNT1 A 1;
		TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
		TNT1 A 10;
		TNT1 A 0 Thing_ChangeTID(0, 0);
		TNT1 A 1;
		Stop;
	Death:
		TNT1 A 1;
		TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
		TNT1 A 0 A_SpawnItem("BigExplosion1112");
		TNT1 A 0 A_PlaySound("weapons/explode");
		TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
		TNT1 A 0 A_Scream();
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
		ELEC A 0 A_Explode(100, 250);
		TNT1 A 15;
		TNT1 A 0;
		Stop;
	Pain.Repair:
		TNT1 A 0;
		TNT1 A 0 A_ChangeFLag("NOPAIN", 1);
		TNT1 A 0 HealThing(5);
		MECH A 1;
		TNT1 A 0 HealThing(5);
		TNT1 A 0 A_ChangeFLag("NOPAIN", 0);
		Goto StandingHere;
}
}
class MechUsed: Mech { 
	Default {
	
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 1;
		TNT1 A 0 ACS_ExecuteAlways(136, 0, 0, 0, 0);//SpawnVehicleBase
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 5();
		TNT1 A 0 Thing_ChangeTID(0, 0);
		TNK1 C 0 A_ChangeFlag("THRUactorS", 0);
		TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
		TNT1 A 0 ACS_Execute(129);
		Goto StandingHere;
	IsOnline:
		TNT1 A 0;
		TNT1 A 1;
		TNT1 A 0 A_TAkeInventory("MechBaseDirection", 500);
		Goto StandingHere;
	Active:
		TNT1 A 0();
		TTR1 A 0 A_ChangeFlag("FRIENDLY", 0);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health
		//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
		TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
		TNT1 A 3;
		TNT1 A 0 A_GiveToTarget("MechMorpher", 1);
		TNT1 A 0 Thing_ChangeTID(0, 261);
		TNT1 A 0 A_NoBlocking();
		TNT1 A 1;
		TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
		TNT1 A 10;
		TNT1 A 0 Thing_ChangeTID(0, 0);
		Stop;
}
}
class PowerMechSwitch : PowerMorph {PowerMorph.Playerclass "PlayerMech"} { 
	Default {
class MechMorpher : CustomInventory  { 
	Default {
		
	}
	States
	{
		PickUp:
			TNT1 A 1;
			TNT1 A 0 ACS_ExecuteAlways(134, 0, 0, 0, 0);//Get into Mech
			TNT1 A 0 A_GiveInventory("MechMorphActivation");
			TNT1 A 0 A_SpawnItem("CancelTeleportFog");
			TNT1 A 1;
			Stop;
	}
}
class MechMorphActivation : PowerupGiver { 
	Default {
		
		Powerup.Type "PowerMechSwitch";
		Powerup.Duration 252000;
		+Inventory.AUTOACTIVATE;
		+Inventory.ALWAYSPICKUP;
		Inventory.MaxAmount 1;
		Health 100;
		GibHealth 1;
		Mass 9999;
		Height 96;
		Radius 32;
	}
	States
	{
		Spawn:
			TNT1 A 100;
			Stop;
		PickUp:
			TNT1 A 1;
			TNT1 A 1;
			Stop;
	}
}
class PlayerMech : PlayerPawn { 
	Default {
		
		var int user_Mechbasedirection;
		Speed 0.6;
		Scale 1.25;
		Radius 48;
		Height 96;
		Mass 9999;
		PainChance 0;
		health 1000;
		-PICKUP;
		player.viewheight180;
		player.attackzoffset 180;
		MaxStepHeight 64;
		Player.Morphweapon "MechGun";
		Player.JumpZ 0;
		BloodType "TankBlood", "TankBlood", "TankBlood";
		damagefactor "stomp", 0;
		+NOSKIN;
		+NORADIUSDMG;
		+FORCERADIUSDMG;
		+FIXMAPTHINGPOS;
		+DONTRIP;
		-CANUSEWALLS;
		-PICKUP;
		DamageFactor "Repair", 0.0 damagefactor "CheckRepair", 0.0;
		damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0;
		damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0;
		damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0;
		damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0;
		damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0;
		DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0;
		DamageFactor "MechWeakSpot", 3.0 damagefactor "Plasma", 1.5 damagefactor "Plasma2", 1.5;
		damagefactor "Desintegrate", 3.0;
	}
	States
	{
		ExitVehicle:
			TNT1 A 1 A_Stop();
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_SpawnItemEx ("TransferPlayerOutOfVehicle", 100, 0, 0);
			TNT1 A 3;
			TNT1 A 0 A_JumpIfInventory("CanLeaveVehicle", 1, "CanExit");
			TNT1 A 0 A_Print("Can't leave from this direction", 1);
			Goto Stay;
		CanExit:
			TNT1 A 0;
			TNT1 A 2;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_TakeInventory("CanLeaveVehicle", 1);
			TNT1 A 0 ACS_Execute(135);
			TNT1 A 0 A_SpawnItemEx ("MechUsed", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			Goto FinishExit;
		FinishExit:
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 AAA 10 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			Goto Stay;
		Spawn:
		Spawn2:
			MECH A 1;
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			TNT1 A 0 A_TakeInventory("PressedJump", 1);
			TNT1 A 0 A_TakeInventory("TurnRight", 1);
			TNT1 A 0 A_TakeInventory("TurnLeft", 1);
			TNT1 A 0 A_TakeInventory("Accelerate", 1);
			TNT1 A 0 A_TakeInventory("BackPedal", 1);
			MECH A 15;
			TNT1 A 0 A_TakeInventory("PressedJump", 1);
			TNT1 A 0 A_TakeInventory("PressedUse", 1);
			Goto Stay;
		Stay:
			TNT1 A 0;
			TNT1 A 0 A_JumpIf(velz < 0, "FallingNoJump");
			TNT1 A 0 A_JumpIf(velz > 0, "FallingNoJump");
			TNT1 A 0 A_SpawnItem("MechStandingStillSmash");
			MECH G 1;
			TNT1 A 0 A_JumpIfInventory("PressedJump", 1, "Jump");
			TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "MoveForward");
			TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "MoveForward");
			TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
			TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "MoveForward");
			TNT1 A 0 A_JumpIfInventory("Backpedal", 1, "MoveBackward");
			//MECH G 1
			//TNT1 A 0 A_JumpIf(momx>0, "FalseMove")
			//TNT1 A 0 A_JumpIf(momy>0, "FalseMove")
			//TNT1 A 0 A_JumpIf(momx<0, "FalseMove")
			//TNT1 A 0 A_JumpIf(momy<0, "FalseMove")
			Loop;
		MoveForward:
			TNT1 A 0;
			TNT1 A 0 A_JumpIf(velz < 0, "FallingNoJump");
			TNT1 A 0 A_JumpIf(velz > 0, "FallingNoJump");
			TNT1 A 0 A_TakeInventory("Accelerate", 1);
			TNT1 A 0 A_TakeInventory("Backpedal", 1);
			TNT1 A 0 A_PlaySound("MECHWLK", 15);
			MECH BBBBCCCC 1 A_SetPitch(pitch -0.1);
			TNT1 A 0 A_SpawnItem("MechStomp");
			TNT1 A 0 A_JumpIfInventory("PressedJump", 1, "Jump");
			TNT1 A 0 A_JumpIf(velz < 0, "FallingNoJump");
			TNT1 A 0 A_JumpIf(velz > 0, "FallingNoJump");
			MECH DDDD 1 A_SetPitch(pitch +0.2);
			TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
			MECH D 6;
			TNT1 A 0 A_SpawnItem("MechStomp");
			TNT1 A 0 A_JumpIfInventory("Backpedal", 1, "MoveBackward");
			TNT1 A 0 A_PlaySound("MECHWLK", 15);
			MECH EEEEFFFF 1 A_SetPitch(pitch -0.1);
			TNT1 A 0 A_JumpIfInventory("PressedJump", 1, "Jump");
			TNT1 A 0 A_SpawnItem("MechStomp");
			MECH GGGG 1 A_SetPitch(pitch +0.2);
			MECH G 6;
			TNT1 A 0 A_SpawnItem("MechStomp");
			TNT1 A 0 A_TakeInventory("Accelerate", 1);
			TNT1 A 0 A_TakeInventory("Backpedal", 1);
			TNT1 A 0 A_TakeInventory("TurnLeft", 1);
			TNT1 A 0 A_TakeInventory("TurnRight", 1);
			Goto Stay;
		MoveBackward:
			TNT1 A 0;
			TNT1 A 0 A_JumpIf(velz < 0, "FallingNoJump");
			TNT1 A 0 A_JumpIf(velz > 0, "FallingNoJump");
			TNT1 A 0 A_TakeInventory("Accelerate", 1);
			TNT1 A 0 A_TakeInventory("Backpedal", 1);
			TNT1 A 0 A_PlaySound("MECHWLK", 15);
			MECH FFFFEEEE 1 A_SetPitch(pitch -0.1);
			TNT1 A 0 A_JumpIfInventory("PressedJump", 1, "Jump");
			TNT1 A 0 A_SpawnItem("MechStomp");
			TNT1 A 0 A_JumpIf(velz < 0, "FallingNoJump");
			TNT1 A 0 A_JumpIf(velz > 0, "FallingNoJump");
			MECH DDDD 1 A_SetPitch(pitch +0.2);
			MECH D 6;
			TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "MoveForward");
			TNT1 A 0 A_PlaySound("MECHWLK", 15);
			MECH CCCCBBBB 1 A_SetPitch(pitch -0.1);
			TNT1 A 0 A_JumpIfInventory("PressedJump", 1, "Jump");
			TNT1 A 0 A_SpawnItem("MechStomp");
			MECH GGGG 1 A_SetPitch(pitch +0.2);
			MECH G 6;
			TNT1 A 0 A_TakeInventory("Accelerate", 1);
			TNT1 A 0 A_TakeInventory("Backpedal", 1);
			TNT1 A 0 A_TakeInventory("TurnLeft", 1);
			TNT1 A 0 A_TakeInventory("TurnRight", 1);
			Goto Stay;
			//See:
			MECH BCDEFG 4;
			TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
			Goto Stay;
		FallingNoJump:
			MECH HHH 2 A_JumpIf(velz == 0, "Stay");
			MECH HHHHHH 2 A_JumpIf(velz == 0, "HitGroundEasy");
			MECH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH 2 A_JumpIf(velz == 0, "HitGround");
			MECH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH 2 A_JumpIf(velz == 0, "HitGround");
			Loop;
		HitGroundEasy:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItem("MechStompLand");
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_TakeInventory("PressedJump", 1);
			Goto Stay;
		Jump:
			TNT1 A 0;
			TNT1 A 0 ThrustThingZ(0,100,0,1);
			TNT1 A 0 A_PlaySound("MECHJUMP");
			TNT1 A 0 A_TakeInventory("PressedJump", 1);
			MECH H 30();
			TNT1 A 0 A_TakeInventory("PressedJump", 1);
			Goto Falling;
			//Goto Flying
			//Flying:
			//MECH H 2 
			//TNT1 A 0 A_GIVEInventory("PowerFlight", 1)
			//TNT1 A 0 A_JumpIfInventory("PressedJump", 1, "Falling")
			//Loop
		Falling:
			MECH H 2();
			TNT1 A 0 A_TakeInventory("PowerFlight", 1);
			TNT1 A 0 A_TakeInventory("PressedJump", 1);
			TNT1 A 0 A_JumpIf(velz == 0, "HitGround");
			Loop;
		HitGround:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItem("MechStompLand");
			TNT1 A 0 A_SpawnItem("MechStompLand2");
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_SpawnItem("CrashTankIntotheGround1");
			TNT1 A 0 A_SpawnItem("CrashTankIntotheGround2");
			TNT1 A 0 Radius_Quake(8, 24, 0, 4, 0);
			TNT1 A 0 A_PlaySound("BIKECLW", 1);
			TNT1 A 0 A_PlaySound("EBIKECLS", 2);
			MECH A 20;
			TNT1 A 0 A_TakeInventory("PressedJump", 1);
			Goto Stay;
		Death:
		XDeath:
			TNT1 A 1;
			TNT1 A 0 A_SpawnItem("BigExplosion1112");
			TNT1 A 0 A_PlaySound("weapons/explode");
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_Scream();
			TNT1 A 0 A_NoBlocking();
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
			ELEC A 0 A_Explode(100, 250);
			TNT1 A 0 A_SpawnItem("DestroyedAircraft");
			8762 A 5;
			TNT1 A 0 A_TakeInventory("MechGun", 1);
			8762 A 100;
			8762 A -1;
			Stop;
	}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Vehicle's weapons and misc
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class MechReady : Ammo { 
	Default {
		
		Inventory.Amount 0;
		Inventory.MaxAmount 100;
		Ammo.BackPackAmount 0;
		Ammo.BackPackMaxAmount 100;
		Inventory.Icon TNT1A0;
	}
}
class MechGun : Doomweapon { 
	Default {
		
		
		Weapon.SelectionOrder 1900;
		Weapon.AmmoUse1 0;
		Weapon.AmmoGive1 0;
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive2 0;
		Obituary "$OB_MPPISTOL";
		+WEAPON.Ammo_OPTIONAL;
		+WEAPON.ALT_ammo_OPTIONAL;
		+WEAPON.NOAUTOFIRE;
		//+WEAPON.NOAUTOFIRE
		Inventory.PickupMessage "$PICKUP_PISTOL_DROPPED";
		Tag "$TAG_PISTOL";
	}
	States
	{
		Ready:
			TNT1 A 0;
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("MechFireMode", 3, "Ready3");
			TNT1 A 0 A_JumpIfInventory("MechFireMode", 2, "Ready2");
			TNT1 A 0 A_JumpIfInventory("MechFireMode", 1, "Ready1");
			Goto Ready0;
		Ready0:
			MEKH A 1 A_WeaponReady(1);
			TNT1 A 0 ACS_ExecuteAlways(656, 0, 0, 0, 0);//SHOWHUD
			TNT1 A 0 A_GiveInventory("MechReady", 1);
			NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck2");
			NULL A 0 A_JumpIf (pitch > 64, "TooLowCheck2");
			Goto Ready;
		Ready1:
			MEKH B 1 A_WeaponReady(1);
			TNT1 A 0 ACS_ExecuteAlways(656, 0, 0, 0, 0);//SHOWHUD
			TNT1 A 0 A_GiveInventory("MechReady", 1);
			NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck2");
			NULL A 0 A_JumpIf (pitch > 64, "TooLowCheck2");
			Goto Ready;
		Ready2:
			MEKH C 1 A_WeaponReady(1);
			TNT1 A 0 ACS_ExecuteAlways(656, 0, 0, 0, 0);//SHOWHUD
			TNT1 A 0 A_GiveInventory("MechReady", 1);
			NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck2");
			NULL A 0 A_JumpIf (pitch > 64, "TooLowCheck2");
			Goto Ready;
		Ready3:
			MEKH D 1 A_WeaponReady(1);
			TNT1 A 0 ACS_ExecuteAlways(656, 0, 0, 0, 0);//SHOWHUD
			TNT1 A 0 A_GiveInventory("MechReady", 1);
			NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck2");
			NULL A 0 A_JumpIf (pitch > 64, "TooLowCheck2");
			Goto Ready;
		NotReady:
			TNT1 A 1 A_GiveInventory("MechReady", 1);
			Goto Ready;
		DeSelect:
			TNT1 A 1 A_Lower();
			TNT1 A 0 SetPlayerProperty(0,0,4);
			TNT1 AAAAA 0 A_Lower();
			TNT1 A 0 A_TAkeInventory("MechGun");
			Loop;
		Select:
			TNT1 A 1 A_Raise();
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Raise();
			TNT1 A 1 A_Raise();
			Goto Ready;
		Noammo:
			MEKH A 1;
			TNT1 A 0 A_Print("Ammunition Depleted", 2);
			Goto Ready;
		Fire:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("MechFireMode", 3, "Mortar");
			TNT1 A 0 A_JumpIfInventory("MechFireMode", 2, "Rocket");
			TNT1 A 0 A_JumpIfInventory("MechFireMode", 1, "Laser");
		Machinegun:
			TNT1 A 0 A_GunFlash();
			TNT1 A 0 A_JumpIfInventory("HeavyMachinegunammo", 1, 1);
			Goto Noammo;
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_FireCustomMissile("HeavyMachinegunProjectile2", random(-2, 2), 1, -35, -65, 0, random(-2, 2));
			TNT1 A 0 A_FireCustomMissile("HeavyMachinegunFlash", 0, 1, 45, -65);
			TNT1 A 0 A_TakeInventory("HeavyMachinegunammo", 1);
			MEKH A 1 BRIGHT;
			TNT1 A 0 A_PlaySound("TANKMG", 1);
			TNT1 A 0 A_FireCustomMissile("HeavyMachinegunProjectile2", random(-2, 2), 1, 35, -65, 0, random(-2, 2));
			TNT1 A 0 A_FireCustomMissile("HeavyMachinegunFlash", 0, 1, -45, -65);
			TNT1 A 0 A_TakeInventory("HeavyMachinegunammo", 1);
			MEKH A 1 BRIGHT;
			TNT1 A 0 A_GunFlash();
			TNT1 A 0 A_ReFire();
			Goto Ready0;
		Laser:
			TNT1 A 0 A_GunFlash();
			TNT1 A 0 A_JumpIfInventory("MechLaserammo", 1, 1);
			Goto Noammo;
			TNT1 A 0 A_PlaySound("BIGPLSM1", 1);
			TNT1 A 0 A_FireCustomMissile("heavyplasmaProjectile", 0, 1, -25, -65, 0, 0);
			TNT1 A 0 A_FireCustomMissile("heavyplasmaFlash", 0, 1, -25, -65, 0, 0);
			TNT1 A 0 A_TakeInventory("MechLaserammo", 1);
			MEKH BB 4 BRIGHT A_GunFlash();
			TNT1 A 0 A_PlaySound("BIGPLSM1", 1);
			TNT1 A 0 A_FireCustomMissile("heavyplasmaProjectile", 0, 1, 25, -65, 0, 0);
			TNT1 A 0 A_FireCustomMissile("heavyplasmaFlash", 0, 1, 25, -65, 0, 0);
			TNT1 A 0 A_TakeInventory("Mechlaserammo", 1);
			MEKH BB 4 BRIGHT A_GunFlash();
			TNT1 A 0 A_ReFire();
			Goto Ready1;
		Rocket:
			TNT1 A 0 A_GunFlash();
			TNT1 A 0 A_JumpIfInventory("MechRocketammo", 1, 1);
			Goto Noammo;
			//TNT1 A 0 A_PlaySound("TANKMG", 1)
			TNT1 A 0 A_FireCustomMissile("AssaultHelicopterRocket", 0, 1, -25, -25, 0, 0);
			TNT1 A 0 A_FireCustomMissile("TankFireEffect", 0, 1, 55, -10);
			TNT1 A 0 A_TakeInventory("MechRocketammo", 1);
			MEKH CCC 4 BRIGHT A_GunFlash();
			//TNT1 A 0 A_PlaySound("TANKMG", 1)
			TNT1 A 0 A_FireCustomMissile("AssaultHelicopterRocket", 0, 1, 25, -25, 0, 0);
			TNT1 A 0 A_FireCustomMissile("TankFireEffect", 0, 1, -55, -10);
			TNT1 A 0 A_TakeInventory("MechRocketammo", 1);
			MEKH CCCCC 4 BRIGHT A_GunFlash();
			TNT1 A 0 A_ReFire();
			Goto Ready2;
		Mortar:
			TNT1 A 0 A_GunFlash();
			TNT1 A 0 A_JumpIfInventory("MechMortarammo", 1, 1);
			Goto Noammo;
			//TNT1 A 0 A_PlaySound("TANKMG", 1)
			TNT1 A 0 A_FireCustomMissile("MechMortar", random(-1, 1), 1, -45, -15, 0, random(-1, 1));
			TNT1 A 0 A_FireCustomMissile("TankFireEffect", 0, 1, 45, -15);
			TNT1 A 0 A_TakeInventory("MechMortarammo", 1);
			MEKH DDDDDDDDDD 4 BRIGHT A_GunFlash();
			TNT1 A 0 A_ReFire();
			Goto Ready3;
		AltFire:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("MechFireMode", 3, "Switch0");
			TNT1 A 0 A_GiveInventory("MechFireMode", 1);
			Goto Ready;
		Switch0:
			TNT1 A 0 A_TakeInventory("MechFireMode", 3);
			Goto Ready0;
		Flash:
			TNT1 A 1;
			TNT1 A 0 ACS_ExecuteAlways(656, 0, 0, 0, 0);//SHOWHUD
			TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
			NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
			NULL A 0 A_JumpIf (pitch > 64, "TooLowCheck1");
			TNT1 A 1;
			TNT1 A 0 ACS_ExecuteAlways(656, 0, 0, 0, 0);//SHOWHUD
			TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
			NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
			NULL A 0 A_JumpIf (pitch > 64, "TooLowCheck1");
			TNT1 A 1;
			TNT1 A 0 ACS_ExecuteAlways(656, 0, 0, 0, 0);//SHOWHUD
			TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
			NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
			NULL A 0 A_JumpIf (pitch > 64, "TooLowCheck1");
			Stop;
		TooHigh2:
			TNT1 A 0 A_SetPitch(326);
			Goto Ready;
		TooLowCheck2:
			//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1")
			TNT1 A 0 A_SetPitch(64);
			Goto Ready;
		TooHighCheck2:
			TNT1 A 0;
			NULL A 0 A_JumpIf (pitch < 325, "TooHigh2");
			Goto Ready;
		TooHigh:
			TNT1 A 0 A_SetPitch(326);
			Goto Flash;
		TooLowCheck1:
			//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1")
			TNT1 A 0 A_SetPitch(16);
			Goto Flash;
		TooHighCheck1:
			TNT1 A 0;
			NULL A 0 A_JumpIf (pitch < 325, "TooHigh");
			Goto Flash;
		LightEnd:
			TNT1 A 10;
			Stop;
		Spawn:
			LAUN A -1;
			Stop;
	}
}
class MechRocket : actor { 
	Default {
		
		Radius 11;
		Height 8;
		Speed 40;
		Damage (random (300, 500));
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+ROCKETTRAIL;
		+MISSILE;
		+NOGRAVITY;
		+FORCERADIUSDMG;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "$OB_MPROCKET";
		//+DONTHURTSHOOTER
	}
	States
	{
		Spawn:
			MISL A 1 Bright;
			Loop;
		Death:
			MISL B 0 Bright A_Explode();
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_SpawnItem("TankShotExplosion");
			TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (0, 360), 2, random (30, 160));
			TNT1 A 6;
			TNT1 A 0 A_PlaySound("FAREXPL", 1);
			TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 12;
			Stop;
	}
}
class MechFireEffect : actor { 
	Default {
		
		Radius 1;
		Height 1;
		Speed 70;
		Damage 1;
		Projectile;
		+RANDOMIZE;
		+MISSILE;
	}
	States
	{
		Spawn:
			TNT1 A 2;
			Goto Death;
		Death:
			TNT1 A 0;
			TNT1 A 0 Radius_Quake(6, 12, 0, 4, 0);
			TNT1 AAAAA 0 A_SpawnItem("RedFlare");
			TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 1;
			TNT1 AAAAA 0 A_SpawnItem("RedFlare");
			TNT1 A 12;
			Stop;
	}
}
class MechShotExplosionImpact : actor { 
	Default {
		
		damagetype "ExplosiveImpact";
		+MISSILE;
		+NOCLIP;
	}
	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A 0 A_Explode(50, 400);
			Stop;
	}
}
class MechMachinegunProjectile : actor { 
	Default {
		
		
		Radius 13;
		Height 8;
		Speed 130;
		Damage 12;
		Projectile;
		+RANDOMIZE;
		+MISSILE;
		-NOGRAVITY;
		+BLOODSPLATTER;
		+NOEXTREMEDEATH;
		Gravity 0.2;
		RenderStyle "Translucent";
		damagetype "Blast";
		Alpha 0.9;
		Scale 1.1;
		Obituary "$OB_MPPLASMARIFLE";
	}
	States
	{
		Spawn:
			MG74 A 1 Bright;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItem("RicoChet");
			TNT1 A 10;
			Stop;
	}
}
class MechStomp : actor { 
	Default {
		
		+NOTARGET;
		Radius 1;
		Height 1;
		DamageType Stomp;
		+NOGRAVITY;
		+NOTELEPORT;
		+NODAMAGETHRUST;
		+THRUGHOST;
		+NORADIUSDMG;
		+FORCERADIUSDMG;
		PROJECTILE;
		+DEHEXPLOSION;
		+ACTIVATEMCROSS;
		+EXPLODEONWATER;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(500,80,0);
			TNT1 A 0 A_SpawnItemEx("TreadsDamage2", 0, 50);
			TNT1 A 0 A_SpawnItemEx("TreadsDamage2", 0, -50);
			TNT1 A 1 A_Noblocking();
			PLAY A 0;
			Stop;
	}
}
class MechStandingStillSmash: MechStomp { 
	Default {
		
		DamageType Extreme;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(2000,40,0);
			TNT1 A 1;
			Stop;
	}
}
class MechStompLand: MechStomp { 
	Default {
		
		DamageType Extreme;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(2000,100,0);
			TNT1 A 1;
			Stop;
	}
}
class MechStompLand2: MechStomp { 
	Default {
		
		DamageType ExplosiveImpact;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Explode(50,600,0);
			TNT1 A 1;
			Stop;
	}
}
class MechMortar : actor { 
	Default {
		
		Radius 11;
		Height 8;
		Speed 40;
		Damage (random (300, 310));
		Projectile;
		+RANDOMIZE;
		+DEHEXPLOSION;
		+ROCKETTRAIL;
		+MISSILE;
		+NOGRAVITY;
		+FORCERADIUSDMG;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		Obituary "$OB_MPROCKET";
		//+DONTHURTSHOOTER
	}
	States
	{
		Spawn:
			RCKT A 15 Bright;
			Goto Death;
		Death:
			MISL B 0 Bright;
			TNT1 A 0 A_Explode(300, 300);
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_SpawnItem("TankShotExplosion");
			TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (0, 360), 2, random (30, 160));
			TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (-40, 40), 2, random (-30, 30));
			TNT1 AAA 0 A_SpawnItem("MachinegunFlash");
			TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("MortarBombs", 0, 0, random (-15, 15), 2, random (-2, 20));
			TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_stop();
			Stop;
	}
}
class MortarBombs : actor { 
	Default {
		
		Radius 11;
		Height 8;
		Speed 30;
		Damage (random (100, 120));
		+MISSILE;
		-NOGRAVITY;
		Gravity 0.4;
		SeeSound "weapons/rocklf";
		DeathSound "weapons/rocklx";
		DamageType "ExplosiveImpact";
		//+DONTHURTSHOOTER
	}
	States
	{
		Spawn:
			BS2X ABCD 5;
			Loop;
		Death:
			MISL B 0 Bright;
			TNT1 A 0 A_Explode(150, 200);
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_SpawnItem("TankShotExplosion");
			TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticle", 0, 0, random (0, 360), 2, random (30, 160));
			TNT1 A 6;
			TNT1 A 0 A_PlaySound("FAREXPL", 1);
			TNT1 AAAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAA 0 A_CustomMissile ("ExplosionSmokeFast", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 12;
			Stop;
	}
}
class HitDetectionBase: FastProjectile { 
	Default {
		
		Radius 24;
		Height 32;
		Speed 40;
		FastSpeed 40;
		Damage 1;
		Projectile;
		+RANDOMIZE;
		//+RIPPER
		+NOBLOOD;
		+MISSILE;
		+BLOODLESSIMPACT;
		+FORCERADIUSDMG;
		+THRUGHOST;
		-NOCLIP;
		RenderStyle "Add";
		Alpha 1;
		//DamageType Kick
	}
	States
	{
		Spawn:
			TNT1 A 1 BRIGHT;
			Stop;
	}
}
class HelicopterHitDetection: HitDetectionBase { 
	Default {
		
		DamageType Cut;
		Damage (random(100, 200));
		Height 64;
		-NOBLOOD;
		-BLOODLESSIMPACT;
	}
	States
	{
		Spawn:
			TNT1 A 3 BRIGHT;
			Stop;
		Death:
			TNT1 A 3;
			TNT1 A 0 A_CustomMissile("HelicopterCrashPuff");
			Stop;
		XDeath:
			TNT1 A 3;
			TNT1 A 0 A_CustomMissile("HelicopterCrashPuff");
			Stop;
	}
}
class HelicopterHitDetectionGround: HitDetectionBase { 
	Default {
		
		DamageType Normal;
		Damage (random(100, 200));
		Height 2;
		Radius 2;
	}
	States
	{
		Spawn:
			TNT1 A 1 BRIGHT;
			Stop;
		Death:
			TNT1 A 3;
			TNT1 A 0 A_CustomMissile("HelicopterCrashPuffGround");
			Stop;
		XDeath:
			TNT1 A 3;
			TNT1 A 0 A_CustomMissile("HelicopterCrashPuffGround");
			Stop;
	}
}
class HelicopterCrashPuff: BulletPuff { 
	Default {
		
		renderstyle "Translucent";
		scale 0.15;
		alpha 0.7;
		+NOBLOCKMAP;
		+NOGRAVITY;
		+NOEXTREMEDEATH;
		+FORCEXYBILLBOARD;
		+FORCERADIUSDMG;
		MISSILE;
		PROJECTILE;
		DamageType "AssaultHelicopterhealth";
	}
	States
	{
		Spawn:
		Death:
		XDeath:
		Melee:
			TNT1 A 0;
			TNT1 A 0 A_Explode(3, 80, 1);
			TNT1 AAAAAA 0 A_CustomMissile ("CrashSparks", 2, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_CustomMissile ("CrashMetalShards", 2, 0, random (0, 360), 2, random (10, 50));
			TNT1 A 0 A_PlaySound("BIKECLW", 1);
			BPUF CD 1 bright;
			Stop;
	}
}
class HelicopterCrashPuffGround: HelicopterCrashPuff { 
	Default {
		
		DamageType "HitGround";
	}
}
class CrashMetalShards2 : actor { 
	Default {
		
		Radius 8;
		Height 8;
		Scale 0.2;
		Speed 16;
		Mass 1;
		gravity 0.5;
		BounceFactor 0.6;
		+DOOMBOUNCE;
		+MISSILE;
		+MOVEWITHSECTOR;
		+CLIENTSIDEONLY;
		+NOBLOCKMAP;
		+NOTELEPORT;
		+THRUactorS;
	}
	States
	{
		Spawn:
			TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
			JNK1 ABCDEFGH 3;
			Loop;
		Death:
			JNK1 H 200;
			Stop;
	}
}
//REPAIRTOOL HERE // WORKER
class StationedVehicleCheckRepairs : actor { 
	Default {
		
		+MISSILE;
		Damagetype "CheckRepair";
		Speed 0;
	}
	States
	{
		Spawn:
			TNT1 A 1;
			Goto Death;
		Death:
			TNT1 A 0;
			TNT1 A 0 A_Explode(3, 50);
			Stop;
}}
class RepairVehicleMissile : actor { 
	Default {
		
		+MISSILE;
		Radius 2;
		Height 2;
		Damagetype "Repair";
		Speed 3;
		Damage (random (1, 2));
	}
	States
	{
		Spawn:
			TNT1 A 2;
			Stop;
		Death:
			TNT1 A 1;
			TNT1 A 5;
			Stop;
}}
class VehicleRepairStation 8723 : actor { 
	Default {
		
		+SHOOTABLE;
		+NOTIMEFREEZE;
		+FLOORCLIP;
		+NOBLOOD;
		+THRUactorS;
		DamageFactor "CheckRepair", 1.0;
		DamageFactor "Stomp", 0.0;
		DamageFactor "Repair", 0.0;
		Painchance "CheckRepair", 255;
		Mass 99999;
		Radius 16;
		Height 16;
		Gravity 0;
		Health 999999;
	}
	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A -1;
			Stop;
		Pain:
			TNT1 A 3;
			Goto Spawn;
		Pain.CheckRepair:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx("RepairVehicleMissile", 0, 0, 20);
			TNT1 A 3;
			Goto Spawn;
}}
class TankBaseNotReal : actor { 
	Default {
		
		+THRUactorS;
		YScale 1.8;
		XScale 1.9;
		+NOTIMEFREEZE;
		+CLIENTSIDEONLY;
		+FLOORCLIP;
		+NOGRAVITY;
		+FLOAT;
		+NOBLOCKMAP;
		Mass 99999;
		Radius 0;
		Height 0;
		Gravity 0;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNK1 B 1;
			TNT1 A 0 A_SpawnItemEx("TankWeakSpotBase", -65, 0, 2);
			Stop;
}}
class TankBaseStationed: TankBaseNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNK1 BBBB 2 A_SpawnItemEx("TankWeakSpotBase", -65, 0, 2);
			Stop;
}}
class TankBaseNotRealMoving1: TankBaseNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_SpawnItemEx("TankWeakSpotBase", -65, 0, 2);
			TNK1 B 1;
			Stop;
}}
class TankBaseNotRealMoving2: TankBaseNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_SpawnItemEx("TankWeakSpotBase", -75, 0, 2);
			TNK1 D 1;
			Stop;
}}
class TankBaseNotRealMoving3: TankBaseNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Stop();
			TNT1 A 0 A_SpawnItemEx("TankWeakSpotBase", -75, 0, 2);
			TNK1 E 1;
			Stop;
}}
class TankTurretNotReal: TankBaseNotReal { 
	Default {
		
		Scale 1.25;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNK1 T 1;
			Stop;
}}
class TankTurretNotReal2: TankTurretNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNK1 T 2;
			Stop;
}}
class TankTurretNotReal4: TankTurretNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNK1 T 4;
			Stop;
}}
class TankTurretNotReal8: TankTurretNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNK1 T 8;
			Stop;
}}
class Tank: SwitchableDecoration 7261 { 
	Default {
		
		var int user_stationedtankbasedirection;
		Radius 48;
		Height 96;
		+SOLID;
		+USESPECIAL;
		MONSTER;
		-COUNTKILL;
		+SHOOTABLE;
		+LOOKALLAROUND;
		+THRUactorS;
		+NOINFIGHTING;
		+NORADIUSDMG;
		-COUNTKILL;
		damagefactor "stomp", 0;
		MaxTargetRange 120;
		PainChance "Repair", 255;
		BloodType "TankBlood", "TankBlood", "TankBlood";
		Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial;
		Mass 9999;
		Speed 0;
		health 2000;
		Scale 1.25;
		damagefactor "Repair", 1.0 damagefactor "CheckRepair", 0.0;
		damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0;
		damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0;
		damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0;
		damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0;
		damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0;
		DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0;
		DamageFactor "TankWeakSpot", 3.0 damagefactor "Plasma", 1.5 damagefactor "Plasma2", 1.5;
		damagefactor "Desintegrate", 3.0;
	}
	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 ACS_ExecuteAlways(137, 0, 0, 0, 0);//Check vehicle initial angle.
			TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
			TNT1 A 5;
			TNT1 A 0 A_SpawnItem("TankTurretNotReal8");
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNK1 C 0 A_ChangeFlag("THRUactorS", 0);
			TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
			Goto StandingHere;
		StandingHere:
			TNT1 A 0;
			TNT1 A 0 ACS_ExecuteAlways(136, 0, 0, 0, 0);//SpawnVehicleBase
			TNT1 A 6;
			TNT1 A 0 A_SpawnItem("TankTurretNotReal8");
			TNT1 A 0 A_SpawnItem("StationedVehicleCheckRepairs");
			Loop;
		Active:
			TNT1 A 0();
			TNK1 C 0 A_ChangeFlag("FRIENDLY", 0);
			//TNT1 A 0 A_Look
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health	
			//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
			TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
			TNT1 A 0 A_SpawnItem("TankTurretNotReal8");
			TNT1 A 3;
			TNT1 A 0 A_GiveToTarget("TankMorpher", 1);
			TNT1 A 0 A_GiveToTarget("HeavyMachinegunammo", 2000);
			TNT1 A 0 A_GiveToTarget("Tankammo", 50);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 A_NoBlocking();
			TNT1 A 1;
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 10;
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNT1 A 1;
			Stop;
		Death:
			TNT1 A 1;
			TNT1 A 0 A_SpawnItem("BigExplosion1112");
			TNT1 A 0 A_PlaySound("weapons/explode");
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 0 A_Scream();
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
			ELEC A 0 A_Explode(100, 250);
			TNT1 A 15;
			TNT1 A 0;
			Stop;
		Pain.Repair:
			TNT1 A 0;
			TNT1 A 0 A_ChangeFLag("NOPAIN", 1);
			TNT1 A 0 HealThing(5);
			TNK1 T 1;
			TNT1 A 0 HealThing(5);
			TNT1 A 0 A_ChangeFLag("NOPAIN", 0);
			Goto StandingHere;
	}
}
class TankUsed: Tank { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 1;
			TNT1 A 0 ACS_ExecuteAlways(136, 0, 0, 0, 0);//SpawnVehicleBase
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
			TNT1 A 5();
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNK1 C 0 A_ChangeFlag("THRUactorS", 0);
			TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
			TNT1 A 0 ACS_Execute(129);
			Goto StandingHere;
		IsOnline:
			TNT1 A 0;
			TNT1 A 1;
			TNT1 A 0 A_TAkeInventory("TankBaseDirection", 500);
			Goto StandingHere;
		Active:
			TNT1 A 0();
			TTR1 A 0 A_ChangeFlag("FRIENDLY", 0);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health
			//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
			TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
			TNT1 A 3;
			TNT1 A 0 A_GiveToTarget("TankMorpher", 1);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 A_NoBlocking();
			TNT1 A 1;
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 10;
			TNT1 A 0 Thing_ChangeTID(0, 0);
			Stop;
	}
}
class PowerTankSwitch : PowerMorph {PowerMorph.Playerclass "PlayerTank"} { 
	Default {
	actor TankMorpher : CustomInventory 
		
	}
	States
	{
	PickUp:
		TNT1 A 1;
		TNT1 A 0 ACS_ExecuteAlways(134, 0, 0, 0, 0);//Get into Tank
		TNT1 A 0 A_GiveInventory("TankMorphActivation");
		TNT1 A 0 A_SpawnItem("CancelTeleportFog");
		TNT1 A 1;
		Stop;
}
}
class TankMorphActivation : PowerupGiver { 
	Default {
	
	Powerup.Type "PowerTankSwitch";
	Powerup.Duration 252000;
	+Inventory.AUTOACTIVATE;
	+Inventory.ALWAYSPICKUP;
	Inventory.MaxAmount 1;
	Health 100;
	GibHealth 1;
	Mass 9999;
	Height 96;
	Radius 32;
	}
	States
	{
	Spawn:
		TNT1 A 100;
		Stop;
	PickUp:
		TNT1 A 1;
		TNT1 A 1;
		Stop;
}
}
class PlayerTank : PlayerPawn { 
	Default {
	
	var int user_tankbasedirection;
	Speed 0;
	Scale 1.25;
	Radius 48;
	Height 96;
	Mass 9999;
	PainChance 0;
	health 2000;
	-PICKUP;
	Speed 0.01;
	player.viewheight90;
	player.attackzoffset 90;
	MaxStepHeight 32;
	Player.Morphweapon "TankGun";
	Player.JumpZ 0;
	BloodType "TankBlood", "TankBlood", "TankBlood";
	damagefactor "stomp", 0;
	+NOSKIN;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	+FIXMAPTHINGPOS;
	+DONTRIP;
	-CANUSEWALLS;
	-PICKUP;
	DamageFactor "Repair", 0.0 damagefactor "CheckRepair", 0.0;
	damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0;
	damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0;
	damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0;
	damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0;
	damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0;
	DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0;
	DamageFactor "TankWeakSpot", 3.0 damagefactor "Plasma", 1.5 damagefactor "Plasma2", 1.5;
	damagefactor "Desintegrate", 3.0;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ThrustTHingZ(0, 100, -1, 1);
		TNK1 A 1;
	Spawn2:
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("Accelerate", 1);
		TNT1 A 0 A_TakeInventory("BackPedal", 1);
		TNT1 A 0 ACS_ExecuteAlways(877, 0, 0, 0, 0);
		TNK1 A 1;
		TNT1 A 0 A_SpawnItemEx ("TankTurretNotReal4" , 0, 0, -90, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNK1 AAAA 1 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, -90, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx ("TankTurretNotReal4" , 0, 0, -90, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNK1 AAAA 1 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, -90, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("FiredTankMainGun", 1);
		TNT1 A 0 A_Print (a, 4, "TUTO1");
		Goto Stay;
	ExitVehicle:
		TNT1 A 1;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_SpawnItemEx ("TransferPlayerOutOfVehicle", 0, 0, 110);
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("CanLeaveVehicle", 1, "CanExit");
		TNT1 A 0 A_Print("Can't leave from this direction", 1);
		Goto Stay;
	CanExit:
		TNT1 A 0;
		TNT1 A 2;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("CanLeaveVehicle", 1);
		TNT1 A 0 ACS_Execute(135);
		TNT1 A 0 ACS_Execute(871);
		TNT1 A 0 A_SpawnItemEx ("TankUsed", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
		Goto FinishExit;
	FinishExit:
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 AAA 10 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		Goto Stay;
	TurnLeft:
		TNT1 A 0 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNK1 A 1;
		TNT1 A 0 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIf(user_tankbasedirection > 359, "TurnLeft2");
		TNT1 A 0 A_SetUserVar("user_tankbasedirection", user_tankbasedirection+6);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
	TurnLeft2:
		TNT1 A 0 A_SetUserVar("user_tankbasedirection", 0);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
	TurnRight:
		TNT1 A 0 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNK1 A 1;
		TNT1 A 0 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIf(user_tankbasedirection == 0, "TurnRIght2");
		TNT1 A 0 A_SetUserVar("user_tankbasedirection", user_tankbasedirection-6);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		Goto CheckIfStillMoves;
	TurnRight2:
		TNT1 A 0 A_SetUserVar("user_tankbasedirection", 360);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
	CheckIfStillMoves:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		TNT1 A 0 A_StopSound(2);
		TNT1 A 0 A_PlaySound("TANK2", 5, 1, 1);
		TNT1 A 0 A_PlaySound("TANK3", 2);
	Stay:
		TNT1 A 0;
		TNT1 A 0();
		TNT1 A 0 A_PlaySound("TANK2", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNK1 A 1;
		Goto Stay;
	Pain.TracksDamaged:
		TNT1 A 0;
		TNT1 A 0();
		TNT1 A 0 A_Jump(32, "DestroyTracks");
		TNT1 A 0 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNK1 A 1;
		Goto Stay;
	Accelerate:
		TNT1 A 0 A_PlaySound("TANK1", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankTreadsDamage" , 100, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_tankbasedirection*256/360, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving3" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_tankbasedirection*256/360, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving2" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_tankbasedirection*256/360, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
	Backpedal:
		TNT1 A 0 A_PlaySound("TANK1", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankTreadsDamage" , -100, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_tankbasedirection*256/360+128, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving3" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0();//ThrustThing(user_tankbasedirection*256/360+128, 1, 1)
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving2" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnRight");
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_tankbasedirection*256/360+128, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
	Falling:
		TNT1 A 0;
		TNT1 A 0 A_CheckFloor("CheckIfStillMoves");
	FallingForReal:
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIF(velz == 0, "CrashIntoGround");
		TNT1 A 0 A_GiveInventory("VehicleFallingCount", 1);
		Loop;
	CrashIntoGround:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("VehicleFallingCount", 6, "CrashIntoGroundViolently");
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround2");
		TNT1 A 0 Radius_Quake(1, 6, 0, 4, 0);
		TNT1 A 0 A_PlaySound("EBIKEBNC", 2);
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		Goto Stay;
	CrashIntoGroundViolently:
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashTankIntotheGround2");
		TNT1 A 0 Radius_Quake(8, 24, 0, 4, 0);
		TNT1 A 0 A_PlaySound("BIKECLW", 1);
		TNT1 A 0 A_PlaySound("EBIKECLS", 2);
		TNT1 AAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		TNT1 A 0 A_SetPitch(-8.0 + pitch);
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		TNK1 A 1 A_SpawnItemEx ("TankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_tankbasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		Goto Stay;
	Death:
	XDeath:
		TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
		TNT1 A 1;
		TNT1 A 0 A_SpawnItem("BigExplosion1112");
		TNT1 A 0 A_PlaySound("weapons/explode");
		TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
		TNT1 A 0 A_Scream();
		TNT1 A 0 A_NoBlocking();
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
		ELEC A 0 A_Explode(100, 250);
		TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
		8762 A 5;
		TNT1 A 0 A_TakeInventory("TankGun", 1);
		8762 A 100;
		8762 A -1;
		Stop;
}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Vehicle's weapons and misc
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class TankReady : Ammo { 
	Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 100;
	Ammo.BackPackAmount 0;
	Ammo.BackPackMaxAmount 100;
	Inventory.Icon TNT1A0;
	}
}
class TankGun : Doomweapon { 
	Default {
	
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "Tankammo";
	Weapon.AmmoType2 "HeavyMachinegunammo";
	Obituary "$OB_MPPISTOL";
	+WEAPON.Ammo_OPTIONAL;
	+WEAPON.ALT_ammo_OPTIONAL;
	//+WEAPON.NOAUTOFIRE
	Inventory.PickupMessage "$PICKUP_PISTOL_DROPPED";
	Tag "$TAG_PISTOL";
	}
	States
	{
	Ready:
		TNT1 A 0;
		//TNT1 A 0 A_JumpIfInventory("PressedJump", 1, "ZoomMode")
		TNT1 A 0 A_GunFlash();
		TNT1 A 1 A_WeaponReady(1);
		TNT1 A 0 A_GiveInventory("TankReady", 1);
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck2");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck2");
		Loop;
	ZoomMode:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("TankZoom", 1, "StopZoom");
		TNT1 A 0 A_ZoomFactor(5.0);
		TNT1 A 0 A_GiveInventory("TankZoom");
		TNT1 A 10;
		TNT1 A 0 A_TakeInventory("PressedJump", 1);
		Goto Ready;
	StopZoom:
		TNT1 A 1;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 A_TakeInventory("TankZoom", 1);
		TNT1 A 10;
		TNT1 A 0 A_TakeInventory("PressedJump", 1);
		Goto Ready;
	NotReady:
		TNT1 A 1 A_GiveInventory("TankReady", 1);
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		Goto Ready;
	DeSelect:
		TNT1 A 1 A_Lower();
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		Loop;
	Select:
		TNHD AAAAAAAAAAAA 0 A_Raise();
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 1 A_TakeInventory("PressedUse", 1);
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNHD AAAAA 1 A_Raise();
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNT1 A 0;
		Goto Ready;
	Fire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("TankReady", 99, 1);
		Goto NotReady;
		TNHD A 1;
		TNT1 A 0 A_JumpIfInventory("HeavyMachinegunammo", 1, 1);
		Goto Noammo;
		TNT1 A 1;
		TNT1 A 0 A_TakeInventory("TankReady", 100, 1);
		TNT1 A 0 A_PlaySound("TANKF", 1);
		TNT1 A 0 A_TakeInventory("Tankammo", 1);
		MISG A 0 A_FireCustomMissile("TankShell", 0, 1, 0, -24);
		MISG A 0 A_FireCustomMissile("TankFireEffect", 0, 1, 0, -24);
		TNHD B 1 BRIGHT A_SetPitch(-8.0 + pitch);
		TNHD CD 1 A_SetPitch(+2.0 + pitch);
		TNHD EF 1 A_SetPitch(+2.0 + pitch);
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 A_GiveInventory("FiredTankMainGun", 1);
		TNT1 A 0 A_PlaySound("TANKRE", 3);
		Goto Ready;
	Noammo:
		TNT1 A 2;
		Goto Ready;
	AltFire:
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_JumpIfInventory("HeavyMachinegunammo", 1, 1);
		Goto Noammo;
		TNT1 A 0 A_PlaySound("TANKMG", 1);
		TNT1 A 0 A_FireCustomMissile("HeavyMachinegunProjectile", random(-1, 1), 1, 20, -25, 0, random(-1, 1));
		TNT1 AA 0 A_FireCustomMissile("HeavyMachinegunFlash", 0, 1, 20, -25);
		TNT1 A 0 A_TakeInventory("HeavyMachinegunammo", 1);
		TNHA A 1 BRIGHT;
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 A_GiveInventory("TankReady", 1);
		TNHA BC 1 A_GiveInventory("TankReady", 1);
		TNT1 A 0 A_GunFlash();
		TNHD A 1 A_GiveInventory("TankReady", 1);
		TNT1 A 0 A_ReFire();
		Goto Ready;
	TooHigh2:
		TNT1 A 0 A_SetPitch(326);
		Goto Ready;
	TooLowCheck2:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1")
		TNT1 A 0 A_SetPitch(16);
		Goto Ready;
	TooHighCheck2:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 325, "TooHigh2");
		Goto Ready;
	TooHigh:
		TNT1 A 0 A_SetPitch(326);
		Goto Flash;
	TooLowCheck1:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1")
		TNT1 A 0 A_SetPitch(16);
		Goto Flash;
	TooHighCheck1:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 325, "TooHigh");
		Goto Flash;
	Flash:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		Stop;
	LightEnd:
		TNT1 A 10;
		Stop;
	Spawn:
		LAUN A -1;
		Stop;
}
}
class HitSides: FastProjectile { 
	Default {
	
	Radius 16;
	Height 12;
	Speed 40;
	FastSpeed 40;
	Damage 1;
	Projectile;
	+RANDOMIZE;
	//+RIPPER
	+NOBLOOD;
	+MISSILE;
	+BLOODLESSIMPACT;
	+FORCERADIUSDMG;
	+THRUGHOST;
	-NOCLIP;
	RenderStyle "Add";
	Alpha 1;
	//DamageType Kick
	}
	States
	{
	Spawn:
		TNT1 A 1 BRIGHT;
		Stop;
	Death:
		TNT1 A 1;
		TNT1 A 0 A_SpawnItem("SideBikeHitPuff");
		Stop;
	XDeath:
		TNT1 A 1;
		TNT1 A 0 A_SpawnItem("SideBikeHitPuff");
		Stop;
}
}
class HitLeft: HitSides { 
	Default {
	
	DamageType Kick;
	}
	States
	{
	Spawn:
		TNT1 A 1 BRIGHT;
		Stop;
	Death:
		TNT1 A 3;
		TNT1 A 0 A_CustomMissile("LeftBikeHitPuff");
		Stop;
	XDeath:
		TNT1 A 3;
		TNT1 A 0 A_CustomMissile("LeftBikeHitPuff");
		Stop;
}
}
class HitRight: HitSides { 
	Default {
	
	DamageType Kick;
	}
	States
	{
	Spawn:
		TNT1 A 1 BRIGHT;
		Stop;
	Death:
		TNT1 A 3;
		TNT1 A 0 A_CustomMissile("RightBikeHitPuff");
		Stop;
	XDeath:
		TNT1 A 3;
		TNT1 A 0 A_CustomMissile("RightBikeHitPuff");
		Stop;
}
}
class HitLeftWeak: HitSides { 
	Default {
	
	DamageType Kick;
	}
	States
	{
	Spawn:
		TNT1 A 1 BRIGHT;
		Stop;
	Death:
		TNT1 A 3;
		TNT1 A 0 A_CustomMissile("LeftBikeHit");
		Stop;
	XDeath:
		TNT1 A 3;
		TNT1 A 0 A_CustomMissile("LeftBikeHitPuff");
		Stop;
}
}
class HitRightWeak: HitSides { 
	Default {
	
	DamageType Kick;
	}
	States
	{
	Spawn:
		TNT1 A 1 BRIGHT;
		Stop;
	Death:
		TNT1 A 3;
		TNT1 A 0 A_CustomMissile("RightBikeHit");
		Stop;
	XDeath:
		TNT1 A 3;
		TNT1 A 0 A_CustomMissile("RightBikeHitPuff");
		Stop;
}
}
class HitFront: HitSides { 
	Default {
	
	DamageType Kick;
	Radius 1;
	Speed 60;
	}
	States
	{
	Spawn:
		TNT1 A 1 BRIGHT;
		TNT1 A 0 A_Explode(50,55,0);
		Stop;
	XDeath:
	Death:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItem("QuakeCameraWeak");
		TNT1 A 0 A_SpawnItem("BikeBounceSound");
		TNT1 A 0 A_SpawnItem("BikeBounceSound2");
		TNT1 A 0 A_SpawnItem("FrontBikeHitPuff");
		TNT1 A 0 A_Explode(2,60,1);
		TNT1 A 0 A_Explode(50,55,0);
		TNT1 A 20;
		Stop;
}
}
class HitFrontWeak: HitFront { 
	Default {
	
	}
	States
	{
	Spawn:
	Spawn:
		TNT1 A 1 BRIGHT;
		TNT1 A 0 A_Explode(10,55,0);
		Stop;
	XDeath:
	Death:
		TNT1 A 0;
		//TNT1 A 0 A_Explode(4,60,1)
		//TNT1 A 0 A_Explode(50,55,0)
		TNT1 A 20;
		Stop;
}
}
class HitFrontStrong: HitFront { 
	Default {
	
	DamageType ExplosiveImpact;
	}
	States
	{
	XDeath:
	Death:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItem("QuakeCameraWeak");
		TNT1 A 0 A_SpawnItem("BikeBounceSound");
		TNT1 A 0 A_SpawnItem("BikeBounceSound2");
		TNT1 A 0 A_SpawnItem("FrontBikeHitPuff");
		TNT1 A 0 A_SpawnItem("CrashPlayerStrong");
		TNT1 A 0 A_Explode(200,55,0);
		TNT1 A 20;
		Stop;
}
}
class HitFrontDevastative: HitFront { 
	Default {
	
	DamageType Extreme;
	}
	States
	{
	Death:
		TNT1 A 1;
		TNT1 AAAA 0 A_CustomMissile ("CrashSparks", -2, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAA 0 A_SpawnItem("FrontBikeHitPuffStrong");
		TNT1 A 0 A_SpawnItem("CrashPlayerDevastative");
		TNT1 A 0 A_Explode(1000,55,0);
		TNT1 A 20;
		Stop;
	XDeath:
		TNT1 A 1;
		TNT1 AAAA 0 A_CustomMissile ("CrashSparks", -2, 0, random (0, 360), 2, random (0, 360));
		TNT1 AA 0 A_SpawnItem("FrontBikeHitPuffStrong");
		//TNT1 A 0 A_SpawnItem("FrontBikeHitPuff")
		TNT1 A 0 A_SpawnItem("CrashPlayerDevastative");
		TNT1 A 0 A_Explode(1000,55,0);
		TNT1 A 20;
		Stop;
}
}
class HitFrontSuicidal: HitFront { 
	Default {
	
	DamageType Extreme;
	}
	States
	{
	Death:
		TNT1 A 1;
		TNT1 AAAA 0 A_SpawnItem("FrontBikeHitPuffStrong");
		TNT1 A 0 A_Explode(2000,55,1);
		TNT1 A 20;
		Stop;
	XDeath:
		TNT1 A 1;
		TNT1 AAAA 0 A_SpawnItem("FrontBikeHitPuffStrong");
		//TNT1 A 0 A_SpawnItem("FrontBikeHitPuff")
		TNT1 A 0 A_Explode(2000,55,1);
		TNT1 A 20;
		Stop;
}
}
class HitFrontTerminalSpeed: HitFront { 
	Default {
	
	DamageType Extreme;
	}
	States
	{
	Death:
		TNT1 A 1;
		TNT1 AAAAA 0 A_SpawnItem("FrontBikeHitPuffStrong");
		TNT1 A 0 A_Explode(6000,55,1);
		TNT1 A 20;
		Stop;
	XDeath:
		TNT1 A 1;
		TNT1 AAAAA 0 A_SpawnItem("FrontBikeHitPuffStrong");
		//TNT1 A 0 A_SpawnItem("FrontBikeHitPuff")
		TNT1 A 0 A_Explode(6000,55,1);
		TNT1 A 20;
		Stop;
}
}
class SideBikeHitPuff: BulletPuff { 
	Default {
	
	renderstyle "Translucent";
	scale 0.15;
	alpha 0.7;
	+NOBLOCKMAP;
	+NOGRAVITY;
	+NOEXTREMEDEATH;
	+FORCEXYBILLBOARD;
	}
	States
	{
	Spawn:
	Death:
	XDeath:
	Melee:
		TNT1 A 0;
		TNT1 AAAAAA 0 A_CustomMissile ("CrashSparks", 2, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_CustomMissile ("CrashMetalShards", 2, 0, random (0, 360), 2, random (10, 50));
		TNT1 A 0 A_PlaySound("BIKECLW", 1);
		BPUF CD 1 bright;
		Stop;
}
}
class FrontBikeHitPuff: SideBikeHitPuff { 
	Default {
	
	}
	States
	{
	Spawn:
	Death:
	XDeath:
	Melee:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("EBIKECLS", 1);
		TNT1 AAA 0 A_CustomMissile ("CrashMetalShards", 2, 0, random (0, 360), 2, random (10, 50));
		TNT1 A 20;
		Stop;
}
}
class FrontBikeHitPuffStrong: SideBikeHitPuff { 
	Default {
	
	}
	States
	{
	Spawn:
	Death:
	XDeath:
	Melee:
		TNT1 A 0;
		TNT1 A 0 Radius_Quake(4, 12, 0, 4, 0);
		TNT1 A 0 A_PlaySound("EBIKECLS", 1);
		TNT1 AA 0 A_CustomMissile ("TireSmoke", 1, 0, random (0, 360), 2, random (30, 170));
		TNT1 AAAAAA 0 A_CustomMissile ("CrashMetalShards", 2, 0, random (0, 360), 2, random (10, 50));
		TNT1 A 20;
		Stop;
}
}
class LeftBikeHitPuff: SideBikeHitPuff { 
	Default {
	
	damagetype CrashLeft;
	}
	States
	{
	Spawn:
	Death:
	XDeath:
	Melee:
		TNT1 A 2;
		TNT1 A 0 Radius_Quake(3, 8, 0, 4, 0);
		TNT1 A 0 A_Explode(2,90,1);
		//TNT1 AA 0 A_CustomMissile ("CrashMetalShards", 2, 0, random (0, 360), 2, random (10, 50))
		TNT1 AAAA 0 A_CustomMissile ("CrashSparks", -32, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 20;
		Stop;
}
}
class RightBikeHitPuff: SideBikeHitPuff { 
	Default {
	
	damagetype CrashRight;
	}
	States
	{
	Spawn:
	Death:
	XDeath:
	Melee:
		TNT1 A 2;
		TNT1 A 0 Radius_Quake(3, 8, 0, 4, 0);
		TNT1 A 0 A_Explode(2,90,1);
		//TNT1 AA 0 A_CustomMissile ("CrashMetalShards", 2, 0, random (0, 360), 2, random (10, 50))
		TNT1 AAAAA 0 A_CustomMissile ("CrashSparks", -32, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 20;
		Stop;
}
}
class CrashSparks : actor { 
	Default {
	
	+MISSILE;
	speed 10;
	Gravity 0.8;
	-NOGRAVITY;
	Scale 0.05;
	radius 1;
	height 1;
	+DOOMBOUNCE;
	+GHOST;
	+THRUactorS;
	BounceFactor 0.5;
	Damage 0;
	alpha 1.0;
	renderstyle "Add";
	}
	States
	{
	Spawn:
		SPKO AAA 1 BRIGHT;
		SPKO AAAAAAA 1 Bright A_FadeOut(0.20);
		Stop;
	Death:
		TNT1 A 0;
		Stop;
}
}
class TireSmoke : actor { 
	Default {
	
	Radius 0;
	Height 0;
	Alpha 0.4;
	RenderStyle "Add";
	Speed 1;
	Scale 2.0;
	+NOBLOCKMAP;
	+NOTELEPORT;
	+DONTSPLASH;
	+MISSILE;
	+FORCEXYBILLBOARD;
	+CLIENTSIDEONLY;
	+THRUGHOST;
	+THRUactorS;
	Damage 0;
	+NOINTERACTION;
	}
	States
	{
	Spawn:
		SMOK A 0;
		Goto Death;
	Death:
		PUF2 ABCDEFGHIJKLMNOPQRSTUVWXYZ 3;
		PUF3 ABC 3;
		Stop;
}
}
class CrashMetalShards : actor { 
	Default {
	
	Radius 8;
	Height 8;
	Scale 0.2;
	Speed 16;
	Mass 1;
	gravity 0.5;
	BounceFactor 0.6;
	+DOOMBOUNCE;
	+MISSILE;
	+MOVEWITHSECTOR;
	+CLIENTSIDEONLY;
	+NOBLOCKMAP;
	+NOTELEPORT;
	+THRUactorS;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
		JNK1 ABCDEFGH 3;
		Loop;
	Death:
		JNK1 H 200;
		Stop;
}
}
class CrashPlayerStrong : actor { 
	Default {
	
	SeeSound "none";
	DeathSound "none";
	Decal "None";
	Damagetype "CrashStrong";
	Gravity 1.0;
	+FORCERADIUSDMG;
	Speed 1;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_Explode(20, 80, 1);
		TNT1 A 1;
		Stop;
}
}
class CrashPlayerDevastative : actor { 
	Default {
	
	SeeSound "none";
	DeathSound "none";
	Decal "None";
	Damagetype "CrashStrong";
	Gravity 1.0;
	Speed 1;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_Explode(35, 80, 1);
		TNT1 A 1;
		Stop;
}
}
class CrashPlayerSuicidal : actor { 
	Default {
	
	SeeSound "none";
	DeathSound "none";
	Decal "None";
	Damagetype "EXTREME";
	Gravity 1.0;
	Speed 1;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_Explode(1000, 80, 1);
		TNT1 A 1;
		Stop;
}
}
class CrashPlayerDelayed : actor { 
	Default {
	
	SeeSound "none";
	DeathSound "none";
	Decal "None";
	+NODAMAGETHRUST;
	Gravity 1.0;
	Speed 1;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Goto Death;
	Death:
		TNT1 A 3;
		TNT1 A 0 A_Explode(19, 80, 1);
		TNT1 A 1;
		Stop;
}
}
class CrashPlayerDelayedStrong: CrashPlayerDelayed { 
	Default {
	
	Damagetype "ExplosiveImpact";
	}
}
class CrashPlayerDelayedFatal: CrashPlayerDelayed { 
	Default {
	
	+EXTREMEDEATH;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Goto Death;
	Death:
		TNT1 A 3;
		TNT1 A 0 A_Explode(202, 80, 1);
		TNT1 A 1;
		Stop;
}
}
class KnockBike : actor { 
	Default {
	
	SeeSound "none";
	DeathSound "none";
	Decal "None";
	Damagetype "KnockBike";
	+FORCERADIUSDMG;
	Gravity 1.0;
	Speed 1;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		TNT1 A 0 A_Explode(9, 150, 1);
		TNT1 A 1;
		Stop;
}
}
class QuakeCamera : actor { 
	Default {
	
	SeeSound "none";
	DeathSound "none";
	Decal "None";
	+EXTREMEDEATH;
	Gravity 1.0;
	Speed 1;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Goto Death;
	Death:
		TNT1 A 1;
		EXPL A 0 Radius_Quake (9, 32, 0, 32, 0);// (intensity, duration, damrad, tremrad, tid)
		TNT1 A 0 A_Explode(1500, 256, 0);
		TNT1 A 32;
		Stop;
}
}
class QuakeCameraWeak: QuakeCamera { 
	Default {
	
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Goto Death;
	Death:
		TNT1 A 1;
		EXPL A 0 Radius_Quake (3, 8, 0, 32, 0);// (intensity, duration, damrad, tremrad, tid)
		TNT1 A 8;
		Stop;
}
}
class BikeBounceSound: QuakeCamera { 
	Default {
	
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Goto Death;
	Death:
		TNT1 A 1;
		TNT1 A 0 A_PlaySound("EBIKEBNC");
		TNT1 A 20;
		Stop;
}
}
class BikeBounceSound2: QuakeCamera { 
	Default {
	
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Goto Death;
	Death:
		TNT1 A 1;
		TNT1 A 0 A_PlaySound("EBIKECLS");
		TNT1 A 20;
		Stop;
}
}
class BikePieces1: CrashMetalShards { 
	Default {
	
	Speed 16;
	Mass 1;
	gravity 0.5;
	Scale 1.0;
	BounceFactor 0.4;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
		BCP1 ABCD 5;
		Loop;
	Death:
		BCP1 E 1000;
		BCP1 EEEEEEEEEEEEEEEE 1 A_FadeOut(0.1);
		Stop;
}
}
class BikePieces2: BikePieces1 { 
	Default {
	
	Speed 16;
	Mass 1;
	gravity 0.5;
	BounceFactor 0.4;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
		BCP1 DCBA 5;
		Loop;
	Death:
		BCP1 E 1000;
		BCP1 EEEEEEEEEEEEEEEE 1 A_FadeOut(0.1);
		Stop;
}
}
class BikePieces3: BikePieces1 { 
	Default {
	
	Speed 16;
	Mass 1;
	gravity 0.5;
	BounceFactor 0.4;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
		BCP2 ABCD 5;
		Loop;
	Death:
		BCP2 E 1000;
		BCP2 EEEEEEEEEEEEEEEE 1 A_FadeOut(0.1);
		Stop;
}
}
class BikePieces4: BikePieces1 { 
	Default {
	
	Speed 16;
	Mass 1;
	gravity 0.5;
	BounceFactor 0.4;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
		BCP3 ABCD 5;
		Loop;
	Death:
		BCP3 A 1000;
		BCP3 AAAAAAAAAAAAAAAAAAAAAA 1 A_FadeOut(0.1);
		Stop;
}
}
class CrashTankIntotheGround1 : actor { 
	Default {
	
	SeeSound "none";
	DeathSound "none";
	Decal "None";
	Damagetype "Stomp";
	Gravity 1.0;
	+FORCERADIUSDMG;
	Speed 1;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_Explode(5000, 130, 0);
		TNT1 A 1;
		Stop;
}
}
class CrashTankIntotheGround2 : actor { 
	Default {
	
	SeeSound "none";
	DeathSound "none";
	Decal "None";
	Damagetype "Kick";
	Gravity 1.0;
	Speed 1;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_Explode(30, 220, 0);
		TNT1 A 1;
		Stop;
}
}
class LightTankReady : CustomInventory { 
	Default {
class LightTankTurretNotReal: TankBaseNotReal { 
	Default {
		
		Scale 1.25;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TN2M T 1;
			Stop;
}}
class LightTankTurretNotReal2: LightTankTurretNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TN2M T 2;
			Stop;
}}
class LightTankTurretNotReal4: LightTankTurretNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TN2M T 4;
			Stop;
}}
class LightTankTurretNotReal8: LightTankTurretNotReal { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TN2E T 8;
			Stop;
}}
class LightTank: SwitchableDecoration 7264 { 
	Default {
		
		var int user_stationedTankBasedirection;
		Radius 48;
		Height 96;
		+SOLID;
		+USESPECIAL;
		MONSTER;
		-COUNTKILL;
		+SHOOTABLE;
		+LOOKALLAROUND;
		+THRUactorS;
		+NOINFIGHTING;
		+NORADIUSDMG;
		-COUNTKILL;
		damagefactor "stomp", 0;
		MaxTargetRange 120;
		PainChance "Repair", 255;
		BloodType "TankBlood", "TankBlood", "TankBlood";
		Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial;
		Mass 9999;
		Speed 0;
		health 1000;
		Scale 1.25;
		damagefactor "Repair", 1.0 damagefactor "CheckRepair", 0.0;
		damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0;
		damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0;
		damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0;
		damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0;
		damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0;
		DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0;
		DamageFactor "LightTankWeakSpot", 3.0 damagefactor "Plasma", 1.5 damagefactor "Plasma2", 1.5;
		damagefactor "Desintegrate", 3.0;
	}
	States
	{
		Spawn:
			TNT1 A 1;
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 ACS_ExecuteAlways(137, 0, 0, 0, 0);//Check vehicle initial angle.
			TNT1 A 0 A_SpawnItem("LightTankTurretNotReal8");
			TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
			TNT1 A 5();
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNK1 C 0 A_ChangeFlag("THRUactorS", 0);
			TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
			Goto StandingHere;
		StandingHere:
			TNT1 A 0;
			TNT1 A 0 ACS_ExecuteAlways(136, 0, 0, 0, 0);//SpawnVehicleBase
			TNT1 A 0 A_SpawnItem("LightTankTurretNotReal8");
			TNT1 A 7;
			TNT1 A 0 A_SpawnItem("StationedVehicleCheckRepairs");
			Loop;
		Active:
			TNT1 A 0();
			TNK1 C 0 A_ChangeFlag("FRIENDLY", 0);
			//TNT1 A 0 A_Look
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health	
			//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
			TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
			TNT1 A 0 A_SpawnItem("LightTankTurretNotReal8");
			TNT1 A 3;
			TNT1 A 0 A_GiveToTarget("LightTankMorpher", 1);
			TNT1 A 0 A_GiveToTarget("HeavyMachinegunammo", 1000);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 A_NoBlocking();
			TNT1 A 1;
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 10;
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNT1 A 1;
			Stop;
		Death:
			TNT1 A 1;
			TNT1 A 0 A_SpawnItem("BigExplosion1112");
			TNT1 A 0 A_PlaySound("weapons/explode");
			TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 0 A_Scream();
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
			NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
			ELEC A 0 A_Explode(100, 250);
			TNT1 A 15;
			TNT1 A 0;
			Stop;
		Pain.Repair:
			TNT1 A 0;
			TNT1 A 0 A_ChangeFLag("NOPAIN", 1);
			TNT1 A 0 HealThing(5);
			TN2E T 1;
			TNT1 A 0 HealThing(5);
			TNT1 A 0 A_ChangeFLag("NOPAIN", 0);
			Goto StandingHere;
	}
}
class LightTankUsed: LightTank { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 1;
			TNT1 A 0 ACS_ExecuteAlways(136, 0, 0, 0, 0);//SpawnVehicleBase
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 1 A_ChangeFlag("FRIENDLY", 0);
			TNT1 A 5();
			TNT1 A 0 Thing_ChangeTID(0, 0);
			TNK1 C 0 A_ChangeFlag("THRUactorS", 0);
			TNT1 A 0 A_ChangeFlag("FRIENDLY", 1);
			TNT1 A 0 ACS_Execute(129);
			Goto StandingHere;
		IsOnline:
			TNT1 A 0;
			TNT1 A 1;
			TNT1 A 0 A_TAkeInventory("TankBaseDirection", 500);
			Goto StandingHere;
		Active:
			TNT1 A 0();
			TTR1 A 0 A_ChangeFlag("FRIENDLY", 0);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 ACS_ExecuteAlways(130, 0, 0, 0, 0);//Check Vehicle Health
			//TNT1 A 0 A_Chase("","",CHF_DONTMOVE )
			TNT1 A 0 A_GiveToTarget("CheckingMorphingPlayerHealth", 1);
			TNT1 A 3;
			TNT1 A 0 A_GiveToTarget("LightTankMorpher", 1);
			TNT1 A 0 Thing_ChangeTID(0, 261);
			TNT1 A 0 A_NoBlocking();
			TNT1 A 1;
			TNT1 A 0 A_ChangeFlag("USESPECIAL", 0);
			TNT1 A 10;
			TNT1 A 0 Thing_ChangeTID(0, 0);
			Stop;
	}
}
class PowerLightTankSwitch : PowerMorph {PowerMorph.Playerclass "PlayerLightTank"} { 
	Default {
	actor LightTankMorpher : CustomInventory 
		
	}
	States
	{
	PickUp:
		TNT1 A 1;
		TNT1 A 0 ACS_ExecuteAlways(134, 0, 0, 0, 0);//Get into LightTank
		TNT1 A 0 A_GiveInventory("LightTankMorphActivation");
		TNT1 A 0 A_SpawnItem("CancelTeleportFog");
		TNT1 A 1;
		Stop;
}
}
class LightTankMorphActivation : PowerupGiver { 
	Default {
	
	Powerup.Type "PowerLightTankSwitch";
	Powerup.Duration 252000;
	+Inventory.AUTOACTIVATE;
	+Inventory.ALWAYSPICKUP;
	Inventory.MaxAmount 1;
	Health 100;
	GibHealth 1;
	Mass 9999;
	Height 96;
	Radius 32;
	}
	States
	{
	Spawn:
		TNT1 A 100;
		Stop;
	PickUp:
		TNT1 A 1;
		TNT1 A 1;
		Stop;
}
}
class PlayerLightTank : PlayerPawn { 
	Default {
	
	var int user_TankBasedirection;
	Speed 0;
	Scale 1.25;
	Radius 48;
	Height 96;
	Mass 9999;
	PainChance 0;
	health 1000;
	-PICKUP;
	Speed 0.01;
	player.viewheight90;
	player.attackzoffset 90;
	MaxStepHeight 32;
	Player.Morphweapon "LightTankGun";
	Player.JumpZ 0;
	BloodType "TankBlood", "TankBlood", "TankBlood";
	damagefactor "stomp", 0;
	+NOSKIN;
	+NORADIUSDMG;
	+FORCERADIUSDMG;
	+FIXMAPTHINGPOS;
	+DONTRIP;
	-CANUSEWALLS;
	-PICKUP;
	DamageFactor "Repair", 0.0 damagefactor "CheckRepair", 0.0;
	damagefactor "Head", 0.0damagefactor "FriendBullet", 0.0    damagefactor "Taunt", 0.0    damagefactor "KillMe", 0.0;
	damagefactor "Shotgun", 0.7    damagefactor "Shrapnel", 0.0    damagefactor "Blood", 0.0    damagefactor "BlueBlood", 0.0;
	damagefactor "GreenBlood", 0.0    damagefactor "MinorHead", 0.0    damagefactor "Decaptate", 0.0damagefactor "MonsterKnocked", 0.0;
	damagefactor "CancelTeleportFog", 0.0damagefactor "BHFTOnBarrel", 0.0damagefactor "GibRemoving", 0.0damagefactor "SuperPunch", 5.0;
	damagefactor "HelperMarineFatallity", 0.0damagefactor "Leg", 0.0damagefactor "SpawnMarine", 0.0damagefactor "TeleportRemover", 0.0;
	DamageFactor "CauseObjectsToSplash", 0.0 DamageFactor "Trample", 0.0;
	DamageFactor "LightTankWeakSpot", 3.0 damagefactor "Plasma", 1.5 damagefactor "Plasma2", 1.5;
	damagefactor "Desintegrate", 3.0;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 ThrustTHingZ(0, 100, -1, 1);
		TNK1 A 1;
	Spawn2:
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("Accelerate", 1);
		TNT1 A 0 A_TakeInventory("BackPedal", 1);
		TNT1 A 0 ACS_ExecuteAlways(877, 0, 0, 0, 0);
		TNK1 A 1;
		TNT1 A 0 A_SpawnItemEx ("LightTankTurretNotReal4" , 0, 0, -90, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNK1 AAAA 1 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, -90, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItemEx ("LightTankTurretNotReal4" , 0, 0, -90, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNK1 AAAA 1 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, -90, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("FiredLightTankMainGun", 1);
		TNT1 A 0 A_Print (a, 4, "TUTO5");
		Goto Stay;
	ExitVehicle:
		TNT1 A 1;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_SpawnItemEx ("TransferPlayerOutOfVehicle", 0, 0, 110);
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("CanLeaveVehicle", 1, "CanExit");
		TNT1 A 0 A_Print("Can't leave from this direction", 1);
		Goto Stay;
	CanExit:
		TNT1 A 0;
		TNT1 A 2;
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("CanLeaveVehicle", 1);
		TNT1 A 0 ACS_Execute(135);
		TNT1 A 0 ACS_Execute(871);
		TNT1 A 0 A_SpawnItemEx ("LightTankUsed", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
		Goto FinishExit;
	FinishExit:
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		TNT1 AAA 10 A_TakeInventory("PressedUse", 1);
		TNT1 A 0 A_TakeInventory("PressedUse", 1);
		Goto Stay;
	TurnLeft:
		TNT1 A 0 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNK1 A 1;
		TNT1 A 0 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIf(user_TankBasedirection > 359, "TurnLeft2");
		TNT1 A 0 A_SetUserVar("user_TankBasedirection", user_TankBasedirection+6);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
	TurnLeft2:
		TNT1 A 0 A_SetUserVar("user_TankBasedirection", 0);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
	TurnRight:
		TNT1 A 0 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNK1 A 1;
		TNT1 A 0 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIf(user_TankBasedirection == 0, "TurnRIght2");
		TNT1 A 0 A_SetUserVar("user_TankBasedirection", user_TankBasedirection-6);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		Goto CheckIfStillMoves;
	TurnRight2:
		TNT1 A 0 A_SetUserVar("user_TankBasedirection", 360);
		TNT1 A 0 A_TakeInventory("TurnRight", 1);
		TNT1 A 0 A_TakeInventory("TurnLeft", 1);
		Goto CheckIfStillMoves;
	CheckIfStillMoves:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		TNT1 A 0 A_StopSound(2);
		TNT1 A 0 A_PlaySound("Tank2", 5, 1, 1);
		TNT1 A 0 A_PlaySound("Tank3", 2);
	Stay:
		TNT1 A 0;
		TNT1 A 0();
		TNT1 A 0 A_PlaySound("Tank2", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNK1 A 1;
		Goto Stay;
	Pain.TracksDamaged:
		TNT1 A 0;
		TNT1 A 0();
		TNT1 A 0 A_Jump(32, "DestroyTracks");
		TNT1 A 0 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "ExitVehicle");
		TNT1 A 0 A_JumpIfInventory("BackPedal", 1, "BackPedal");
		TNT1 A 0 A_JumpIfInventory("Accelerate", 1, "Accelerate");
		TNK1 A 1;
		Goto Stay;
	Accelerate:
		TNT1 A 0 A_PlaySound("Tank1", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankTreadsDamage" , 100, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_TankBasedirection*256/360, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving3" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_TankBasedirection*256/360, 2, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving2" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnRight");
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_TankBasedirection*256/360, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
	Backpedal:
		TNT1 A 0 A_PlaySound("Tank1", 5, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankTreadsDamage" , -100, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY);
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_TankBasedirection*256/360+128, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving3" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_TankBasedirection*256/360+128, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving2" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIfInventory("TurnRight", 1, "TurnLeft");
		TNT1 A 0 A_JumpIfInventory("TurnLeft", 1, "TurnRight");
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 ThrustThing(user_TankBasedirection*256/360+128, 1, 1);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIF(velz < 0, "Falling");
		Goto CheckIfStillMoves;
	Falling:
		TNT1 A 0;
		TNT1 A 0 A_CheckFloor("CheckIfStillMoves");
	FallingForReal:
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_JumpIF(velz == 0, "CrashIntoGround");
		TNT1 A 0 A_GiveInventory("VehicleFallingCount", 1);
		Loop;
	CrashIntoGround:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("VehicleFallingCount", 6, "CrashIntoGroundViolently");
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItem("CrashLightTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashLightTankIntotheGround2");
		TNT1 A 0 Radius_Quake(1, 6, 0, 4, 0);
		TNT1 A 0 A_PlaySound("EBIKEBNC", 2);
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		Goto Stay;
	CrashIntoGroundViolently:
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SpawnItem("CrashLightTankIntotheGround1");
		TNT1 A 0 A_SpawnItem("CrashLightTankIntotheGround2");
		TNT1 A 0 Radius_Quake(8, 24, 0, 4, 0);
		TNT1 A 0 A_PlaySound("BIKECLW", 1);
		TNT1 A 0 A_PlaySound("EBIKECLS", 2);
		TNT1 AAAA 0 A_CustomMissile ("ExplosionSmoke", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 A 0 A_TakeInventory("VehicleFallingCount", 100);
		TNT1 A 0 A_SetPitch(-8.0 + pitch);
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		TNK1 A 1 A_SpawnItemEx ("LightTankTurretNotReal" , 0, 0, 0, 0, 0, 0, 0, SXF_ABSOLUTEVELOCITY);
		TNT1 A 0 A_SpawnItemEx ("TankBaseNotRealMoving1" , 0, 0, 0, 0, 0, 0, user_TankBasedirection, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE);
		TNT1 A 0 A_SetPitch(4.0 + pitch);
		Goto Stay;
	Death:
	XDeath:
		TNT1 A 0 ACS_ExecuteAlways(871, 0, 0, 0, 0);
		TNT1 A 1;
		TNT1 A 0 A_SpawnItem("BigExplosion1112");
		TNT1 A 0 A_PlaySound("weapons/explode");
		TNT1 A 0 A_PlaySound("EXPLOSIO", 3);
		TNT1 A 0 A_Scream();
		TNT1 A 0 A_NoBlocking();
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle1", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAA 0 A_CustomMissile ("MetalTrashParticle2", 96, 0, random (0, 360), 2, random (0, 180));
		NULL AAAAAAAAA 0 A_CustomMissile ("GlassShard", 96, 0, random (0, 360), 2, random (0, 360));
		ELEC A 0 A_Explode(100, 250);
		TNT1 A 0 A_SpawnItem("DestroyedArmouredVehicle");
		8762 A 5;
		TNT1 A 0 A_TakeInventory("LightTankGun", 1);
		8762 A 100;
		8762 A -1;
		Stop;
}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Vehicle's weapons and misc
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class LightTankGun : Doomweapon { 
	Default {
	
	Weapon.SelectionOrder 1900;
	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 0;
	Weapon.AmmoType1 "HeavyMachinegunammo";
	Obituary "$OB_MPPISTOL";
	+WEAPON.Ammo_OPTIONAL;
	+WEAPON.ALT_ammo_OPTIONAL;
	//+WEAPON.NOAUTOFIRE
	Inventory.PickupMessage "$PICKUP_PISTOL_DROPPED";
	Tag "$TAG_PISTOL";
	}
	States
	{
	Ready:
		TNT1 A 0;
		//TNT1 A 0 A_JumpIfInventory("PressedJump", 1, "ZoomMode")
		TNT1 A 0 A_GunFlash();
		TNT1 A 1 A_WeaponReady(1);
		TNT1 A 0 A_GiveInventory("LightTankReady", 1);
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck2");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck2");
		Loop;
	ZoomMode:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("LightTankZoom", 1, "StopZoom");
		TNT1 A 0 A_ZoomFactor(5.0);
		TNT1 A 0 A_GiveInventory("LightTankZoom");
		TNT1 A 10;
		TNT1 A 0 A_TakeInventory("PressedJump", 1);
		Goto Ready;
	StopZoom:
		TNT1 A 1;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 A_TakeInventory("LightTankZoom", 1);
		TNT1 A 10;
		TNT1 A 0 A_TakeInventory("PressedJump", 1);
		Goto Ready;
	NotReady:
		TNT1 A 1 A_GiveInventory("LightTankReady", 1);
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		Goto Ready;
	DeSelect:
		TNT1 A 1 A_Lower();
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 SetPlayerProperty(0,0,4);
		Loop;
	Select:
		TNHD AAAAAAAAAAAA 0 A_Raise();
		TNT1 A 0 SetPlayerProperty(0,1,4);
		TNT1 A 1 A_TakeInventory("PressedUse", 1);
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNHD AAAAA 1 A_Raise();
		TNT1 A 1 A_TakeInventory("PressedJump", 2);
		TNT1 A 0;
		Goto Ready;
	Noammo:
		TNT1 A 10;
		Goto Ready;
	Fire:
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_JumpIfInventory("HeavyMachinegunammo", 1, 1);
		Goto Noammo;
		TNT1 A 0 A_PlaySound("ACANO1", 1);
		TNT1 A 0 A_PlaySound("ACANO2", 14);
		TNT1 A 0 A_FireCustomMissile("AutoCannonProjectile", 0, 1, -20, -35, 0, 0);
		TNT1 AAAA 0 A_FireCustomMissile("AutoCannonFlash", 0, 1, -20, -53);
		TNT1 A 0 A_TakeInventory("HeavyMachinegunammo", 1);
		TNHA A 1 BRIGHT;
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 A_GiveInventory("LightTankReady", 1);
		TNHA BC 1 A_GiveInventory("LightTankReady", 1);
		TNT1 A 0 A_GunFlash();
		TNHD A 1 A_GiveInventory("LightTankReady", 1);
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 ACS_ExecuteAlways(111, 0, 0, 0, 0);//SHOWHUD
		TNT1 A 0 A_JumpIfInventory("HeavyMachinegunammo", 1, 1);
		Goto Noammo;
		TNT1 A 0 A_PlaySound("ACANO1", 1);
		TNT1 A 0 A_PlaySound("ACANO2", 14);
		TNT1 A 0 A_FireCustomMissile("AutoCannonProjectile", 0, 1, 20, -35, 0, 0);
		TNT1 AAAA 0 A_FireCustomMissile("AutoCannonFlash", 0, 1, 20, -53);
		TNT1 A 0 A_TakeInventory("HeavyMachinegunammo", 1);
		TNHA A 1 BRIGHT;
		TNT1 A 0 A_GunFlash();
		TNT1 A 0 A_GiveInventory("LightTankReady", 1);
		TNHA BC 1 A_GiveInventory("LightTankReady", 1);
		TNT1 A 0 A_GunFlash();
		TNHD A 1 A_GiveInventory("LightTankReady", 1);
		TNT1 A 0 A_ReFire();
		Goto Ready;
	TooHigh2:
		TNT1 A 0 A_SetPitch(326);
		Goto Ready;
	TooLowCheck2:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1")
		TNT1 A 0 A_SetPitch(16);
		Goto Ready;
	TooHighCheck2:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 325, "TooHigh2");
		Goto Ready;
	TooHigh:
		TNT1 A 0 A_SetPitch(326);
		Goto Flash;
	TooLowCheck1:
		//NULL A 0 A_JumpIf (pitch > 180, "TooHighCheck1")
		TNT1 A 0 A_SetPitch(16);
		Goto Flash;
	TooHighCheck1:
		TNT1 A 0;
		NULL A 0 A_JumpIf (pitch < 325, "TooHigh");
		Goto Flash;
	Flash:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("PressedUse", 1, "LightEnd");
		NULL A 0 A_JumpIf (pitch > 220, "TooHighCheck1");
		NULL A 0 A_JumpIf (pitch > 16, "TooLowCheck1");
		Stop;
	LightEnd:
		TNT1 A 10;
		Stop;
	Spawn:
		LAUN A -1;
		Stop;
}
}
